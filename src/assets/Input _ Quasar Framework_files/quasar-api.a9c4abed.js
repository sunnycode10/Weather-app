(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[5],{"00f5":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/layout/header-and-footer"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"value":{"type":"Boolean","desc":"Model of the component defining if it is shown or hidden to the user; Either use this property (along with a listener for \'input\' event) OR use v-model directive","default":true,"examples":["v-model=\\"headerState\\""],"category":"model"},"reveal":{"type":"Boolean","desc":"Enable \'reveal\' mode; Takes into account user scroll to temporarily show/hide header","category":"behavior"},"reveal-offset":{"type":"Number","desc":"Amount of scroll (in pixels) that should trigger a \'reveal\' state change","default":250,"examples":[":reveal-offset=\\"500\\""],"category":"behavior"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style"},"elevated":{"type":"Boolean","desc":"Adds a default shadow to the header","category":"style"},"height-hint":{"type":["Number","String "],"desc":"When using SSR, you can optionally hint of the height (in pixels) of the QHeader","default":50,"examples":["150"],"category":"behavior","addedIn":"v1.1.0"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component; Suggestion: QToolbar"}},"events":{"reveal":{"desc":"Emitted when \'reveal\' state gets changed","params":{"value":{"type":"Boolean","desc":"New \'reveal\' state"}}}}}')},"05c9":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/resize-observer"},"props":{"debounce":{"type":["String","Number"],"desc":"Debounce amount (in milliseconds)","default":100,"examples":["0","530"],"category":"behavior"}},"events":{"resize":{"desc":"Parent element has resized (width or height changed)","params":{"size":{"type":"Object","desc":"New size","definition":{"height":{"type":"Number","desc":"Layout height","examples":[822]},"width":{"type":"Number","desc":"Layout width","examples":[822]}}}}}},"methods":{"trigger":{"desc":"Emit a \'resize\' event","params":{"immediately":{"type":"Boolean","desc":"Skip over the debounce amount"}}}}}')},"079e":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/layout/page"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"padding":{"type":"Boolean","desc":"Applies a default responsive page padding","category":"content"},"style-fn":{"type":"Function","desc":"Override default CSS style applied to the component (sets minHeight); Function(offset: Number) => CSS props/value: Object; For best performance, reference it from your scope and do not define it inline","params":{"offset":{"type":"Number","desc":"Header + Footer height (in pixels)","examples":[152]},"height":{"type":"Number","desc":"Value in pixels of container height (if containerized) or window height otherwise","examples":[1200],"addedIn":"v1.7.4"}},"returns":{"type":"Object","desc":"Object with CSS properties to apply to Page DOM element"},"default":"(see source code)","examples":["(see source code)"],"category":"style"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},"0876":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/timeline"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"tag":{"type":"String","desc":"Tag to use, if of type \'heading\' only","default":"h3","category":"content","examples":["h1"]},"heading":{"type":"Boolean","desc":"Defines a heading timeline item","category":"content"},"side":{"type":"String","desc":"Side to place the timeline entry; Works only if QTimeline layout is loose.","default":"right","values":["left","right"],"category":"behavior"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"avatar":{"type":"String","desc":"URL to the avatar image; Icon takes precedence if used, so it replaces avatar","transformAssetUrls":true,"examples":["(statics folder) src=\\"statics/img/my-bg.png\\"","(assets folder) src=\\"~assets/my-img.png\\"","(relative path format) :src=\\"require(\'./my_img.jpg\')\\"","(URL) src=\\"https://placeimg.com/500/300/nature\\""],"category":"content"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"title":{"type":"String","desc":"Title of timeline entry; Is overridden if using \'title\' slot","examples":["December party"],"category":"content"},"subtitle":{"type":"String","desc":"Subtitle of timeline entry; Is overridden if using \'subtitle\' slot","examples":["All invited"],"category":"content"},"body":{"type":"String","desc":"Body content of timeline entry; Use this prop or the default slot","examples":["Lorem ipsum dolor sit amet, consectetur adipisicing elit."],"category":"content"}},"slots":{"default":{"desc":"Timeline entry content (body)"},"title":{"desc":"Optional slot for title; When used, it overrides \'title\' prop"},"subtitle":{"desc":"Optional slot for subtitle; When used, it overrides \'subtitle\' prop"}}}')},"0c97":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/select"},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms; If not specified, it takes the value of \'for\' prop, if it exists","examples":["car_id","car_id"],"category":"behavior","addedIn":"v1.9.0"},"virtual-scroll-horizontal":{"type":"Boolean","desc":"Make virtual list work in horizontal mode","category":"behavior"},"virtual-scroll-slice-size":{"type":"Number","desc":"Number of options to render in the virtual list","default":"30","examples":[":virtual-scroll-slice-size=\\"60\\""],"category":"virtual-scroll"},"virtual-scroll-item-size":{"type":"Number","desc":"Default size in pixels (height if vertical, width if horizontal) of an option; This value is used for rendering the initial list; Try to use a value close to the minimum size of an item","default":"24","examples":[":virtual-scroll-item-size=\\"48\\""],"category":"virtual-scroll"},"virtual-scroll-sticky-size-start":{"type":"Number","desc":"Size in pixels (height if vertical, width if horizontal) of the sticky part (if using one) at the start of the list; A correct value will improve scroll precision","default":"0","examples":[":virtual-scroll-sticky-size-start=\\"48\\""],"category":"virtual-scroll"},"virtual-scroll-sticky-size-end":{"type":"Number","desc":"Size in pixels (height if vertical, width if horizontal) of the sticky part (if using one) at the end of the list; A correct value will improve scroll precision","default":"0","examples":[":virtual-scroll-sticky-size-end=\\"48\\""],"category":"virtual-scroll"},"error":{"type":"Boolean","desc":"Does field have validation errors?","category":"behavior"},"error-message":{"type":"String","desc":"Validation error message (gets displayed only if \'error\' is set to \'true\')","examples":["Username must have at least 5 characters"],"category":"content"},"no-error-icon":{"type":"Boolean","desc":"Hide error icon when there is an error","category":"content"},"rules":{"type":"Array","desc":"Array of Functions/Strings; If String, then it must be a name of one of the embedded validation rules","examples":[":rules=\\"[ val => val.length <= 3 || \'Please use maximum 3 characters\' ]\\"",":rules=\\"[ \'fulltime\' ]\\""],"category":"behavior"},"reactive-rules":{"type":"Boolean","desc":"By default a change in the rules does not trigger a new validation until the model changes; If set to true then a change in the rules will trigger a validation; Has a performance penalty, so use it only when you really need it","category":"behavior","addedIn":"v1.11.0"},"lazy-rules":{"type":["Boolean","String"],"desc":"If set to boolean true then it checks validation status against the \'rules\' only after field loses focus for first time; If set to \'ondemand\' then it will trigger only when component\'s validate() method is manually called or when the wrapper QForm submits itself","values":["(Boolean) true","(Boolean) false","ondemand"],"category":"behavior"},"label":{"type":"String","desc":"A text label that will “float” up above the input field, once the field gets focus","examples":["Username"],"category":"content"},"stack-label":{"type":"Boolean","desc":"Label will be always shown above the field regardless of field content (if any)","category":"content"},"hint":{"type":"String","desc":"Helper (hint) text which gets placed below your wrapped form component","examples":["Fill in between 3 and 12 characters"],"category":"content"},"hide-hint":{"type":"Boolean","desc":"Hide the helper (hint) text when field doesn\'t have focus","category":"content"},"prefix":{"type":"String","desc":"Prefix","examples":["$"],"category":"content"},"suffix":{"type":"String","desc":"Suffix","examples":["@gmail.com"],"category":"content"},"label-color":{"type":"String","desc":"Color name for the label from the Quasar Color Palette; Overrides the \'color\' prop; The difference from \'color\' prop is that the label will always have this color, even when field is not focused","examples":["primary","teal-10"],"category":"style","addedIn":"v1.7.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"bg-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"loading":{"type":"Boolean","desc":"Signals the user a process is in progress by displaying a spinner; Spinner can be customized by using the \'loading\' slot.","category":"behavior|content"},"clearable":{"type":"Boolean","desc":"Appends clearable icon when a value (not undefined or null) is set; When clicked, model becomes null","category":"behavior|content"},"clear-icon":{"type":"String","desc":"Custom icon to use for the clear button when using along with \'clearable\' prop","examples":["close"],"category":"content"},"filled":{"type":"Boolean","desc":"Use \'filled\' design for the field","category":"style"},"outlined":{"type":"Boolean","desc":"Use \'outlined\' design for the field","category":"style"},"borderless":{"type":"Boolean","desc":"Use \'borderless\' design for the field","category":"style"},"standout":{"type":["Boolean","String"],"desc":"Use \'standout\' design for the field; Specifies classes to be applied when focused (overriding default ones)","examples":["standout","standout=\\"bg-primary text-white\\""],"category":"style"},"label-slot":{"type":"Boolean","desc":"Enables label slot; You need to set it to force use of the \'label\' slot if the \'label\' prop is not set","category":"content","addedIn":"v1.12.9"},"bottom-slots":{"type":"Boolean","desc":"Enables bottom slots (\'error\', \'hint\', \'counter\')","category":"content"},"hide-bottom-space":{"type":"Boolean","desc":"Do not reserve space for hint/error/counter anymore when these are not used; As a result, it also disables the animation for those; It also allows the hint/error area to stretch vertically based on its content","category":"style"},"counter":{"type":"Boolean","desc":"Show an automatic counter on bottom right","category":"content"},"rounded":{"type":"Boolean","desc":"Applies a small standard border-radius for a squared shape of the component","category":"style"},"square":{"type":"Boolean","desc":"Remove border-radius so borders are squared; Overrides \'rounded\' prop","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"item-aligned":{"type":"Boolean","desc":"Match inner content alignment to that of QItem","category":"style"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"autofocus":{"type":"Boolean","desc":"Focus field on initial component render","category":"behavior"},"for":{"type":"String","desc":"Used to specify the \'id\' of the control and also the \'for\' attribute of the label that wraps it; If no \'name\' prop is specified, then it is used for this attribute as well","examples":["myFieldsId"],"category":"behavior","addedIn":"v1.4.2"},"value":{"type":["Number","String","Array"],"desc":"Model of the component; Must be Array if using \'multiple\' prop; Either use this property (along with a listener for \'input\' event) OR use v-model directive","required":true,"examples":["v-model=\\"myModel\\""],"category":"model"},"multiple":{"type":"Boolean","desc":"Allow multiple selection; Model must be Array","category":"model|selection"},"display-value":{"type":["Number","String"],"desc":"Override default selection string, if not using \'selected\' slot/scoped slot and if not using \'use-chips\' prop","examples":["Options: x, y, z"],"category":"selection"},"display-value-sanitize":{"type":"Boolean","default":"false","desc":"Force use of textContent instead of innerHTML to render selected option(s); Use it when the selected option(s) might be unsafe (from user input); Does NOT apply when using \'selected\' or \'selected-item\' slots!","category":"selection"},"options":{"type":"Array","desc":"Available options that the user can select from. For best performance freeze the list of options.","default":"[]","examples":[":options=\\"[ \'BMW\', \'Samsung Phone\' ]\\"",":options=\\"[ { label: \'BMW\', value: \'car\' }, { label: \'Samsung Phone\', value: \'phone\' } ]\\""],"category":"options"},"option-value":{"type":["Function","String"],"desc":"Property of option which holds the \'value\'; If using a function then for best performance, reference it from your scope and do not define it inline","default":"value","examples":["option-value=\\"modelNumber\\"",":option-value=\\"(item) => item === null ? null : item.modelNumber\\""],"category":"options"},"option-label":{"type":["Function","String"],"desc":"Property of option which holds the \'label\'; If using a function then for best performance, reference it from your scope and do not define it inline","default":"label","examples":["option-label=\\"itemName\\"",":option-label=\\"(item) => item === null ? \'Null value\' : item.itemName\\""],"category":"options"},"option-disable":{"type":["Function","String"],"desc":"Property of option which tells it\'s disabled; The value of the property must be a Boolean; If using a function then for best performance, reference it from your scope and do not define it inline","default":"disable","examples":["option-disable=\\"cannotSelect\\"",":option-disable=\\"(item) => item === null ? true : item.cannotSelect\\""],"category":"options"},"hide-selected":{"type":"Boolean","desc":"Hides selection; Use the underlying input tag to hold the label (instead of showing it to the right of the input) of the selected option; Only works for non \'multiple\' Selects","category":"selection"},"hide-dropdown-icon":{"type":"Boolean","desc":"Hides dropdown icon","category":"content|behavior"},"dropdown-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"max-values":{"type":["Number","String"],"desc":"Allow a maximum number of selections that the user can do","examples":["5"],"category":"selection"},"options-dense":{"type":"Boolean","desc":"Dense mode for options list; occupies less space","category":"options"},"options-dark":{"type":"Boolean","desc":"Options menu will be colored with a dark color","category":"options"},"options-selected-class":{"type":"String","desc":"CSS class name for options that are active/selected; Set it to an empty string to stop applying the default (which is text-* where * is the \'color\' prop value)","examples":["text-orange"],"category":"options"},"options-sanitize":{"type":"Boolean","default":"false","desc":"Force use of textContent instead of innerHTML to render options; Use it when the options might be unsafe (from user input); Does NOT apply when using \'option\' slot!","category":"options"},"options-cover":{"type":"Boolean","desc":"Expanded menu will cover the component (will not work along with \'use-input\' prop for obvious reasons)","category":"options"},"menu-shrink":{"type":"Boolean","desc":"Allow the options list to be narrower than the field (only in menu mode)","category":"options","addedIn":"v1.9.2"},"menu-anchor":{"type":"String","desc":"Two values setting the starting position or anchor point of the options list relative to the field (only in menu mode)","values":["top left","top middle","top right","center left","center middle","center right","bottom left","bottom center","bottom right"],"examples":["top left","bottom right"],"category":"position","addedIn":"v1.9.2"},"menu-self":{"type":"String","desc":"Two values setting the options list\'s own position relative to its target (only in menu mode)","values":["top left","top middle","top right","center left","center middle","center right","bottom left","bottom center","bottom right"],"examples":["top left","bottom right"],"category":"position","addedIn":"v1.9.2"},"menu-offset":{"type":"Array","desc":"An array of two numbers to offset the options list horizontally and vertically in pixels (only in menu mode)","examples":["[8, 8]","[5, 10]"],"category":"position","addedIn":"v1.9.2"},"popup-content-class":{"type":"String","desc":"Class definitions to be attributed to the popup content","examples":["my-special-class"],"category":"style"},"popup-content-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the popup content","examples":["background-color: #ff0000",":content-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style"},"use-input":{"type":"Boolean","desc":"Use an input tag where users can type","category":"content"},"use-chips":{"type":"Boolean","desc":"Use QChip to show what is currently selected","category":"selection"},"fill-input":{"type":"Boolean","desc":"Fills the input with current value; Useful along with \'hide-selected\'; Does NOT works along with \'multiple\' selection","category":"behavior"},"new-value-mode":{"type":"String","desc":"Enables creation of new values and defines behavior when a new value is added: \'add\' means it adds the value (even if possible duplicate), \'add-unique\' adds only unique values, and \'toggle\' adds or removes the value (based on if it exists or not already); When using this prop then listening for @new-value becomes optional (only to override the behavior defined by \'new-value-mode\')","values":["add","add-unique","toggle"],"category":"behavior"},"map-options":{"type":"Boolean","desc":"Try to map labels of model from \'options\' Array; has a small performance penalty; If you are using emit-value you will probably need to use map-options to display the label text in the select field rather than the value;  Refer to the \'Affecting model\' section above","category":"options"},"emit-value":{"type":"Boolean","desc":"Update model with the value of the selected option instead of the whole option","category":"model"},"input-debounce":{"type":["Number","String"],"desc":"Debounce the input model update with an amount of milliseconds","default":500,"examples":[650],"category":"content"},"input-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the underlying input tag","examples":["my-special-class",":input-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style","addedIn":"v1.1.7"},"input-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the underlying input tag","examples":["background-color: #ff0000",":input-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style","addedIn":"v1.1.7"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"},"transition-show":{"type":"String","desc":"Transition when showing the menu/dialog; One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"fade"},"transition-hide":{"type":"String","desc":"Transition when hiding the menu/dialog; One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"fade"},"behavior":{"type":"String","desc":"Overrides the default dynamic mode of showing as menu on desktop and dialog on mobiles","values":["default","menu","dialog"],"default":"default","category":"behavior","addedIn":"v1.1.0"}},"slots":{"default":{"desc":"Field main content"},"prepend":{"desc":"Prepend inner field; Suggestions: QIcon, QBtn"},"append":{"desc":"Append to inner field; Suggestions: QIcon, QBtn"},"before":{"desc":"Prepend outer field; Suggestions: QIcon, QBtn"},"after":{"desc":"Append outer field; Suggestions: QIcon, QBtn"},"label":{"desc":"Slot for label; Used only if \'label-slot\' prop is set or the \'label\' prop is set; When it is used the text in the \'label\' prop is ignored","addedIn":"v1.12.9"},"error":{"desc":"Slot for errors; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"hint":{"desc":"Slot for hint text; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"counter":{"desc":"Slot for counter text; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"loading":{"desc":"Override default spinner when component is in loading mode; Suggestion: spinners"},"selected":{"desc":"Override default selection slot; Suggestion: QChip"},"before-options":{"desc":"Template slot for the elements that should be rendered before the list of options","addedIn":"v1.1.0"},"after-options":{"desc":"Template slot for the elements that should be rendered after the list of options","addedIn":"v1.1.0"}},"scopedSlots":{"no-option":{"desc":"What should the menu display after filtering options and none are left to be displayed; Suggestion: <div>","scope":{"inputValue":{"type":"String","desc":"Input textfield value, if any (not QSelect model)","examples":["typed something"]}}},"selected-item":{"desc":"Override default selection slot; Suggestion: QChip","scope":{"index":{"type":"Number","desc":"Selection index","examples":[0]},"opt":{"type":"Any","desc":"Selected option -- its value is taken from model"},"selected":{"type":"Boolean","desc":"Always true -- passed down as prop to QItem (when using QItem)"},"removeAtIndex":{"type":"Function","desc":"Remove selected option located at specific index","params":{"index":{"type":"Number","desc":"Index at which to remove selection","examples":[0]}},"returns":null},"toggleOption":{"type":"Function","desc":"Add/remove option from model","params":{"opt":{"type":"Any","desc":"Option to add to model"}},"returns":null},"tabindex":{"type":"Number","desc":"Tabindex HTML attribute value associated with respective option","values":[0,-1]}}},"option":{"desc":"Customize how options are rendered; Suggestion: QItem","scope":{"index":{"type":"Number","desc":"Option index","examples":[0]},"opt":{"type":"Any","desc":"Option -- its value is taken from \'options\' prop"},"selected":{"type":"Boolean","desc":"Is option selected?"},"focused":{"type":"Boolean","desc":"Is option focused?"},"toggleOption":{"type":"Function","desc":"Add/remove option from model","params":{"opt":{"type":"Any","desc":"Option to add to model"}},"returns":null},"setOptionIndex":{"type":"Function","desc":"Sets option from menu as \'focused\'","params":{"index":{"type":"Number","desc":"Index of option from menu","examples":[10]}},"returns":null},"itemProps":{"type":"Object","desc":"Computed properties passed down to QItem"},"itemEvents":{"type":"Object","desc":"Computed events passed down to QItem"}}}},"events":{"virtual-scroll":{"desc":"Emitted when the virtual scroll occurs","params":{"details":{"type":"Object","desc":"Object of properties on the new scroll position","definition":{"index":{"type":"Number","desc":"Index of the list item that was scrolled into view (0 based)","examples":[30]},"from":{"type":"Number","desc":"The index of the first list item that is rendered (0 based)","examples":[10]},"to":{"type":"Number","desc":"The index of the last list item that is rendered (0 based)","examples":[50]},"direction":{"type":"String","desc":"Direction of change","values":["increase","decrease"]},"ref":{"type":"Object","desc":"Vue reference to the QVirtualList which triggered the event","addedIn":"v1.8.4"}}}}},"clear":{"desc":"When using the \'clearable\' property, this event is emitted when the clear icon is clicked","addedIn":"v1.1.5","params":{"value":{"type":["Any"],"desc":"The previous value before clearing it"}}},"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true}}},"input-value":{"desc":"Emitted when the value in the text input changes","params":{"value":{"type":"String","desc":"New text value","required":true}},"addedIn":"v1.9.9"},"remove":{"desc":"Emitted when an option is removed from selection","params":{"details":{"type":"Object","desc":"Removal details","definition":{"index":{"type":"Number","desc":"Model index at which removal took place","examples":[2]},"value":{"type":"Any","desc":"The actual value that was removed"}}}}},"add":{"desc":"Emitted when an option is added to the selection","params":{"details":{"type":"Object","desc":"Addition details","definition":{"index":{"type":"Number","desc":"Model index at which addition took place","examples":[2]},"value":{"type":"Any","desc":"The actual value that was added"}}}}},"new-value":{"desc":"Enables creation of new values; Emitted when a new value has been created; You can override \'new-value-mode\' property with it","params":{"inputValue":{"type":"String","desc":"What the user typed","examples":["phone"]},"doneFn":{"type":"Function","desc":"Adds (optional) value to the model; Do not forget to call it after you validate the newly created value; Call it with no parameters if nothing should be added","params":{"item":{"type":"Any","desc":"Item to add"},"mode":{"type":"String","desc":"Override \'new-value-mode\' (prop) behavior should you wish to","values":["add","add-unique","toggle"],"default":"add"}},"returns":null}}},"filter":{"desc":"Emitted when user wants to filter a value","params":{"inputValue":{"type":"String","desc":"What the user typed","examples":["phone"]},"doneFn":{"type":"Function","desc":"Supply a function which makes the necessary updates","params":{"callbackFn":{"type":"Function","desc":"Callback to call to make the actual updates","params":null,"returns":null},"afterFn":{"type":"Function","desc":"Callback to call at the end after the update has been fully processed by QSelect","params":{"ref":{"type":"Object","desc":"Vue reference to the QSelect which triggered the filtering"}},"returns":null,"addedIn":"v1.7.4"}},"returns":null},"abortFn":{"type":"Function","desc":"Call this function if something went wrong","params":null,"returns":null}}},"filter-abort":{"desc":"Emitted when a filtering was aborted; Probably a new one was requested?"},"popup-show":{"desc":"Emitted when the select options menu or dialog is shown.","params":{"evt":{"type":"Object","desc":"JS event object"}},"addedIn":"v1.1.3"},"popup-hide":{"desc":"Emitted when the select options menu or dialog is hidden.","params":{"evt":{"type":"Object","desc":"JS event object"}},"addedIn":"v1.1.3"}},"methods":{"scrollTo":{"desc":"Scroll the virtual scroll list to the item with the specified index (0 based)","params":{"index":{"type":["String","Number"],"desc":"The index of the list item (0 based)","required":true,"examples":["1",23]}}},"reset":{"desc":"Resets the computations; Needed for custom edge-cases"},"refresh":{"desc":"Refreshes the list; Use it after appending items","params":{"index":{"type":["String","Number"],"desc":"The index of the list item to scroll to after refresh (0 based); If it\'s not specified the scroll position is not changed; Use a negative value to keep scroll position","examples":["1",23,-1]}},"addedIn":"v1.8.4"},"resetValidation":{"desc":"Reset validation status"},"validate":{"desc":"Trigger a validation","params":{"value":{"type":"Any","desc":"Optional value to validate against"}},"returns":{"type":["Boolean","Promise<boolean>"],"desc":"True/false if no async rules, otherwise a Promise with the outcome (true -> validation was a success, false -> invalid models detected)","examples":["true","validate().then(outcome => { ... })"]}},"focus":{"desc":"Focus component"},"showPopup":{"desc":"Focus and open popup"},"hidePopup":{"desc":"Hide popup"},"removeAtIndex":{"desc":"Remove selected option located at specific index","params":{"index":{"type":"Number","desc":"Index at which to remove selection","required":true,"examples":[0]}}},"add":{"desc":"Adds option to model","params":{"opt":{"type":"Any","desc":"Option to add to model","required":true},"unique":{"type":"Boolean","desc":"Option must be unique"}}},"toggleOption":{"desc":"Add/remove option from model","params":{"opt":{"type":"Any","desc":"Option to add to model","required":true},"keepOpen":{"type":"Boolean","desc":"Don\'t close the menu and do not clear the filter","addedIn":"v1.7.4"}}},"setOptionIndex":{"desc":"Sets option from menu as \'focused\'","params":{"index":{"type":"Number","desc":"Index of option from menu","required":true,"examples":[10]}}},"moveOptionSelection":{"desc":"Move selected option from menu by index offset","params":{"offset":{"type":"Number","desc":"Number of options to move up or down","default":1,"examples":[-1,1,5]},"skipInputValue":{"type":"Boolean","desc":"Don\'t set input-value on navigation","addedIn":"v1.8.0"}},"addedIn":"v1.7.4"},"filter":{"desc":"Filter options","params":{"value":{"type":"String","desc":"String to filter with","required":true,"examples":["car"]}}},"updateMenuPosition":{"desc":"Recomputes menu position"},"updateInputValue":{"desc":"If \'use-input\' is specified, this updates the value that it holds","params":{"value":{"type":"String","desc":"String to set the input value to","examples":["hotel"]},"noFilter":{"type":"Boolean","desc":"Set to true if you don\'t want the filter (if any) to be also triggered"}}},"isOptionSelected":{"desc":"Tells if an option is selected","params":{"opt":{"type":"Any","desc":"Option entry","required":true}},"returns":{"type":"Boolean","desc":"Option is selected or not"},"addedIn":"v1.9.5"},"getEmittingOptionValue":{"desc":"Get the model value that would be emitted by QSelect when selecting a said option; Also takes into consideration if \'emit-value\' is set","params":{"opt":{"type":"Any","desc":"Option entry","required":true}},"returns":{"type":"Any","desc":"Emitting model value of said option"},"addedIn":"v1.9.5"},"getOptionValue":{"desc":"Get the model value of an option; Takes into consideration \'option-value\' (if used), but does not looks for \'emit-value\', like getEmittingOptionValue() does","params":{"opt":{"type":"Any","desc":"Option entry","required":true}},"returns":{"type":"Any","desc":"Model value of said option"},"addedIn":"v1.9.5"},"getOptionLabel":{"desc":"Get the label of an option; Takes into consideration the \'option-label\' prop (if used)","params":{"opt":{"type":"Any","desc":"Option entry","required":true}},"returns":{"type":"Any","desc":"Label of said option"},"addedIn":"v1.9.5"},"isOptionDisabled":{"desc":"Tells if an option is disabled; Takes into consideration \'option-disable\' prop (if used)","params":{"opt":{"type":"Any","desc":"Option entry","required":true}},"returns":{"type":"Boolean","desc":"Option is disabled or not"},"addedIn":"v1.9.5"}}}')},"0cd7":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/button-toggle"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"ripple":{"type":["Boolean","Object"],"desc":"Configure material ripple (disable it by setting it to \'false\' or supply a config object)","default":true,"examples":[false,"{ early: true, center: true, color: \'teal\', keyCodes: [] }"],"category":"style"},"value":{"type":"Any","desc":"Model of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","examples":["v-model=\\"selected\\""],"category":"model"},"options":{"type":"Array","desc":"Array of Objects defining each option","required":true,"definition":{"label":{"type":"String","desc":"Label of option button; Use this prop and/or \'icon\', but at least one is required","examples":["Option 1"]},"icon":{"type":"String","desc":"Icon of option button; Use this prop and/or \'label\', but at least one is required","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"value":{"type":"Any","desc":"Value of the option that will be used by component model","required":true},"slot":{"type":"String","desc":"Slot name to use for this button content; Useful for customizing content or even add tooltips","examples":["mySlot"]},"...props":{"type":"Any","desc":"Any other QBtn props (including class and style)"}},"examples":["[ {label: \'One\', value: \'one\'}, {label: \'Two\', value: \'two\'} ]"],"category":"model"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"toggle-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","default":"primary"},"toggle-text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"spread":{"type":"Boolean","desc":"Spread horizontally to all available space","category":"content"},"outline":{"type":"Boolean","desc":"Use \'outline\' design","category":"style"},"flat":{"type":"Boolean","desc":"Use \'flat\' design","category":"style"},"unelevated":{"type":"Boolean","desc":"Remove shadow","category":"style"},"rounded":{"type":"Boolean","desc":"Applies a more prominent border-radius for a squared shape button","category":"style"},"push":{"type":"Boolean","desc":"Use \'push\' design","category":"style"},"glossy":{"type":"Boolean","desc":"Applies a glossy effect","category":"style"},"size":{"type":"String","desc":"Button size name or a CSS unit including unit name","examples":["xs","sm","md","lg","xl","25px","2rem"],"category":"style"},"no-caps":{"type":"Boolean","desc":"Avoid turning label text into caps (which happens by default)","category":"content"},"no-wrap":{"type":"Boolean","desc":"Avoid label text wrapping","category":"content"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"stack":{"type":"Boolean","desc":"Stack icon and label vertically instead of on same line (like it is by default)","category":"content"},"stretch":{"type":"Boolean","desc":"When used on flexbox parent, button will stretch to parent\'s height","category":"content"},"clearable":{"type":"Boolean","desc":"Clears model on click of the already selected button","category":"model","addedIn":"v1.4.4"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true}}},"clear":{"desc":"When using the \'clearable\' property, this event is emitted when the already selected button is clicked","addedIn":"v1.4.4"}}}')},"0e1c":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/tab-panels"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"name":{"type":"Any","desc":"Panel name","required":true,"examples":["accounts","firstPanel",":name=\\"1\\""],"category":"general"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style","addedIn":"v1.3.0"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},"110c":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/list-and-list-items"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"overline":{"type":"Boolean","desc":"Renders an overline label","category":"content"},"caption":{"type":"Boolean","desc":"Renders a caption label","category":"content"},"header":{"type":"Boolean","desc":"Renders a header label","category":"content"},"lines":{"type":["Number","String"],"desc":"Apply ellipsis when there\'s not enough space to render on the specified number of lines; If more than one line specified, then it will only work on webkit browsers because it uses the \'-webkit-line-clamp\' CSS property!","examples":["1","3",":lines=\\"2\\""],"category":"content|behavior"}},"slots":{"default":{"desc":"The content of the label; Suggestion: text"}}}')},1227:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/cookies"},"injection":"$q.cookies","methods":{"get":{"tsType":"CookiesGetMethodType","desc":"Get cookie","params":{"name":{"type":"String","desc":"Cookie name","required":true,"examples":["userId"]}},"returns":{"type":["String","null"],"desc":"Cookie value; Returns null if cookie not found","examples":["john12"]}},"getAll":{"desc":"Get all cookies","returns":{"type":"Object","desc":"Object with cookie names (as keys) and their values","examples":["{ userId: \'john12\', XFrame: \'x534\' }"]}},"set":{"desc":"Set cookie","params":{"name":{"type":"String","desc":"Cookie name","required":true,"examples":["userId"]},"value":{"type":"String","desc":"Cookie value","required":true,"examples":["john12"]},"options":{"type":"Object","desc":"Cookie options","definition":{"expires":{"type":["Number","String","Date"],"desc":"Cookie expires detail; If specified as Number, then the unit is days; If specified as String, it can either be raw stringified date or in Xd Xh Xm Xs format (see examples)","examples":[30,"Wed, 13 Jan 2021 22:23:01 GMT","1d","15m","13d","1d 15m","1d 3h 5m 3s"]},"path":{"type":"String","desc":"Cookie path","examples":["/accounts"]},"domain":{"type":"String","desc":"Cookie domain","examples":[".foo.com"]},"sameSite":{"type":"String","desc":"SameSite cookie option (not supported by IE11)","examples":["Strict","Lax"],"addedIn":"v1.1.1"},"httpOnly":{"type":"Boolean","desc":"Is cookie Http Only?"},"secure":{"type":"Boolean","desc":"Is cookie secure? (https only)"},"other":{"type":"String","desc":"Raw string for other cookie options; To be used as a last resort for possible newer props that are currently not yet implemented in Quasar","examples":["SomeNewCookieProp"],"addedIn":"v1.1.1"}}}}},"has":{"desc":"Check if cookie exists","params":{"name":{"type":"String","desc":"Cookie name","required":true,"examples":["userId"]}},"returns":{"type":"Boolean","desc":"Does cookie exists or not?"}},"remove":{"desc":"Remove a cookie","params":{"name":{"type":"String","desc":"Cookie name","required":true,"examples":["userId"]},"options":{"type":"Object","desc":"Cookie options","definition":{"path":{"type":"String","desc":"Cookie path","examples":["/accounts"]},"domain":{"type":"String","desc":"Cookie domain","examples":[".foo.com"]}}}}},"parseSSR":{"desc":"For SSR usage only, and only on the global import (not on $q.cookies)","params":{"ssrContext":{"type":"Object","desc":"SSR Context Object","required":true}},"returns":{"type":"Object","tsType":"Cookies","desc":"Cookie object (like $q.cookies) for SSR usage purposes"}}}}')},1390:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/tab-panels"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"value":{"type":"Any","desc":"Model of the component defining the current panel\'s name; If a Number is used, it does not define the panel\'s index, but rather the panel\'s name which can also be an Integer; Either use this property (along with a listener for \'input\' event) OR use the v-model directive.","examples":["v-model=\\"panelName\\""],"category":"model"},"keep-alive":{"type":"Boolean","desc":"Equivalent to using Vue\'s native <keep-alive> component on the content","category":"behavior"},"animated":{"type":"Boolean","desc":"Enable transitions between panel (also see \'transition-prev\' and \'transition-next\' props)","category":"behavior"},"infinite":{"type":"Boolean","desc":"Makes component appear as infinite (when reaching last panel, next one will become the first one)","category":"behavior"},"swipeable":{"type":"Boolean","desc":"Enable swipe events (may interfere with content\'s touch/mouse events)","category":"behavior"},"vertical":{"type":"Boolean","desc":"Default transitions and swipe actions will be on the vertical axis","category":"behavior"},"transition-prev":{"type":"String","desc":"One of Quasar\'s embedded transitions (has effect only if \'animated\' prop is set)","examples":["fade","slide-down"],"category":"behavior","default":"slide-right/slide-down"},"transition-next":{"type":"String","desc":"One of Quasar\'s embedded transitions (has effect only if \'animated\' prop is set)","examples":["fade","slide-down"],"category":"behavior","default":"slide-left/slide-up"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"events":{"input":{"desc":"Emitted when the component changes the model; This event _isn\'t_ fired if the model is changed externally; Is also used by v-model","params":{"value":{"type":["String","Number"],"desc":"New current panel name","examples":["dashboard"]}}},"before-transition":{"desc":"Emitted before transitioning to a new panel","params":{"newVal":{"type":["String","Number"],"desc":"Panel name towards transition is going","examples":["dashboard"]},"oldVal":{"type":["String","Number"],"desc":"Panel name from which transition is happening","examples":["dashboard"]}}},"transition":{"desc":"Emitted after component transitioned to a new panel","params":{"newVal":{"type":["String","Number"],"desc":"Panel name towards transition has occurred","examples":["dashboard"]},"oldVal":{"type":["String","Number"],"desc":"Panel name from which transition has happened","examples":["dashboard"]}}}},"methods":{"next":{"desc":"Go to next panel"},"previous":{"desc":"Go to previous panel"},"goTo":{"desc":"Go to specific panel","params":{"panelName":{"type":["String","Number"],"desc":"Panel\'s name, which may be a String or Number; Number does not refers to panel index, but to its name, which may be an Integer","required":true,"examples":["dashboard"]}}}}}')},"17b7":function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/bottom-sheet"},"injection":"$q.bottomSheet","methods":{"create":{"desc":"Creates an ad-hoc Bottom Sheet; Same as calling $q.bottomSheet(...)","params":{"opts":{"type":"Object","required":true,"definition":{"class":{"type":["String","Array","Object"],"desc":"CSS Class name to apply to the Dialog\'s QCard","examples":["my-class"]},"style":{"type":["String","Array","Object"],"desc":"CSS style to apply to the Dialog\'s QCard","examples":["border: 2px solid black"]},"title":{"type":"String","desc":"Title","examples":["Share"]},"message":{"type":"String","desc":"Message","examples":["Please select how to share"]},"actions":{"type":"Array","desc":"Array of Objects, each Object defining an action","definition":{"classes":{"type":["String","Array","Object"],"desc":"CSS classes for this action","examples":["my-class"]},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"img":{"type":"String","desc":"Path to an image for this action","examples":["(statics folder) statics/img/something.png","(relative path format) :src=\\"require(\'./my_img.jpg\')\\"","(URL) https://some-site.net/some-img.gif"]},"avatar":{"type":"Boolean","desc":"Display img as avatar (round borders)"},"label":{"type":["String","Number"],"desc":"Action label","examples":["Facebook"]}}},"grid":{"type":"Boolean","desc":"Display actions as a grid instead of as a list"},"dark":{"type":"Boolean","desc":"Apply dark mode","category":"style"},"seamless":{"type":"Boolean","desc":"Put Bottom Sheet into seamless mode; Does not use a backdrop so user is able to interact with the rest of the page too"},"persistent":{"type":"Boolean","desc":"User cannot dismiss Bottom Sheet if clicking outside of it or hitting ESC key"}},"desc":"Bottom Sheet options"}},"returns":{"type":"Object","desc":"Chainable Object","tsType":"DialogChainObject","definition":{"onOk":{"type":"Function","desc":"Receives a Function param to tell what to do when OK is pressed / option is selected","params":{"callbackFn":{"type":"Function","desc":"Tell what to do","required":true,"params":null,"returns":null}},"returns":{"type":"Object","desc":"Chained Object","tsType":"DialogChainObject"}},"onCancel":{"type":"Function","desc":"Receives a Function as param to tell what to do when Cancel is pressed / dialog is dismissed","params":{"callbackFn":{"type":"Function","desc":"Tell what to do","required":true,"params":null,"returns":null}},"returns":{"type":"Object","desc":"Chained Object","tsType":"DialogChainObject"}},"onDismiss":{"type":"Function","desc":"Receives a Function param to tell what to do when the dialog is closed","params":{"callbackFn":{"type":"Function","desc":"Tell what to do","required":true,"params":null,"returns":null}},"returns":{"type":"Object","desc":"Chained Object","tsType":"DialogChainObject"}},"hide":{"type":"Function","desc":"Hides the dialog when called","params":null,"returns":{"type":"Object","desc":"Chained Object","tsType":"DialogChainObject"}}}},"tsInjectionPoint":true}}}')},1820:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/skeleton"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"addedIn":"v1.6.0","props":{"tag":{"type":"String","desc":"HTML tag to render","default":"div","category":"content","examples":["div","span"]},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"type":{"type":"String","desc":"Type of skeleton placeholder","values":["text","rect","circle","QBtn","QBadge","QChip","QToolbar","QCheckbox","QRadio","QToggle","QSlider","QRange","QInput","QAvatar"],"default":"rect","category":"content"},"animation":{"type":"String","desc":"The animation effect of the skeleton placeholder","values":["wave","pulse","pulse-x","pulse-y","fade","blink","none"],"default":"wave","category":"style"},"square":{"type":"Boolean","desc":"Removes border-radius so borders are squared","category":"style"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style"},"size":{"type":"String","desc":"Size in CSS units, including unit name; Overrides \'height\' and \'width\' props and applies the value to both height and width","examples":["16px","2rem"],"category":"style"},"width":{"type":"String","desc":"Width in CSS units, including unit name; Apply custom width; Use this prop or through CSS; Overridden by \'size\' prop if used","examples":["16px","2rem"],"category":"style"},"height":{"type":"String","desc":"Height in CSS units, including unit name; Apply custom height; Use this prop or through CSS; Overridden by \'size\' prop if used","examples":["16px","2rem"],"category":"style"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},"1aaf":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/uploader"}}')},"219a":function(e){e.exports=JSON.parse('{"type":"directive","meta":{"docsUrl":"https://v1.quasar.dev/vue-directives/touch-repeat"},"value":{"type":"Function","desc":"Handler for touch-repeat (use a non-function to disable)","params":{"details":{"type":"Object","desc":"Event details","definition":{"evt":{"type":"Object","desc":"Original JS event Object"},"touch":{"type":"Boolean","desc":"Triggered by a touch event"},"mouse":{"type":"Boolean","desc":"Triggered by a mouse event"},"keyboard":{"type":"Boolean","desc":"Triggered by a keyboard event"},"position":{"type":"Object","desc":"Event Position Object; Supplied ONLY if it\'s a touch or mouse event","definition":{"top":{"type":"Number","desc":"Vertical offset from top of window","examples":[235]},"left":{"type":"Number","desc":"Horizontal offset from left of window","examples":[235]}}},"keyCode":{"type":"Number","desc":"Keycode; Supplied ONLY if it\'s a keyboard event","examples":[65]},"duration":{"type":"Number","desc":"How long it took to trigger the event (in milliseconds)","examples":[612]},"repeatCount":{"type":"Number","desc":"Handler called for nth time","examples":[2]},"startTime":{"type":"Number","desc":"Unix timestamp of the moment when event started; Equivalent to Date.now()","examples":[1558603256472]}}}},"returns":null,"examples":["v-touch-repeat=\\"fnToCall\\"","v-touch-repeat=\\"void 0\\""]},"arg":{"type":"String","desc":"String of numbers (at least one number) separated by \':\' which defines the amount of time to wait for 1st handler call, 2nd, 3rd and so on; All subsequent calls will use last value as time to wait until triggering","default":"0:600:300","examples":["v-touch-repeat:0:400=\\"fnToCall\\""]},"modifiers":{"capture":{"type":"Boolean","desc":"Use capture for touchstart event"},"mouse":{"type":"Boolean","desc":"Listen for mouse events too"},"mouseCapture":{"type":"Boolean","desc":"Use capture for mousedown event"},"keyCapture":{"type":"Boolean","desc":"Use capture for keydown event"},"esc":{"type":"Boolean","desc":"Catch ESC key"},"tab":{"type":"Boolean","desc":"Catch TAB key"},"enter":{"type":"Boolean","desc":"Catch ENTER key"},"space":{"type":"Boolean","desc":"Catch SPACE key"},"up":{"type":"Boolean","desc":"Catch UP arrow key"},"left":{"type":"Boolean","desc":"Catch LEFT arrow key"},"right":{"type":"Boolean","desc":"Catch RIGHT arrow key"},"down":{"type":"Boolean","desc":"Catch DOWN key"},"delete":{"type":"Boolean","desc":"Catch DELETE key"},"[keycode]":{"type":"Number","desc":"Key code to catch","examples":["v-touch-repeat.68=\\"fnToCall\\""]}}}')},"21a3":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/table"},"props":{"fullscreen":{"type":"Boolean","sync":true,"desc":"Fullscreen mode","examples":[":fullscreen.sync=\\"isFullscreen\\""],"category":"behavior"},"no-route-fullscreen-exit":{"type":"Boolean","desc":"Changing route app won\'t exit fullscreen","category":"behavior","addedIn":"v1.1.7"},"data":{"type":"Array","desc":"Rows of data to display","examples":[":data=\\"myData\\""],"category":"general"},"row-key":{"type":["String","Function"],"desc":"Property of each row that defines the unique key of each row (the result must be a primitive, not Object, Array, etc); The value of property must be string or a function taking a row and returning the desired (nested) key in the row; If supplying a function then for best performance, reference it from your scope and do not define it inline","default":"id","examples":["row-key=\\"name\\"",":row-key=\\"row => row.name\\""],"category":"general"},"virtual-scroll":{"type":"Boolean","desc":"Display data using QVirtualScroll (for non-grid mode only)","category":"virtual-scroll","addedIn":"v1.2.0"},"virtual-scroll-slice-size":{"type":"Number","desc":"Number of rows to render in the virtual list","default":"30","examples":[":virtual-scroll-slice-size=\\"60\\""],"category":"virtual-scroll","addedIn":"v1.2.0"},"virtual-scroll-item-size":{"type":"Number","desc":"Default size in pixels of a row; This value is used for rendering the initial table; Try to use a value close to the minimum size of a row","default":"48 (24 if dense)","examples":[":virtual-scroll-item-size=\\"48\\""],"category":"virtual-scroll","addedIn":"v1.2.0"},"virtual-scroll-sticky-size-start":{"type":"Number","desc":"Size in pixels of the sticky header (if using one); A correct value will improve scroll precision","default":"0","examples":[":virtual-scroll-sticky-size-start=\\"48\\""],"category":"virtual-scroll","addedIn":"v1.2.0"},"virtual-scroll-sticky-size-end":{"type":"Number","desc":"Size in pixels of the sticky footer part (if using one); A correct value will improve scroll precision","default":"0","examples":[":virtual-scroll-sticky-size-end=\\"48\\""],"category":"virtual-scroll","addedIn":"v1.2.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","default":"grey-8"},"icon-first-page":{"type":"String","desc":"Icon name following Quasar convention for stepping to first page; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v1.12.0"},"icon-prev-page":{"type":"String","desc":"Icon name following Quasar convention for stepping to previous page; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v1.12.0"},"icon-next-page":{"type":"String","desc":"Icon name following Quasar convention for stepping to next page; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v1.12.0"},"icon-last-page":{"type":"String","desc":"Icon name following Quasar convention for stepping to last page; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v1.12.0"},"grid":{"type":"Boolean","desc":"Display data as a grid instead of the default table","category":"behavior"},"grid-header":{"type":"Boolean","desc":"Display header for grid-mode also","category":"behavior|content"},"dense":{"type":"Boolean","desc":"Dense mode; Connect with $q.screen for responsive behavior","category":"style"},"columns":{"type":"Array","desc":"The column definitions (Array of Objects)","examples":[":columns=\\"tableColumns\\""],"category":"column","definition":{"name":{"type":"String","desc":"Unique id, identifies column, (used by pagination.sortBy, \'body-cell-[name]\' slot, ...)","required":true,"examples":["desc"]},"label":{"type":"String","desc":"Label for header","required":true,"examples":["Dessert (100g serving)"]},"field":{"type":["String","Function"],"desc":"Row Object property to determine value for this column or function which maps to the required property","required":true,"examples":["name","row => row.some.nested.prop"]},"required":{"type":"Boolean","desc":"If we use visible-columns, this col will always be visible","default":false},"align":{"type":"String","desc":"Horizontal alignment of cells in this column","default":"right","examples":["left","right","center"]},"sortable":{"type":"Boolean","desc":"Tell QTable you want this column sortable","default":false},"sort":{"type":"Function","desc":"Compare function if you have some custom data or want a specific way to compare two rows","examples":["(a, b, rowA, rowB) => parseInt(a, 10) - parseInt(b, 10)"],"params":{"a":{"type":"Any","desc":"Value of the first comparison term","examples":[123,"abc"]},"b":{"type":"Any","desc":"Value of the second comparison term","examples":[123,"abc"]},"rowA":{"type":"Object","desc":"Full Row object in which is contained the first term","examples":["{ name: \'Potassium\', value: \'K\' }"]},"rowB":{"type":"Object","desc":"Full Row object in which is contained the second term","examples":["{ name: \'Fluorine\', value: \'F\' }"]}},"returns":{"type":"Number","desc":"Comparison result of term \'a\' with term \'b\'. Less than 0 when \'a\' should come first; greater than 0 if \'b\' should come first; equal to 0 if their position must not be changed with respect to each other","examples":["-1","0","1"]}},"format":{"type":"Function","desc":"Function you can apply to format your data","examples":["(val, row) => `${val}%`","val => val ? /* Unicode checkmark checked */ \'☑\' : /* Unicode checkmark unchecked */ \'☐\'"],"params":{"val":{"type":"Any","desc":"Value of the cell","examples":[123,"abc"]},"row":{"type":"Object","desc":"Full Row object in which the cell is contained","examples":["{ name: \'Potassium\', value: \'K\' }"]}},"returns":{"type":"Any","desc":"The resulting formatted value","examples":["20%"]}},"style":{"type":"String","desc":"Style to apply on normal cells of the column","examples":["width: 500px"]},"classes":{"type":"String","desc":"Classes to add on normal cells of the column","examples":["my-special-class"]},"headerStyle":{"type":"String","desc":"Style to apply on header cells of the column","examples":["width: 500px"],"addedIn":"v1.3.0"},"headerClasses":{"type":"String","desc":"Classes to add on header cells of the column","examples":["my-special-class"],"addedIn":"v1.3.0"}}},"visible-columns":{"type":"Array","desc":"Array of Strings defining column names (\'name\' property of each column from \'columns\' prop definitions); Columns marked as \'required\' are not affected by this property","examples":[":visible-columns=\\"myCols\\"","[ \'desc\', \'carbs\', \'protein\' ]"],"category":"column"},"loading":{"type":"Boolean","desc":"Put Table into \'loading\' state; Notify the user something is happening behind the covers","category":"behavior|content"},"title":{"type":"String","desc":"Table title","examples":["Device list"],"category":"content"},"hide-header":{"type":"Boolean","desc":"Hide table header layer","category":"content"},"hide-bottom":{"type":"Boolean","desc":"Hide table bottom layer regardless of what it has to display","category":"content"},"hide-selected-banner":{"type":"Boolean","desc":"Hide the selected rows banner (if any)","category":"content","addedIn":"v1.12.0"},"hide-no-data":{"type":"Boolean","desc":"Hide the default no data bottom layer","category":"content","addedIn":"v1.12.0"},"hide-pagination":{"type":"Boolean","desc":"Hide the pagination controls at the bottom","category":"content","addedIn":"v1.12.0"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"flat":{"type":"Boolean","desc":"Applies a \'flat\' design (no default shadow)","category":"style"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style"},"square":{"type":"Boolean","desc":"Removes border-radius so borders are squared","category":"style"},"separator":{"type":"String","desc":"Use a separator/border between rows, columns or all cells","default":"horizontal","values":["horizontal","vertical","cell","none"],"examples":["cell"],"category":"content"},"wrap-cells":{"type":"Boolean","desc":"Wrap text within table cells","category":"content"},"binary-state-sort":{"type":"Boolean","desc":"Skip the third state (unsorted) when user toggles column sort direction","category":"sorting"},"no-data-label":{"type":"String","desc":"Override default text to display when no data is available","examples":["No devices available"],"category":"content"},"no-results-label":{"type":"String","desc":"Override default text to display when user filters the table and no matched results are found","examples":["No matched records"],"category":"content"},"loading-label":{"type":"String","desc":"Override default text to display when table is in loading state (see \'loading\' prop)","examples":["Loading devices..."],"category":"content"},"selected-rows-label":{"type":"Function","desc":"Text to display when user selected at least one row; For best performance, reference it from your scope and do not define it inline","params":{"numberOfRows":{"type":"Number","desc":"Number of rows available","examples":[12]}},"returns":{"type":"String","desc":"Label to display","examples":["5 rows are selected"]},"examples":[":selected-rows-label=\\"getSelectedString\\""],"category":"selection"},"rows-per-page-label":{"type":"String","desc":"Text to override default rows per page label at bottom of table","examples":["Records per page:"],"category":"pagination"},"pagination-label":{"type":"Function","desc":"Text to override default pagination label at bottom of table (unless \'pagination\' scoped slot is used); For best performance, reference it from your scope and do not define it inline","params":{"firstRowIndex":{"type":"Number","desc":"Index of first displayed row","examples":[1]},"endRowIndex":{"type":"Number","desc":"Index of last displayed row","examples":[10]},"totalRowsNumber":{"type":"Number","desc":"Number of total rows available in data","examples":[132]}},"returns":{"type":"String","desc":"Label to display","examples":["1-10 of 132"]},"examples":[":pagination-label=\\"getPaginationLabel\\""],"category":"pagination"},"table-style":{"type":["String","Array","Object"],"desc":"CSS style to apply to native HTML <table> element\'s wrapper (which is a DIV)","examples":["background-color: #ff0000",":table-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style"},"table-class":{"type":["String","Array","Object"],"desc":"CSS classes to apply to native HTML <table> element\'s wrapper (which is a DIV)","examples":["my-special-class",":table-class=\\"{ \'my-special-class\': [Boolean condition] }\\""],"category":"style"},"table-header-style":{"type":["String","Array","Object"],"desc":"CSS style to apply to header of native HTML <table> (which is a TR)","examples":["background-color: #ff0000",":table-header-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style"},"table-header-class":{"type":["String","Array","Object"],"desc":"CSS classes to apply to header of native HTML <table> (which is a TR)","examples":["my-special-class",":table-header-class=\\"{ \'my-special-class\': [Boolean condition] }\\""],"category":"style"},"card-container-style":{"type":["String","Array","Object"],"desc":"CSS style to apply to the cards container (when in grid mode)","examples":["background-color: #ff0000",":card-container-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style","addedIn":"v1.4.0"},"card-container-class":{"type":["String","Array","Object"],"desc":"CSS classes to apply to the cards container (when in grid mode)","examples":["my-special-class","justify-center",":card-container-class=\\"{ \'my-special-class\': [Boolean condition] }\\""],"category":"style","addedIn":"v1.4.0"},"card-style":{"type":["String","Array","Object"],"desc":"CSS style to apply to the card (when in grid mode)","examples":["background-color: #ff0000",":card-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style"},"card-class":{"type":["String","Array","Object"],"desc":"CSS classes to apply to the card (when in grid mode)","examples":["my-special-class",":card-class=\\"{ \'my-special-class\': [Boolean condition] }\\""],"category":"style"},"filter":{"type":["String","Object"],"desc":"String/Object to filter table with; When using an Object it requires \'filter-method\' to also be specified since it will be a custom filtering","examples":[":filter=\\"myFilterInput\\""],"category":"filter"},"filter-method":{"type":"Function","desc":"The actual filtering mechanism; For best performance, reference it from your scope and do not define it inline","params":{"rows":{"type":"Array","desc":"Array of rows","required":true},"terms":{"type":["String","Object"],"desc":"Terms to filter with (is essentially the \'filter\' prop value)","required":true},"cols":{"type":"Array","desc":"Optional column definitions"},"getCellValue":{"type":"Function","desc":"Optional function to get a cell value","params":{"col":{"type":"Object","desc":"Column name from column definitions"},"row":{"type":"Object","desc":"The row object"}},"returns":{"type":"Any","desc":"Parsed/Processed cell value","examples":["Ice Cream Sandwich"]}}},"returns":{"type":"Array","desc":"Filtered rows"},"default":"(see source code)","examples":["(see source code)"],"category":"filter"},"pagination":{"type":"Object","desc":"Pagination object; You can use the \'.sync\' modifier on it if you want to have access on the current pagination in your components; When not using the .sync modifier it simply initializes the pagination on first render","definition":{"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"},"page":{"type":"Number","desc":"Page number (1-based)","examples":[3]},"rowsPerPage":{"type":"Number","desc":"How many rows per page? 0 means Infinite","examples":[10]},"rowsNumber":{"type":"Number","desc":"For server-side fetching only. How many total database rows are there to be added to the table. If set, causes the QTable to emit @request when data is required.","examples":[100,200]}},"examples":[":pagination.sync=\\"myPagination\\""],"category":"pagination"},"rows-per-page-options":{"type":"Array","desc":"Options for user to pick (Numbers); Number 0 means \'Show all rows in one page\'","default":"[ 3, 5, 7, 10, 15, 20, 25, 50, 0 ]","examples":[":rows-per-page-options=\\"[10, 20]\\""],"category":"pagination"},"selection":{"type":"String","desc":"Selection type","default":"none","values":["single","multiple","none"],"examples":["multiple"],"category":"selection"},"selected":{"type":"Array","desc":"Keeps the user selection array","sync":true,"default":"[]","examples":[":selected.sync=\\"selection\\""],"category":"selection"},"expanded":{"type":"Array","desc":"Keeps the array with expanded rows keys","sync":true,"default":"[]","examples":[":expanded.sync=\\"expanded\\""],"category":"expansion","addedIn":"v1.8.3"},"sort-method":{"type":"Function","desc":"The actual sort mechanism. Function (rows, sortBy, descending) => sorted rows; For best performance, reference it from your scope and do not define it inline","params":{"rows":{"type":"Array","desc":"Array with rows"},"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"}},"returns":{"type":"Array","desc":"Sorted rows"},"default":"(see source code)","examples":["(see source code)"],"category":"sorting"}},"slots":{"loading":{"desc":"Override default effect when table is in loading state; Suggestion: QInnerLoading","addedIn":"v1.8.0"}},"scopedSlots":{"item":{"desc":"Slot to use for defining an item when in \'grid\' mode; Suggestion: QCard","scope":{"key":{"type":"Any","desc":"Row\'s key"},"row":{"type":"Object","desc":"Row object"},"rowIndex":{"type":"Number","desc":"Row\'s index (0 based) in the filtered and sorted table"},"pageIndex":{"type":"Number","desc":"Row\'s index (0 based) in the current page of the filtered and sorted table"},"cols":{"type":"Object","desc":"Column definitions"},"colsMap":{"type":"Object","desc":"Column mapping (key is column name, value is column object)"},"selected":{"type":"Boolean","desc":"Is row selected? Can directly be assigned new Boolean value which changes selection state","reactive":true},"expand":{"type":"Boolean","desc":"Is row expanded? Can directly be assigned new Boolean value which changes expanded state","reactive":true},"__trClass":{"type":"String","desc":"Internal prop passed down to QTr (if used)"}}},"body":{"desc":"Slot to define how a body row looks like; Suggestion: QTr + Td","scope":{"key":{"type":"Any","desc":"Row\'s key"},"row":{"type":"Object","desc":"Row object"},"rowIndex":{"type":"Number","desc":"Row\'s index (0 based) in the filtered and sorted table"},"pageIndex":{"type":"Number","desc":"Row\'s index (0 based) in the current page of the filtered and sorted table"},"cols":{"type":"Object","desc":"Column definitions"},"colsMap":{"type":"Object","desc":"Column mapping (key is column name, value is column object)"},"selected":{"type":"Boolean","desc":"Is row selected? Can directly be assigned new Boolean value which changes selection state","reactive":true},"expand":{"type":"Boolean","desc":"Is row expanded? Can directly be assigned new Boolean value which changes expanded state","reactive":true},"__trClass":{"type":"String","desc":"Internal prop passed down to QTr (if used)"}}},"body-cell":{"desc":"Slot to define how all body cells look like; Suggestion: QTd","scope":{"row":{"type":"Object","desc":"Row object"},"rowIndex":{"type":"Number","desc":"Row\'s index (0 based) in the filtered and sorted table"},"pageIndex":{"type":"Number","desc":"Row\'s index (0 based) in the current page of the filtered and sorted table"},"col":{"type":"Object","desc":"Column definition for column associated with table cell"},"value":{"type":"Any","desc":"Parsed/Formatted value of table cell"}}},"body-cell-[name]":{"desc":"Slot to define how a specific column cell looks like; replace \'[name]\' with column name (from columns definition object)","scope":{"row":{"type":"Object","desc":"Row object"},"rowIndex":{"type":"Number","desc":"Row\'s index (0 based) in the filtered and sorted table"},"pageIndex":{"type":"Number","desc":"Row\'s index (0 based) in the current page of the filtered and sorted table"},"col":{"type":"Object","desc":"Column definition for column associated with table cell"},"value":{"type":"Any","desc":"Parsed/Formatted value of table cell"}}},"header":{"desc":"Slot to define how header looks like; Suggestion: QTr + QTh","scope":{"cols":{"type":"Object","desc":"Column definitions"},"colsMap":{"type":"Object","desc":"Column mapping (key is column name, value is column object)"},"sort":{"type":"Function","desc":"Trigger a table sort","params":{"col":{"type":["String","Object"],"desc":"Column name or column definition object","required":true,"examples":["calories"]}},"returns":null},"header":{"type":"Boolean","desc":"Internal prop passed down to QTh (if used); Always \'true\'"}}},"header-cell":{"desc":"Slot to define how each header cell looks like; Suggestion: QTh","scope":{"col":{"type":"Object","desc":"Column definition associated to header cell"},"cols":{"type":"Object","desc":"Column definitions"},"colsMap":{"type":"Object","desc":"Column mapping (key is column name, value is column object)"},"sort":{"type":"Function","desc":"Trigger a table sort","params":{"col":{"type":["String","Object"],"desc":"Column name or column definition object","required":true,"examples":["calories"]}},"returns":null}}},"header-cell-[name]":{"desc":"Slot to define how a specific header cell looks like; replace \'[name]\' with column name (from columns definition object)","scope":{"col":{"type":"Object","desc":"Column definition associated to header cell"},"cols":{"type":"Object","desc":"Column definitions"},"colsMap":{"type":"Object","desc":"Column mapping (key is column name, value is column object)"},"sort":{"type":"Function","desc":"Trigger a table sort","params":{"col":{"type":["String","Object"],"desc":"Column name or column definition object","required":true,"examples":["calories"]}},"returns":null}},"addedIn":"v1.1.1"},"top-row":{"desc":"Slot to define how top extra row looks like","scope":{"cols":{"type":"Object","desc":"Column definitions"}}},"bottom-row":{"desc":"Slot to define how bottom extra row looks like","scope":{"cols":{"type":"Object","desc":"Column definitions"}}},"top":{"desc":"Slot to define how table top looks like","scope":{"pagination":{"type":"Object","desc":"Pagination object","definition":{"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"},"page":{"type":"Number","desc":"Page number (1-based)","examples":[3]},"rowsPerPage":{"type":"Number","desc":"How many rows per page? 0 means Infinite","examples":[10]}}},"pagesNumber":{"type":"Number","desc":"Number of pages available","examples":[5]},"isFirstPage":{"type":"Boolean","desc":"Are we on first page?"},"isLastPage":{"type":"Boolean","desc":"Are we on last page?"},"firstPage":{"type":"Function","desc":"Navigates to first page","params":null,"returns":null,"addedIn":"v1.12.0"},"prevPage":{"type":"Function","desc":"Navigates to previous page, if available","params":null,"returns":null},"nextPage":{"type":"Function","desc":"Navigates to next page, if available","params":null,"returns":null},"lastPage":{"type":"Function","desc":"Navigates to last page","params":null,"returns":null,"addedIn":"v1.12.0"},"inFullscreen":{"type":"Boolean","desc":"Is table in fullscreen mode?"},"toggleFullscreen":{"type":"Function","desc":"Toggles fullscreen mode","params":null,"returns":null}}},"bottom":{"desc":"Slot to define how table bottom looks like","scope":{"pagination":{"type":"Object","desc":"Pagination object","definition":{"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"},"page":{"type":"Number","desc":"Page number (1-based)","examples":[3]},"rowsPerPage":{"type":"Number","desc":"How many rows per page? 0 means Infinite","examples":[10]}}},"pagesNumber":{"type":"Number","desc":"Number of pages available","examples":[5]},"isFirstPage":{"type":"Boolean","desc":"Are we on first page?"},"isLastPage":{"type":"Boolean","desc":"Are we on last page?"},"firstPage":{"type":"Function","desc":"Navigates to first page","params":null,"returns":null,"addedIn":"v1.12.0"},"prevPage":{"type":"Function","desc":"Navigates to previous page, if available","params":null,"returns":null},"nextPage":{"type":"Function","desc":"Navigates to next page, if available","params":null,"returns":null},"lastPage":{"type":"Function","desc":"Navigates to last page","params":null,"returns":null,"addedIn":"v1.12.0"},"inFullscreen":{"type":"Boolean","desc":"Is table in fullscreen mode?"},"toggleFullscreen":{"type":"Function","desc":"Toggles fullscreen mode","params":null,"returns":null}}},"pagination":{"desc":"Slot to override default pagination label and buttons","scope":{"pagination":{"type":"Object","desc":"Pagination object","definition":{"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"},"page":{"type":"Number","desc":"Page number (1-based)","examples":[3]},"rowsPerPage":{"type":"Number","desc":"How many rows per page? 0 means Infinite","examples":[10]}}},"pagesNumber":{"type":"Number","desc":"Number of pages available","examples":[5]},"isFirstPage":{"type":"Boolean","desc":"Are we on first page?"},"isLastPage":{"type":"Boolean","desc":"Are we on last page?"},"firstPage":{"type":"Function","desc":"Navigates to first page","params":null,"returns":null,"addedIn":"v1.12.0"},"prevPage":{"type":"Function","desc":"Navigates to previous page, if available","params":null,"returns":null},"nextPage":{"type":"Function","desc":"Navigates to next page, if available","params":null,"returns":null},"lastPage":{"type":"Function","desc":"Navigates to last page","params":null,"returns":null,"addedIn":"v1.12.0"},"inFullscreen":{"type":"Boolean","desc":"Is table in fullscreen mode?"},"toggleFullscreen":{"type":"Function","desc":"Toggles fullscreen mode","params":null,"returns":null}}},"top-left":{"desc":"Slot to define how left part of the table top looks like","scope":{"pagination":{"type":"Object","desc":"Pagination object","definition":{"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"},"page":{"type":"Number","desc":"Page number (1-based)","examples":[3]},"rowsPerPage":{"type":"Number","desc":"How many rows per page? 0 means Infinite","examples":[10]}}},"pagesNumber":{"type":"Number","desc":"Number of pages available","examples":[5]},"isFirstPage":{"type":"Boolean","desc":"Are we on first page?"},"isLastPage":{"type":"Boolean","desc":"Are we on last page?"},"firstPage":{"type":"Function","desc":"Navigates to first page","params":null,"returns":null,"addedIn":"v1.12.0"},"prevPage":{"type":"Function","desc":"Navigates to previous page, if available","params":null,"returns":null},"nextPage":{"type":"Function","desc":"Navigates to next page, if available","params":null,"returns":null},"lastPage":{"type":"Function","desc":"Navigates to last page","params":null,"returns":null,"addedIn":"v1.12.0"},"inFullscreen":{"type":"Boolean","desc":"Is table in fullscreen mode?"},"toggleFullscreen":{"type":"Function","desc":"Toggles fullscreen mode","params":null,"returns":null}}},"top-right":{"desc":"Slot to define how right part of the table top looks like","scope":{"pagination":{"type":"Object","desc":"Pagination object","definition":{"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"},"page":{"type":"Number","desc":"Page number (1-based)","examples":[3]},"rowsPerPage":{"type":"Number","desc":"How many rows per page? 0 means Infinite","examples":[10]}}},"pagesNumber":{"type":"Number","desc":"Number of pages available","examples":[5]},"isFirstPage":{"type":"Boolean","desc":"Are we on first page?"},"isLastPage":{"type":"Boolean","desc":"Are we on last page?"},"firstPage":{"type":"Function","desc":"Navigates to first page","params":null,"returns":null,"addedIn":"v1.12.0"},"prevPage":{"type":"Function","desc":"Navigates to previous page, if available","params":null,"returns":null},"nextPage":{"type":"Function","desc":"Navigates to next page, if available","params":null,"returns":null},"lastPage":{"type":"Function","desc":"Navigates to last page","params":null,"returns":null,"addedIn":"v1.12.0"},"inFullscreen":{"type":"Boolean","desc":"Is table in fullscreen mode?"},"toggleFullscreen":{"type":"Function","desc":"Toggles fullscreen mode","params":null,"returns":null}}},"top-selection":{"desc":"Slot to define how top table section looks like when user has selected at least one row","scope":{"pagination":{"type":"Object","desc":"Pagination object","definition":{"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"},"page":{"type":"Number","desc":"Page number (1-based)","examples":[3]},"rowsPerPage":{"type":"Number","desc":"How many rows per page? 0 means Infinite","examples":[10]}}},"pagesNumber":{"type":"Number","desc":"Number of pages available","examples":[5]},"isFirstPage":{"type":"Boolean","desc":"Are we on first page?"},"isLastPage":{"type":"Boolean","desc":"Are we on last page?"},"firstPage":{"type":"Function","desc":"Navigates to first page","params":null,"returns":null,"addedIn":"v1.12.0"},"prevPage":{"type":"Function","desc":"Navigates to previous page, if available","params":null,"returns":null},"nextPage":{"type":"Function","desc":"Navigates to next page, if available","params":null,"returns":null},"lastPage":{"type":"Function","desc":"Navigates to last page","params":null,"returns":null,"addedIn":"v1.12.0"},"inFullscreen":{"type":"Boolean","desc":"Is table in fullscreen mode?"},"toggleFullscreen":{"type":"Function","desc":"Toggles fullscreen mode","params":null,"returns":null}}},"no-data":{"desc":"Slot to define how the bottom will look like when is nothing to display","scope":{"message":{"type":"String","desc":"The suggested message","examples":["No data available"]},"icon":{"type":"String","desc":"The suggested icon name (following Quasar convention)","examples":["warning"]}}}},"events":{"row-click":{"desc":"Emitted when user clicks/taps on a row; Is not emitted when using body/row/item scoped slots","params":{"evt":{"type":"Object","desc":"JS event object","required":true},"row":{"type":"Object","desc":"The row upon which user has clicked/tapped"}},"addedIn":"v1.2.6"},"row-dblclick":{"desc":"Emitted when user quickly double clicks/taps on a row; Is not emitted when using body/row/item scoped slots; Please check JS dblclick event support before using","params":{"evt":{"type":"Object","desc":"JS event object","required":true},"row":{"type":"Object","desc":"The row upon which user has double clicked/tapped"}},"addedIn":"v1.5.10"},"request":{"desc":"Emitted when a server request is triggered","params":{"requestProp":{"type":"Object","desc":"Props of the request","definition":{"pagination":{"type":"Object","desc":"Pagination object","definition":{"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"},"page":{"type":"Number","desc":"Page number (1-based)","examples":[3]},"rowsPerPage":{"type":"Number","desc":"How many rows per page? 0 means Infinite","examples":[10]}}},"filter":{"type":"Function","desc":"Filter method (the \'filter-method\' prop)","params":{"rows":{"type":"Array","desc":"Array of rows","required":true},"terms":{"type":["String","Object"],"desc":"Terms to filter with (is essentially the \'filter\' prop value)","required":true},"cols":{"type":"Array","desc":"Optional column definitions"},"getCellValue":{"type":"Function","desc":"Optional function to get a cell value","params":{"col":{"type":"Object","desc":"Column name from column definitions"},"row":{"type":"Object","desc":"The row object"}},"returns":{"type":"Any","desc":"Parsed/Processed cell value","examples":["Ice Cream Sandwich"]}}},"returns":{"type":"Array","desc":"Filtered rows"}},"getCellValue":{"type":"Function","desc":"Optional function to get a cell value","params":{"col":{"type":"Object","desc":"Column name from column definitions"},"row":{"type":"Object","desc":"The row object"}},"returns":{"type":"Any","desc":"Parsed/Processed cell value","examples":["Ice Cream Sandwich"]}}}}}},"selection":{"desc":"Emitted when user selects/unselects row(s)","params":{"details":{"type":"Object","desc":"Selection details","definition":{"rows":{"type":"Array","desc":"Array of row objects that were selected/unselected"},"keys":{"type":"Array","desc":"Array of the keys of rows that were selected/unselected"},"added":{"type":"Boolean","desc":"Were the rows added to selection (true) or removed from selection (false)"},"evt":{"type":"Object","desc":"JS event object","required":true,"addedIn":"v1.11.2"}}}}},"update:pagination":{"desc":"Used by Vue on \'pagination.sync\' prop for updating its value","params":{"newPagination":{"type":"Object","desc":"The updated pagination object","definition":{"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"},"page":{"type":"Number","desc":"Page number (1-based)","examples":[3]},"rowsPerPage":{"type":"Number","desc":"How many rows per page? 0 means Infinite","examples":[10]}}}}},"update:selected":{"desc":"Used by Vue on \'selected.sync\' prop for updating its value","params":{"newSelected":{"type":"Array","desc":"The updated selected array","examples":["[ { name: \'Frozen Yogurt\', calories: 159, fat: 6 } ]"]}}},"update:expanded":{"desc":"Used by Vue on \'expanded.sync\' prop for updating its value","params":{"newExpanded":{"type":"Array","desc":"The updated expanded array","examples":["[ \'row-a\', \'row-b\' ]"]}},"addedIn":"v1.8.3"},"virtual-scroll":{"desc":"Emitted when the virtual scroll occurs, if using virtual scroll","params":{"details":{"type":"Object","desc":"Object of properties on the new scroll position","definition":{"index":{"type":"Number","desc":"Index of the list item that was scrolled into view (0 based)","examples":[30]},"from":{"type":"Number","desc":"The index of the first list item that is rendered (0 based)","examples":[10]},"to":{"type":"Number","desc":"The index of the last list item that is rendered (0 based)","examples":[50]},"direction":{"type":"String","desc":"Direction of change","values":["increase","decrease"]}}}},"addedIn":"v1.4.1"}},"methods":{"toggleFullscreen":{"desc":"Toggles fullscreen mode"},"setFullscreen":{"desc":"Enter the fullscreen view"},"exitFullscreen":{"desc":"Leave the fullscreen view"},"requestServerInteraction":{"desc":"Trigger a server request (emits \'request\' event)","params":{"props":{"type":"Object","desc":"Request details","definition":{"pagination":{"type":"Object","desc":"Optional pagination object","definition":{"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"},"page":{"type":"Number","desc":"Page number (1-based)","examples":[3]},"rowsPerPage":{"type":"Number","desc":"How many rows per page? 0 means Infinite","examples":[10]}}},"filter":{"type":"Function","desc":"Filtering method (the \'filter-method\' prop)","params":{"rows":{"type":"Array","desc":"Array of rows","required":true},"terms":{"type":["String","Object"],"desc":"Terms to filter with (is essentially the \'filter\' prop value)","required":true},"cols":{"type":"Array","desc":"Optional column definitions"},"getCellValue":{"type":"Function","desc":"Optional function to get a cell value","params":{"col":{"type":"Object","desc":"Column name from column definitions"},"row":{"type":"Object","desc":"The row object"}},"returns":{"type":"Any","desc":"Parsed/Processed cell value","examples":["Ice Cream Sandwich"]}}},"returns":{"type":"Array","desc":"Filtered rows"}}}}}},"setPagination":{"desc":"Unless using an external pagination Object (through \'pagination.sync\' prop), you can use this method and force the internal pagination to change","params":{"pagination":{"type":"Object","desc":"Pagination object","required":true,"definition":{"sortBy":{"type":"String","desc":"Column name (from column definition)","examples":["calories"]},"descending":{"type":"Boolean","desc":"Is sorting in descending order?"},"page":{"type":"Number","desc":"Page number (1-based)","examples":[3]},"rowsPerPage":{"type":"Number","desc":"How many rows per page? 0 means Infinite","examples":[10]}}},"forceServerRequest":{"type":"Boolean","desc":"Also force a server request"}}},"firstPage":{"desc":"Navigates to first page","addedIn":"v1.12.0"},"prevPage":{"desc":"Navigates to previous page, if available"},"nextPage":{"desc":"Navigates to next page, if available"},"lastPage":{"desc":"Navigates to last page","addedIn":"v1.12.0"},"isRowSelected":{"desc":"Determine if a row has been selected by user","params":{"key":{"type":"Any","desc":"Row key value","required":true,"examples":["calories"]}},"returns":{"type":"Boolean","desc":"Is row selected or not?"}},"clearSelection":{"desc":"Clears user selection (emits \'update:selected\' with empty array)"},"isRowExpanded":{"desc":"Determine if a row is expanded or not","params":{"key":{"type":"Any","desc":"Row key value","required":true,"examples":["calories"]}},"returns":{"type":"Boolean","desc":"Is row expanded or not?"},"addedIn":"v1.8.3"},"setExpanded":{"desc":"Sets the expanded rows keys array; Especially useful if not using an external \'expanded\' state otherwise just emits \'update:expanded\' with the value","params":{"expanded":{"type":"Array","desc":"Array containing keys of the expanded rows","required":true,"examples":["[ \'row-a\', \'row-b\' ]"]}},"addedIn":"v1.8.3"},"sort":{"desc":"Trigger a table sort","params":{"col":{"type":["String","Object"],"desc":"Column name or column definition object","required":true,"examples":["calories"]}}},"resetVirtualScroll":{"desc":"Resets the virtual scroll (if using it) computations; Needed for custom edge-cases"},"scrollTo":{"desc":"Scroll the table to the row with the specified index in page (0 based)","params":{"index":{"type":["String","Number"],"desc":"The index of the row in page (0 based)","required":true,"examples":["1",23]}},"addedIn":"v1.7.2"}}}')},"22dd":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/tooltip"},"props":{"content-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the content","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"content-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the content","examples":["background-color: #ff0000",":content-style=\\"{ color: \'#ff0000\' }\\""],"category":"style"},"value":{"type":"Boolean","desc":"Model of the component defining shown/hidden state; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model"},"max-height":{"type":"String","desc":"The maximum height of the Tooltip; Size in CSS units, including unit name","examples":["16px","2rem"],"category":"content"},"max-width":{"type":"String","desc":"The maximum width of the Tooltip; Size in CSS units, including unit name","examples":["16px","2rem"],"category":"content"},"transition-show":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"jump-down"},"transition-hide":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"jump-up"},"anchor":{"type":"String","desc":"Two values setting the starting position or anchor point of the Tooltip relative to its target","values":["top left","top middle","top right","center left","center middle","center right","bottom left","bottom middle","bottom right"],"examples":["top left","bottom right"],"category":"position"},"self":{"type":"String","desc":"Two values setting the Tooltip\'s own position relative to its target","values":["top left","top middle","top right","center left","center middle","center right","bottom left","bottom middle","bottom right"],"examples":["top left","bottom right"],"category":"position"},"offset":{"type":"Array","desc":"An array of two numbers to offset the Tooltip horizontally and vertically in pixels","default":"[14, 14]","examples":["[8, 8]","[5, 10]"],"category":"position"},"scroll-target":{"type":["Element","String"],"desc":"CSS selector or DOM element to be used as a custom scroll container instead of the auto detected one","examples":[":scroll-target=\\"$refs.scrollTarget\\"","scroll-target=\\".scroll-target-class\\"","scroll-target=\\"#scroll-target-id\\"","scroll-target=\\"body\\""],"category":"behavior","addedIn":"v1.8.0"},"target":{"type":["Boolean","String"],"desc":"Configure a target element to trigger Tooltip toggle; \'true\' means it enables the parent DOM element, \'false\' means it disables attaching events to any DOM elements; By using a String (CSS selector) it attaches the events to the specified DOM element (if it exists)","default":true,"values":["(Boolean) true","(Boolean) false","(CSS selector)"],"examples":[":target=\\"false\\"","target=\\".my-parent\\""],"category":"behavior"},"no-parent-event":{"type":"Boolean","desc":"Skips attaching events to the target DOM element (that trigger the element to get shown)","category":"behavior"},"delay":{"type":"Number","desc":"Configure Tooltip to appear with delay","default":0,"examples":[":delay=\\"550\\""],"category":"behavior"},"hide-delay":{"type":"Number","desc":"Configure Tooltip to disappear with delay","default":0,"examples":[":hide-delay=\\"650\\""],"category":"behavior","addedIn":"v1.9.5"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"events":{"input":{"desc":"Emitted when showing/hidden state changes; Is also used by v-model","params":{"value":{"type":"Boolean","desc":"New state (showing/hidden)"}}},"show":{"desc":"Emitted after component has triggered show()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-show":{"desc":"Emitted when component triggers show() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"hide":{"desc":"Emitted after component has triggered hide()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-hide":{"desc":"Emitted when component triggers hide() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}}},"methods":{"show":{"desc":"Triggers component to show","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"hide":{"desc":"Triggers component to hide","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"toggle":{"params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}},"desc":"Triggers component to toggle between show/hide"},"updatePosition":{"desc":"There are some custom scenarios for which Quasar cannot automatically reposition the tooltip without significant performance drawbacks so the optimal solution is for you to call this method when you need it"}}}')},"2e7d":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},"2f4f":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/field"},"props":{"error":{"type":"Boolean","desc":"Does field have validation errors?","category":"behavior"},"error-message":{"type":"String","desc":"Validation error message (gets displayed only if \'error\' is set to \'true\')","examples":["Username must have at least 5 characters"],"category":"content"},"no-error-icon":{"type":"Boolean","desc":"Hide error icon when there is an error","category":"content"},"rules":{"type":"Array","desc":"Array of Functions/Strings; If String, then it must be a name of one of the embedded validation rules","examples":[":rules=\\"[ val => val.length <= 3 || \'Please use maximum 3 characters\' ]\\"",":rules=\\"[ \'fulltime\' ]\\""],"category":"behavior"},"reactive-rules":{"type":"Boolean","desc":"By default a change in the rules does not trigger a new validation until the model changes; If set to true then a change in the rules will trigger a validation; Has a performance penalty, so use it only when you really need it","category":"behavior","addedIn":"v1.11.0"},"lazy-rules":{"type":["Boolean","String"],"desc":"If set to boolean true then it checks validation status against the \'rules\' only after field loses focus for first time; If set to \'ondemand\' then it will trigger only when component\'s validate() method is manually called or when the wrapper QForm submits itself","values":["(Boolean) true","(Boolean) false","ondemand"],"category":"behavior"},"label":{"type":"String","desc":"A text label that will “float” up above the input field, once the field gets focus","examples":["Username"],"category":"content"},"stack-label":{"type":"Boolean","desc":"Label will be always shown above the field regardless of field content (if any)","category":"content"},"hint":{"type":"String","desc":"Helper (hint) text which gets placed below your wrapped form component","examples":["Fill in between 3 and 12 characters"],"category":"content"},"hide-hint":{"type":"Boolean","desc":"Hide the helper (hint) text when field doesn\'t have focus","category":"content"},"prefix":{"type":"String","desc":"Prefix","examples":["$"],"category":"content"},"suffix":{"type":"String","desc":"Suffix","examples":["@gmail.com"],"category":"content"},"label-color":{"type":"String","desc":"Color name for the label from the Quasar Color Palette; Overrides the \'color\' prop; The difference from \'color\' prop is that the label will always have this color, even when field is not focused","examples":["primary","teal-10"],"category":"style","addedIn":"v1.7.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"bg-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"loading":{"type":"Boolean","desc":"Signals the user a process is in progress by displaying a spinner; Spinner can be customized by using the \'loading\' slot.","category":"behavior|content"},"clearable":{"type":"Boolean","desc":"Appends clearable icon when a value (not undefined or null) is set; When clicked, model becomes null","category":"behavior|content"},"clear-icon":{"type":"String","desc":"Custom icon to use for the clear button when using along with \'clearable\' prop","examples":["close"],"category":"content"},"filled":{"type":"Boolean","desc":"Use \'filled\' design for the field","category":"style"},"outlined":{"type":"Boolean","desc":"Use \'outlined\' design for the field","category":"style"},"borderless":{"type":"Boolean","desc":"Use \'borderless\' design for the field","category":"style"},"standout":{"type":["Boolean","String"],"desc":"Use \'standout\' design for the field; Specifies classes to be applied when focused (overriding default ones)","examples":["standout","standout=\\"bg-primary text-white\\""],"category":"style"},"label-slot":{"type":"Boolean","desc":"Enables label slot; You need to set it to force use of the \'label\' slot if the \'label\' prop is not set","category":"content","addedIn":"v1.12.9"},"bottom-slots":{"type":"Boolean","desc":"Enables bottom slots (\'error\', \'hint\', \'counter\')","category":"content"},"hide-bottom-space":{"type":"Boolean","desc":"Do not reserve space for hint/error/counter anymore when these are not used; As a result, it also disables the animation for those; It also allows the hint/error area to stretch vertically based on its content","category":"style"},"counter":{"type":"Boolean","desc":"Show an automatic counter on bottom right","category":"content"},"rounded":{"type":"Boolean","desc":"Applies a small standard border-radius for a squared shape of the component","category":"style"},"square":{"type":"Boolean","desc":"Remove border-radius so borders are squared; Overrides \'rounded\' prop","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"item-aligned":{"type":"Boolean","desc":"Match inner content alignment to that of QItem","category":"style"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"autofocus":{"type":"Boolean","desc":"Focus field on initial component render","category":"behavior"},"for":{"type":"String","desc":"Used to specify the \'id\' of the control and also the \'for\' attribute of the label that wraps it; If no \'name\' prop is specified, then it is used for this attribute as well","examples":["myFieldsId"],"category":"behavior","addedIn":"v1.4.2"},"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms; If not specified, it takes the value of \'for\' prop, if it exists","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"maxlength":{"type":["String","Number"],"desc":"Specify a max length of model","examples":["12"],"category":"model"}},"slots":{"default":{"desc":"Field main content"},"prepend":{"desc":"Prepend inner field; Suggestions: QIcon, QBtn"},"append":{"desc":"Append to inner field; Suggestions: QIcon, QBtn"},"before":{"desc":"Prepend outer field; Suggestions: QIcon, QBtn"},"after":{"desc":"Append outer field; Suggestions: QIcon, QBtn"},"label":{"desc":"Slot for label; Used only if \'label-slot\' prop is set or the \'label\' prop is set; When it is used the text in the \'label\' prop is ignored","addedIn":"v1.12.9"},"error":{"desc":"Slot for errors; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"hint":{"desc":"Slot for hint text; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"counter":{"desc":"Slot for counter text; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"loading":{"desc":"Override default spinner when component is in loading mode; Use in conjunction with \'loading\' prop"}},"scopedSlots":{"control":{"desc":"Slot for controls; Suggestion QSlider, QRange, QKnob, ...","scope":{"id":{"type":"String","desc":"Element id used in the `for` attribute of the field label. Can be used to link the control to the label","examples":["qf_363270c0-7a83-62b1-8dcf-6dfd64ee38fa"]},"field":{"type":"Object","desc":"DOM element of the field"},"editable":{"type":"Boolean","desc":"Field is editable"},"focused":{"type":"Boolean","desc":"Field has focus"},"floatingLabel":{"type":"Boolean","desc":"Field\'s label is floating"},"value":{"type":"Any","desc":"Field\'s value","examples":[0.241,"Text"]},"emitValue":{"type":"Function","desc":"Function that emits an @input event in the context of the field","params":{"value":{"type":"Any","desc":"Value to be emitted","examples":[0,"Changed text"]}},"returns":null}}}},"events":{"clear":{"desc":"When using the \'clearable\' property, this event is emitted when the clear icon is clicked","addedIn":"v1.1.5","params":{"value":{"type":["Any"],"desc":"The previous value before clearing it"}}},"input":{"desc":"Emitted when the model changes, only when used with \'clearable\' or the \'control\' scoped slot.","params":{"value":{"type":"Any","desc":"New model value","required":true}}},"focus":{"desc":"Emitted when component gets focused","params":{"evt":{"type":"Object","desc":"JS event object"}}},"blur":{"desc":"Emitted when component loses focus","params":{"evt":{"type":"Object","desc":"JS event object"}}}},"methods":{"resetValidation":{"desc":"Reset validation status"},"validate":{"desc":"Trigger a validation","params":{"value":{"type":"Any","desc":"Optional value to validate against"}},"returns":{"type":["Boolean","Promise<boolean>"],"desc":"True/false if no async rules, otherwise a Promise with the outcome (true -> validation was a success, false -> invalid models detected)","examples":["true","validate().then(outcome => { ... })"]}},"focus":{"desc":"Focus field"},"blur":{"desc":"Blur field (lose focus)"}}}')},"30b0":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/circular-progress"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"value":{"type":"Number","default":0,"desc":"Current progress (must be between min/max)","examples":[0,100,52.32],"category":"model"},"min":{"type":"Number","default":0,"desc":"Minimum value defining \'no progress\' (must be lower than \'max\')","examples":[0,100,52.32],"category":"model"},"max":{"type":"Number","default":100,"desc":"Maximum value defining 100% progress made (must be higher than \'min\')","examples":[100,52.32],"category":"model"},"color":{"type":"String","desc":"Color name for the arc progress from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"center-color":{"type":"String","desc":"Color name for the center part of the component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"track-color":{"type":"String","desc":"Color name for the track of the component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"font-size":{"type":"String","desc":"Size of text in CSS units, including unit name. Suggestion: use \'em\' units to sync with component size","default":"0.25em","examples":["1em","16px","2rem"],"category":"style"},"thickness":{"type":"Number","default":0.2,"desc":"Thickness of progress arc as a ratio (0.0 < x < 1.0) of component size","examples":[1,0.3],"category":"style"},"angle":{"type":"Number","desc":"Angle to rotate progress arc by","default":0,"examples":[0,40,90],"category":"content"},"indeterminate":{"type":"Boolean","desc":"Put component into \'indeterminate\' state; Ignores \'value\' prop","category":"behavior"},"show-value":{"type":"Boolean","desc":"Enables the default slot and uses it (if available), otherwise it displays the \'value\' prop as text; Make sure the text has enough space to be displayed inside the component","category":"content|behavior"},"reverse":{"type":"Boolean","desc":"Reverses the direction of progress; Only for determined state","category":"behavior"},"instant-feedback":{"type":"Boolean","desc":"No animation when model changes","category":"behavior"}},"slots":{"default":{"desc":"Used for component content only if \'show-value\' prop is set; Make sure the content has enough space to be displayed inside the component"}}}')},"31f1":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/card"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"tag":{"type":"String","desc":"HTML tag to render","default":"div","category":"content","examples":["div","form"],"addedIn":"v1.8.4"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"square":{"type":"Boolean","desc":"Removes border-radius so borders are squared","category":"style"},"flat":{"type":"Boolean","desc":"Applies a \'flat\' design (no default shadow)","category":"style"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},3507:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/dark"},"injection":"$q.dark","addedIn":"v1.3.0","props":{"isActive":{"type":"Boolean","desc":"Is Dark mode active?","reactive":true},"mode":{"type":["Boolean","String"],"desc":"Dark mode configuration (not status)","values":["auto","(Boolean) true","(Boolean) false"],"reactive":true}},"methods":{"set":{"desc":"Set dark mode status","params":{"status":{"type":["Boolean","String"],"desc":"Dark mode status","values":["(Boolean) true","(Boolean) false","auto"],"required":true}}},"toggle":{"desc":"Toggle dark mode status"}}}')},3533:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/pull-to-refresh"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"color":{"type":"String","desc":"Color name for the icon from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"bg-color":{"type":"String","desc":"Color name for background of the icon container from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.9.5"},"icon":{"type":"String","desc":"Icon to display when refreshing the content","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"no-mouse":{"type":"Boolean","desc":"Don\'t listen for mouse events","category":"behavior"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"scroll-target":{"type":["Element","String"],"desc":"CSS selector or DOM element to be used as a custom scroll container instead of the auto detected one","examples":[":scroll-target=\\"$refs.scrollTarget\\"","scroll-target=\\".scroll-target-class\\"","scroll-target=\\"#scroll-target-id\\"","scroll-target=\\"body\\""],"category":"behavior","addedIn":"v1.8.0"}},"slots":{"default":{"desc":"Content (area controlled by the component) goes here"}},"events":{"refresh":{"desc":"Called whenever a refresh is triggered; at this time, your function should load more data","params":{"done":{"type":"Function","desc":"Call the done() function when your data has been refreshed","params":null,"returns":null}}}},"methods":{"trigger":{"desc":"Triggers a refresh"},"updateScrollTarget":{"desc":"Updates the scroll target; Useful when the parent elements change so that the scrolling target also changes"}}}')},3701:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/options/screen-plugin"},"injection":"$q.screen","props":{"width":{"type":"Number","desc":"Screen width (in pixels)","reactive":true,"examples":[452]},"height":{"type":"Number","desc":"Screen height (in pixels)","reactive":true,"examples":[721]},"name":{"type":"String","desc":"Tells current window breakpoint","values":["xs","sm","md","lg","xl"],"reactive":true,"addedIn":"v1.5.2"},"sizes":{"type":"Object","desc":"Breakpoints (in pixels)","definition":{"sm":{"type":"Number","desc":"Breakpoint width size (minimum size)","examples":[600]},"md":{"type":"Number","desc":"Breakpoint width size (minimum size)","examples":[1024]},"lg":{"type":"Number","desc":"Breakpoint width size (minimum size)","examples":[1440]},"xl":{"type":"Number","desc":"Breakpoint width size (minimum size)","examples":[1920]}},"reactive":true,"examples":["{ sm: 600, md: 1024, lg: 1440, xl: 1920 }"]},"lt":{"type":"Object","desc":"Tells if current screen width is lower than breakpoint-name","reactive":true,"definition":{"sm":{"type":"Boolean","desc":"Is current screen width lower than this breakpoint\'s lowest limit?"},"md":{"type":"Boolean","desc":"Is current screen width lower than this breakpoint\'s lowest limit?"},"lg":{"type":"Boolean","desc":"Is current screen width lower than this breakpoint\'s lowest limit?"},"xl":{"type":"Boolean","desc":"Is current screen width lower than this breakpoint\'s lowest limit?"}},"examples":["{ sm: false, md: true, lg: true, xl: true }"]},"gt":{"type":"Object","desc":"Tells if current screen width is greater than breakpoint-name","reactive":true,"definition":{"xs":{"type":"Boolean","desc":"Is current screen width greater than this breakpoint\'s max limit?"},"sm":{"type":"Boolean","desc":"Is current screen width greater than this breakpoint\'s max limit?"},"md":{"type":"Boolean","desc":"Is current screen width greater than this breakpoint\'s max limit?"},"lg":{"type":"Boolean","desc":"Is current screen width greater than this breakpoint\'s max limit?"}},"examples":["{ xs: true, sm: true, md: false, lg: false, xl: false }"]},"xs":{"type":"Boolean","desc":"Current screen width fits exactly \'xs\' breakpoint","reactive":true},"sm":{"type":"Boolean","desc":"Current screen width fits exactly \'sm\' breakpoint","reactive":true},"md":{"type":"Boolean","desc":"Current screen width fits exactly \'md\' breakpoint","reactive":true},"lg":{"type":"Boolean","desc":"Current screen width fits exactly \'lg\' breakpoint","reactive":true},"xl":{"type":"Boolean","desc":"Current screen width fits exactly \'xl\' breakpoint","reactive":true}},"methods":{"setSizes":{"desc":"Override default breakpoint sizes","params":{"breakpoints":{"type":"Object","desc":"Pick what you want to override","definition":{"sm":{"type":"Number","desc":"Breakpoint width size (minimum size)","examples":[600]},"md":{"type":"Number","desc":"Breakpoint width size (minimum size)","examples":[1024]},"lg":{"type":"Number","desc":"Breakpoint width size (minimum size)","examples":[1440]},"xl":{"type":"Number","desc":"Breakpoint width size (minimum size)","examples":[1920]}},"required":true}}},"setDebounce":{"desc":"Debounce update of all props when screen width/height changes","params":{"amount":{"type":"Number","desc":"Amount in milliseconds","required":true,"examples":[300]}}}}}')},"390b":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/avatar"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"font-size":{"type":"String","desc":"The size in CSS units, including unit name, of the content (icon, text)","examples":["18px","2rem"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"square":{"type":"Boolean","desc":"Removes border-radius so borders are squared","category":"style"},"rounded":{"type":"Boolean","desc":"Applies a small standard border-radius for a squared shape of the component","category":"style"}},"slots":{"default":{"desc":"Optional; Suggestions: one character string, <img> tag"}}}')},"3cda":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/breadcrumbs"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"to":{"type":["String","Object"],"desc":"Equivalent to Vue Router <router-link> \'to\' property","examples":["/home/dashboard",":to=\\"{ name: \'my-route-name\' }\\""],"category":"behavior"},"exact":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'exact\' property","category":"behavior"},"append":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'append\' property","category":"behavior"},"replace":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'replace\' property","category":"behavior"},"active-class":{"type":"String","desc":"Equivalent to Vue Router <router-link> \'active-class\' property","examples":["my-active-class"],"category":"behavior"},"exact-active-class":{"type":"String","desc":"Equivalent to Vue Router <router-link> \'active-class\' property","examples":["my-exact-active-class"],"category":"behavior"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"label":{"type":"String","desc":"The label text for the breadcrumb","examples":["Home","Index"],"category":"content"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"}},"slots":{"default":{"desc":"This is where custom content goes, unless \'icon\' and \'label\' props are not enough"}}}')},"3dc1":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/card"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"align":{"type":"String","desc":"Specify how to align the actions","default":"left (for horizontal mode) / stretch (for vertical mode)","values":["left","center","right","between","around","evenly","stretch"],"category":"content"},"vertical":{"type":"Boolean","desc":"Display actions one below the other","category":"content"}},"slots":{"default":{"desc":"Suggestions: QBtn"}}}')},"3ddd":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},"3e9d":function(e){e.exports=JSON.parse('{"type":"directive","meta":{"docsUrl":"https://v1.quasar.dev/vue-directives/touch-swipe"},"value":{"type":"Function","desc":"Handler for swipe (use a non-function to disable)","params":{"details":{"type":"Object","desc":"Event details","definition":{"evt":{"type":"Object","desc":"Original JS event Object"},"touch":{"type":"Boolean","desc":"Triggered by a touch event"},"mouse":{"type":"Boolean","desc":"Triggered by a mouse event"},"direction":{"type":"String","desc":"Direction of movement","values":["up","right","down","left"]},"duration":{"type":"Number","desc":"How long it took to trigger the event (in milliseconds)","examples":[612]},"distance":{"type":"Object","desc":"Absolute distance (in pixels) since movement started from initial point","definition":{"x":{"type":"Number","desc":"Absolute distance horizontally","examples":[231]},"y":{"type":"Number","desc":"Absolute distance vertically","examples":[231]}}}}}},"returns":null,"examples":["v-touch-swipe=\\"fnToCall\\"","v-touch-swipe=\\"void 0\\""]},"arg":{"type":"String","desc":"x:y:z, where x is minimum velocity (dist/time; please use float without a dot, example: 6e-2 which is equivalent to 6 * 10^-2 = 0.06), y is minimum distance on first move on mobile, z is minimum distance on desktop until deciding if it\'s a swipe indeed","default":"6e-2:6:50","examples":["v-touch-swipe:7e-2:10:100=\\"fnToCall\\""]},"modifiers":{"capture":{"type":"Boolean","desc":"Use capture for touchstart event"},"mouse":{"type":"Boolean","desc":"Listen for mouse events too"},"mouseCapture":{"type":"Boolean","desc":"Use capture for mousedown event"},"horizontal":{"type":"Boolean","desc":"Catch horizontal (left/right) movement","reactive":true},"vertical":{"type":"Boolean","desc":"Catch vertical (up/down) movement","reactive":true},"up":{"type":"Boolean","desc":"Catch swipe to up","reactive":true},"right":{"type":"Boolean","desc":"Catch swipe to right","reactive":true},"down":{"type":"Boolean","desc":"Catch swipe to down","reactive":true},"left":{"type":"Boolean","desc":"Catch swipe to left","reactive":true}}}')},4064:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/pagination"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"value":{"type":"Number","desc":"Current page (must be between min/max)","required":true,"examples":[3],"category":"model"},"min":{"type":"Number","desc":"Minimum page (must be lower than \'max\')","default":1,"examples":[3],"category":"model"},"max":{"type":"Number","desc":"Number of last page (must be higher than \'min\')","default":100,"required":true,"examples":[10],"category":"model"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","default":"primary"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color (useful when you are using it along with the \'input\' prop)","category":"style","addedIn":"v1.4.2"},"input-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the input (if using one)","examples":["background-color: #ff0000",":input-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style"},"input-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the input (if using one)","examples":["my-special-class",":input-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"size":{"type":"String","desc":"Button size in CSS units, including unit name","examples":["20px"],"category":"style"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"input":{"type":"Boolean","desc":"Use an input instead of buttons","category":"content"},"icon-prev":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v.1.9.4"},"icon-next":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v.1.9.4"},"icon-first":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v.1.9.4"},"icon-last":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v.1.9.4"},"to-fn":{"type":"Function","desc":"Generate link for page buttons; For best performance, reference it from your scope and do not define it inline","params":{"page":{"type":"Number","desc":"Page number to navigate to","examples":[2]}},"returns":{"type":["Object","String"],"desc":"Object or String that can be passed to a <router-link> as `to` parameter"},"examples":[":to-fn=\\"page => ({ query: { page } })\\""],"category":"content","addedIn":"v1.2.6"},"boundary-links":{"type":"Boolean","desc":"Show boundary button links","category":"content"},"boundary-numbers":{"type":"Boolean","desc":"Always show first and last page buttons (if not using \'input\')","category":"content"},"direction-links":{"type":"Boolean","desc":"Show direction buttons","category":"content"},"ellipses":{"type":"Boolean","desc":"Show ellipses (...) when pages are available","category":"content"},"max-pages":{"type":"Number","default":0,"desc":"Maximum number of page links to display at a time; 0 means Infinite","examples":[5],"category":"model"},"ripple":{"type":["Boolean","Object"],"desc":"Configure buttons material ripple (disable it by setting it to \'false\' or supply a config object); Does not applies to boundary and ellipsis buttons","default":true,"examples":[false,"{ early: true, center: true, color: \'teal\', keyCodes: [] }"],"category":"style","addedIn":"v1.9.11"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"String","desc":"New model value","required":true}}}},"methods":{"set":{"desc":"Go directly to the specified page","params":{"pageNumber":{"type":"Number","desc":"Page number to go to","examples":[3]}}},"setByOffset":{"desc":"Increment/Decrement current page by offset","params":{"offset":{"type":"Number","desc":"Offset page, can be negative or positive","examples":[3]}}}}}')},"43ba":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/floating-action-button"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"type":{"type":"String","desc":"Define the button HTML DOM type","default":"a","values":["a","submit","button","reset"],"category":"general"},"outline":{"type":"Boolean","desc":"Use \'outline\' design for Fab button","category":"style"},"push":{"type":"Boolean","desc":"Use \'push\' design for Fab button","category":"style"},"flat":{"type":"Boolean","desc":"Use \'flat\' design for Fab button","category":"style"},"unelevated":{"type":"Boolean","desc":"Remove shadow","category":"style","addedIn":"v1.9.0"},"padding":{"type":"String","desc":"Apply custom padding (vertical [horizontal]); Size in CSS units, including unit name or standard size name (none|xs|sm|md|lg|xl); Also removes the min width and height when set","examples":["16px","10px 5px","2rem","xs","md lg"],"category":"style","addedIn":"v1.11.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"glossy":{"type":"Boolean","desc":"Apply the glossy effect over the button","category":"style"},"external-label":{"type":"Boolean","desc":"Display label besides the FABs, as external content","category":"style|content","addedIn":"v1.9.0"},"label":{"type":["String","Number"],"desc":"The label that will be shown when Fab is extended","default":"","examples":["Button Label"],"category":"content","addedIn":"v1.9.0"},"label-position":{"type":"String","desc":"Position of the label around the icon","values":["top","right","bottom","left"],"category":"style|content","addedIn":"v1.9.0"},"hide-label":{"type":"Boolean","desc":"Hide the label; Useful for animation purposes where you toggle the visibility of the label","category":"style|content","addedIn":"v1.9.0"},"label-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the label container","examples":["my-special-class",":input-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style","addedIn":"v1.9.0"},"label-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the label container","examples":["background-color: #ff0000",":input-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style","addedIn":"v1.9.0"},"square":{"type":"Boolean","desc":"Apply a rectangle aspect to the FAB","category":"style","addedIn":"v1.9.0"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"value":{"type":"Boolean","desc":"Controls state of fab actions (showing/hidden); Works best with v-model directive, otherwise use along listening to \'input\' event","category":"model"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"active-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"hide-icon":{"type":"Boolean","desc":"Hide the icon (don\'t use any)","category":"style|content","addedIn":"v1.9.14"},"direction":{"type":"String","desc":"Direction to expand Fab Actions to","default":"right","values":["up","right","down","left"],"examples":["bottom"],"category":"behavior"},"vertical-actions-align":{"type":"String","desc":"The side of the Fab where Fab Actions will expand (only when direction is \'up\' or \'down\')","default":"center","values":["left","center","right"],"category":"style|content","addedIn":"v1.9.0"},"persistent":{"type":"Boolean","desc":"By default, Fab Actions are hidden when user navigates to another route and this prop disables this behavior","category":"behavior"}},"slots":{"default":{"desc":"This is where QFabActions may go into"},"tooltip":{"desc":"Slot specifically designed for a QTooltip"}},"events":{"input":{"desc":"Emitted when fab actions are shown/hidden; Captured by v-model directive","params":{"value":{"type":"Boolean","desc":"New state (showing/hidden)"}}},"show":{"desc":"Emitted after component has triggered show()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-show":{"desc":"Emitted when component triggers show() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"hide":{"desc":"Emitted after component has triggered hide()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-hide":{"desc":"Emitted when component triggers hide() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}}},"methods":{"show":{"desc":"Expands fab actions list","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"hide":{"desc":"Collapses fab actions list","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"toggle":{"params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}},"desc":"Triggers component to toggle between show/hide"}}}')},"46d9":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/list-and-list-items"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"separator":{"type":"Boolean","desc":"Applies a separator between contained items","category":"content"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"padding":{"type":"Boolean","desc":"Applies a material design-like padding on top and bottom","category":"content"}},"slots":{"default":{"desc":"This is where the content goes; Suggestion: QItem, QExpansionItem, ..."}}}')},"470a":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/radio"},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style","addedIn":"v1.8.0"},"value":{"desc":"Model of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model","type":["Number","String"],"required":true,"examples":["v-model=\\"option\\""]},"val":{"type":["Number","String"],"required":true,"desc":"The actual value of the option with which model value is changed","examples":["opt1",50],"category":"model"},"label":{"type":"String","desc":"Label to display along the radio control (or use the default slot instead of this prop)","examples":["label=\\"Option 1\\""],"category":"label"},"left-label":{"type":"Boolean","desc":"Label (if any specified) should be displayed on the left side of the checkbox","category":"label"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"keep-color":{"type":"Boolean","desc":"Should the color (if specified any) be kept when checkbox is unticked?","category":"behavior"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"}},"slots":{"default":{"desc":"Default slot can be used as label, unless \'label\' prop is specified; Suggestion: string"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true},"evt":{"type":"Object","desc":"JS event object","required":true,"addedIn":"v1.11.2"}}}},"methods":{"set":{"desc":"Sets the Radio\'s v-model to equal the val"}}}')},"4af7":function(e){e.exports=JSON.parse('{"type":"directive","meta":{"docsUrl":"https://v1.quasar.dev/vue-directives/close-popup"},"value":{"type":["Boolean","Number","String"],"desc":"If value is 0 or \'false\' then directive is disabled; if value is < 0 then it closes all popups in the chain; if value is 1 or \'true\' or undefined then it closes only the parent popup; if value is > 1 it closes the specified number of parent popups in the chain (note that chained QMenus are considered 1 popup only & QPopupProxy separates chained menus)","examples":["v-close-popup","v-close-popup=\\"booleanState\\"","v-close-popup=\\"-1\\"","v-close-popup=\\"2\\"","v-close-popup=\\"0\\""]}}')},"4ced":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/layout/header-and-footer"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"value":{"type":"Boolean","desc":"Model of the component defining if it is shown or hidden to the user; Either use this property (along with a listener for \'input\' event) OR use v-model directive","default":true,"examples":["v-model=\\"footerState\\""],"category":"model"},"reveal":{"type":"Boolean","desc":"Enable \'reveal\' mode; Takes into account user scroll to temporarily show/hide footer","category":"behavior"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style"},"elevated":{"type":"Boolean","desc":"Adds a default shadow to the footer","category":"style"},"height-hint":{"type":["Number","String "],"desc":"When using SSR, you can optionally hint of the height (in pixels) of the QFooter","default":50,"examples":["150"],"category":"behavior","addedIn":"v1.1.0"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component; Suggestion: QToolbar"}},"events":{"reveal":{"desc":"Emitted when \'reveal\' state gets changed","params":{"value":{"type":"Boolean","desc":"New \'reveal\' state"}}}}}')},"4cf4":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},5089:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},"51f2":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/responsive"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"addedIn":"v1.9.0","props":{"ratio":{"type":["String","Number"],"desc":"Aspect ratio for the content; If value is a String, then avoid using a computational statement (like \'16/9\') and instead specify the String value of the result directly (eg. \'1.7777\')","examples":[":ratio=\\"4/3\\"",":ratio=\\"16/9\\"","ratio=\\"1\\""],"category":"style"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},"53dd":function(e){e.exports=JSON.parse('{"type":"directive","meta":{"docsUrl":"https://v1.quasar.dev/vue-directives/material-ripple"},"quasarConfOptions":{"propName":"ripple","definition":{"early":{"type":"Boolean","desc":"Trigger early/immediately on user interaction"},"stop":{"type":"Boolean","desc":"Stop click/touch event propagation"},"center":{"type":"Boolean","desc":"Ripple starts from the absolute center"},"color":{"type":"String","desc":"Color name from Quasar Color Palette; Overrides default dynamic color","examples":["orange-5"]},"keyCodes":{"type":["Array","Number"],"desc":"List of keyCode that should trigger the ripple","examples":["[]","[13, 32]"]}},"addedIn":"v1.9.8"},"value":{"type":["Boolean","Object"],"desc":"Boolean (if just wanting to enable/disable) or Object for configuring more options","definition":{"early":{"type":"Boolean","desc":"Trigger early/immediately on user interaction","addedIn":"v1.9.8"},"stop":{"type":"Boolean","desc":"Stop click/touch event propagation"},"center":{"type":"Boolean","desc":"Ripple starts from the absolute center"},"color":{"type":"String","desc":"Color name from Quasar Color Palette; Overrides default dynamic color","examples":["orange-5"]},"keyCodes":{"type":["Array","Number"],"desc":"List of keyCode that should trigger the ripple","examples":["[]","[13, 32]"]}},"examples":["v-ripple=\\"booleanState\\"","v-ripple=\\"{ center: true, color: \'primary\', keyCodes: [] }\\""]},"arg":{"type":"String","desc":"Color name from Quasar Color Palette; Overrides default dynamic color","examples":["v-ripple:orange-5"]},"modifiers":{"early":{"type":"Boolean","desc":"Trigger early/immediately on user interaction","reactive":true,"addedIn":"v1.9.8"},"stop":{"type":"Boolean","desc":"Stop click/touch event propagation","reactive":true,"examples":["v-ripple.stop"]},"center":{"type":"Boolean","desc":"Ripple starts from the absolute center","reactive":true,"examples":["v-ripple.center"]}}}')},5501:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/table"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"props":{"type":"Object","desc":"QTable\'s header column scoped slot property","examples":[":props=\\"props\\""],"category":"general"},"auto-width":{"type":"Boolean","desc":"Tries to shrink header column width size; Useful for columns with a checkbox/radio/toggle","category":"content"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},5773:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},"5b64":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/stepper"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"slots":{"default":{"desc":"The content of the custom navigation, child of a QStep or of a QStepper (globally, through \'navigation\' slot)"}}}')},"5b73":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/ajax-bar"},"props":{"position":{"type":"String","desc":"Position within window of where QAjaxBar should be displayed","default":"top","values":["top","right","bottom","left"],"examples":["bottom"],"category":"content"},"size":{"type":"String","desc":"Size in CSS units, including unit name","examples":["16px","2rem"],"category":"style","default":"2px"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"skip-hijack":{"type":"Boolean","desc":"Skip Ajax hijacking (not a reactive prop)","category":"behavior"},"reverse":{"type":"Boolean","desc":"Reverse direction of progress","category":"behavior"}},"events":{"start":{"desc":"Emitted when bar is triggered to appear"},"stop":{"desc":"Emitted when bar has finished its job"}},"methods":{"start":{"desc":"Notify bar you are waiting for a new process to finish","params":{"speed":{"type":"Number","default":300,"desc":"Delay (in milliseconds) between progress auto-increments; If delay is 0 then it disables auto-incrementing","examples":[400,0]}}},"increment":{"desc":"Manually trigger a bar progress increment","params":{"amount":{"type":"Number","desc":"Amount (0 < x <= 100) to increment with","examples":[1]}}},"stop":{"desc":"Notify bar that one process you were waiting has finished"}}}')},"5c95":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/no-ssr"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"tag":{"type":"String","desc":"HTML tag to render","default":"div","category":"content","examples":["div","span","blockquote"]},"placeholder":{"type":"String","desc":"Text to display on server-side render (unless using \'placeholder\' slot)","examples":["This is server-side only"],"category":"content"}},"slots":{"default":{"desc":"Default slot is used to render content on client-side"},"placeholder":{"desc":"Slot used as placeholder on server-side render, which gets replaced by the default slot on client-side; overrides \'placeholder\' prop"}}}')},6188:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/date"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"value":{"desc":"Date of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model","type":"String","required":true,"examples":["v-model=\\"myDate\\""]},"landscape":{"type":"Boolean","desc":"Display the component in landscape mode","category":"behavior"},"mask":{"type":"String","desc":"Mask (formatting string) used for parsing and formatting value","category":"model","default":"YYYY/MM/DD","examples":["YYYY-MM-DD","MMMM Do, YYYY","YYYY-MM-DD HH:mm:ss"]},"locale":{"type":"Object","desc":"Locale formatting options","examples":[":locale=\\"{ monthsShort: [\'Ian\', \'Feb\', \'Mar\', \'...\'] }\\""],"definition":{"days":{"type":"Array","desc":"List of full day names (DDDD), starting with Sunday","examples":["[\'Duminica\', \'Luni\', \'Marti\', \'...\']"]},"daysShort":{"type":"Array","desc":"List of short day names (DDD), starting with Sunday","examples":["[\'Dum\', \'Lun\', \'Mar\', \'...\']"]},"months":{"type":"Array","desc":"List of full month names (MMMM), starting with January","examples":["[\'Ianuarie\', \'Februarie\', \'Martie\', \'...\']"]},"monthsShort":{"type":"Array","desc":"List of short month names (MMM), starting with January","examples":["[\'Ian\', \'Feb\', \'Mar\', \'...\']"]}},"category":"model"},"calendar":{"type":"String","desc":"Specify calendar type","default":"gregorian","values":["gregorian","persian"],"category":"model"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"square":{"type":"Boolean","desc":"Removes border-radius so borders are squared","category":"style","addedIn":"v1.1.5"},"flat":{"type":"Boolean","desc":"Applies a \'flat\' design (no default shadow)","category":"style","addedIn":"v1.1.5"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style","addedIn":"v1.1.5"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"title":{"type":"String","desc":"When specified, it overrides the default header title; Makes sense when not in \'minimal\' mode","examples":["Birthday"],"category":"content"},"subtitle":{"type":"String","desc":"When specified, it overrides the default header subtitle; Makes sense when not in \'minimal\' mode","examples":["John Doe"],"category":"content"},"emit-immediately":{"type":"Boolean","desc":"Emit model when user browses month and year too","category":"model"},"default-year-month":{"type":"String","desc":"The default year and month to display (in YYYY/MM format) when model is unfilled (undefined or null)","examples":["1986/02"],"category":"model"},"default-view":{"type":"String","desc":"The view which will be displayed by default","default":"Calendar","values":["Calendar","Months","Years"],"category":"model"},"years-in-month-view":{"type":"Boolean","desc":"Show the years selector in months view","category":"behavior","addedIn":"v1.11.2"},"events":{"type":["Array","Function"],"desc":"A list of events to highlight on the calendar; If using a function, it receives the date as a String and must return a Boolean (matches or not); If using a function then for best performance, reference it from your scope and do not define it inline","examples":[":events=\\"[\'2018/11/05\', \'2018/11/06\', \'2018/11/09\', \'2018/11/23\']\\"",":events=\\"date => date[9] % 3 === 0\\""],"category":"model"},"event-color":{"type":["String","Function"],"desc":"Color name (from the Quasar Color Palette); If using a function, it receives the date as a String and must return a String (color for the received date); If using a function then for best performance, reference it from your scope and do not define it inline","examples":["teal-10",":event-color=\\"(date) => date[9] % 2 === 0 ? \'teal\' : \'orange\'\\""],"category":"style"},"options":{"type":["Array","Function"],"desc":"Optionally configure the days that are selectable; If using a function, it receives the date as a String and must return a Boolean (is date acceptable or not); If using a function then for best performance, reference it from your scope and do not define it inline","examples":[":options=\\"[\'2018/11/05\', \'2018/11/12\', \'2018/11/19\', \'2018/11/26\' ]\\"",":options=\\"date => date[9] % 3 === 0\\"",":options=\\"date => date >= \'2018/11/03\' && date <= \'2018/11/15\'\\""],"category":"model"},"first-day-of-week":{"type":["String","Number"],"desc":"Sets the day of the week that is considered the first day (0 - Sunday, 1 - Monday, ...); This day will show in the left-most column of the calendar","default":"(based on configured Quasar lang language)","examples":["first-day-of-week=\\"1\\"",":first-day-of-week=\\"selectedFirstDayOfTheWeek\\""],"category":"model"},"today-btn":{"type":"Boolean","desc":"Display a button that selects the current day","category":"content"},"minimal":{"type":"Boolean","desc":"Don’t display the header","category":"content"}},"slots":{"default":{"desc":"This is where additional buttons can go","addedIn":"v1.2.8"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"String","desc":"New model value","required":true},"reason":{"type":"String","desc":"Reason of the user interaction (what was picked)","values":["year","month","day","today","locale","mask"]},"details":{"type":"Object","desc":"Object of properties on the new model","definition":{"year":{"type":"Number","desc":"The year"},"month":{"type":"Number","desc":"The month"},"day":{"type":"Number","desc":"The day of month"},"changed":{"type":"Boolean","desc":"Did the model change?","addedIn":"v1.1.1"}}}}}},"methods":{"setToday":{"desc":"Change model to today","addedIn":"v1.1.7"},"setView":{"desc":"Change current view","addedIn":"v1.1.7","params":{"view":{"type":"String","desc":"QDate view name","required":true,"values":["Calendar","Months","Years"]}}},"offsetCalendar":{"desc":"Increment or decrement calendar view\'s month or year","addedIn":"v1.1.7","params":{"type":{"type":"String","required":true,"desc":"What to increment/decrement","values":["month","year"]},"descending":{"type":"Boolean","desc":"Decrement?"}}}}}')},"63aa":function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/web-storage"},"injection":"$q.localStorage","methods":{"has":{"desc":"Check if storage item exists","params":{"key":{"type":"String","desc":"Entry key","required":true,"examples":["userId"]}},"returns":{"type":"Boolean","desc":"Does the item exists or not?"}},"getLength":{"desc":"Get storage number of entries","returns":{"type":"Number","desc":"Number of entries","examples":[21]}},"getItem":{"tsType":"WebStorageGetItemMethodType","desc":"Get a storage item value","params":{"key":{"type":"String","desc":"Entry key","required":true,"examples":["userId"]}},"returns":{"type":["Date","RegExp","Number","Boolean","Function","Object","Array","String","null"],"desc":"Storage item value","examples":["john12",702]}},"getIndex":{"tsType":"WebStorageGetIndexMethodType","desc":"Get the storage item value at specific index","params":{"index":{"type":"Number","desc":"Entry index","required":true,"examples":[5]}},"returns":{"type":["Number","null"],"desc":"Storage item index","examples":[7]}},"getKey":{"tsType":"WebStorageGetKeyMethodType","desc":"Get the storage key at specific index","params":{"index":{"type":"Number","desc":"Entry index","required":true,"examples":[5]}},"returns":{"type":["String","null"],"desc":"Storage key","examples":["userId"]},"addedIn":"v1.9.4"},"getAll":{"desc":"Retrieve all items in storage","returns":{"type":"Object","desc":"Object syntax: item name as Object key and its value","examples":["{ userId: \'jon12\', timesLoggedIn: 14 }"]}},"getAllKeys":{"tsType":"WebStorageGetAllKeysMethodType","desc":"Retrieve all keys in storage","returns":{"type":"Array","desc":"Storage keys (Array of Strings)","examples":["[\'userId\', \'password\']"]},"addedIn":"v1.9.4"},"set":{"desc":"Set item in storage","params":{"key":{"type":"String","desc":"Entry key","required":true,"examples":["userId"]},"value":{"type":["Date","RegExp","Number","Boolean","Function","Object","Array","String","null"],"desc":"Entry value","required":true,"examples":["john12"]}}},"remove":{"desc":"Remove a storage item","params":{"key":{"type":"String","desc":"Storage key","required":true,"examples":["userId"]}}},"clear":{"desc":"Remove everything from the storage"},"isEmpty":{"desc":"Determine if storage has any items","returns":{"type":"Boolean","desc":"Tells if storage is empty or not"}}}}')},"65d0":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/editor"},"props":{"fullscreen":{"type":"Boolean","sync":true,"desc":"Fullscreen mode","examples":[":fullscreen.sync=\\"isFullscreen\\""],"category":"behavior"},"no-route-fullscreen-exit":{"type":"Boolean","desc":"Changing route app won\'t exit fullscreen","category":"behavior","addedIn":"v1.1.7"},"value":{"type":"String","desc":"Model of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","required":true,"examples":["v-model=\\"content\\""],"category":"model"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"square":{"type":"Boolean","desc":"Removes border-radius so borders are squared","category":"style"},"flat":{"type":"Boolean","desc":"Applies a \'flat\' design (no borders)","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; toolbar buttons are shown on one-line only","category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style","addedIn":"v1.3.0"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"min-height":{"type":"String","desc":"CSS unit for the minimum height of the editable area","default":"10rem","examples":["15rem","50vh"],"category":"style"},"max-height":{"type":"String","desc":"CSS unit for maximum height of the input area","examples":["1000px","90vh"],"category":"style"},"height":{"type":"String","desc":"CSS value to set the height of the editable area","examples":["100px","50vh"],"category":"style"},"definitions":{"type":"Object","desc":"Definition of commands and their buttons to be included in the \'toolbar\' prop","examples":[":definitions=\\"{ save: { tip: \'Save your work\', icon: \'save\', label: \'Save\', handler: saveWork }, upload: { tip: \'Upload to cloud\', icon: \'cloud_upload\', label: \'Upload\', handler: uploadIt } }\\""],"definition":{"label":{"type":"String","desc":"Label of the button","examples":["Addresses"]},"tip":{"type":"String","desc":"Text to be displayed as a tooltip on hover","examples":["Add a contact from the Address Book"]},"htmlTip":{"type":"String","desc":"HTML formatted text to be displayed within a tooltip on hover","examples":["Add a <span class=\\"red\\">user</span> from the address book"]},"icon":{"type":"String","desc":"Icon of the button","examples":["fas fa-address-book"]},"key":{"type":"Number","desc":"Keycode of a key to be used together with the <ctrl> key for use as a shortcut to trigger this element","examples":["12","36"]},"handler":{"type":"Function","desc":"Either this or \\"cmd\\" is required. Function for when button gets clicked/tapped.","params":null,"returns":null,"examples":["() => this.uploadFile()"]},"cmd":{"type":"String","desc":"Either this or \\"handler\\" is required. This must be a valid execCommand method according to the designMode API.","examples":["insertHTML","justifyFull"]},"param":{"type":["String","Function"],"desc":"Only set a param if using a \\"cmd\\". This is commonly text or HTML to inject, but is highly dependent upon the specific cmd being called.","examples":["<img src=\\"://uploads/001.jpg\\" alt=\\"nice pic\\" />"]},"disable":{"type":["Boolean","Function"],"desc":"Is button disabled? If specifying a function, return a Boolean value.","examples":["() => this.userIsActive()"]},"type":{"type":"String","desc":"Pass the value \\"no-state\\" if the button should not have an \\"active\\" state","values":[null,"no-state"],"examples":["no-state"]},"fixedLabel":{"type":"Boolean","desc":"Lock the button label, so it doesn\'t change based on the child option selected.","default":"false"},"fixedIcon":{"type":"Boolean","desc":"Lock the button icon, so it doesn\'t change based on the child option selected.","default":"false"},"highlight":{"type":"Boolean","desc":"Highlight the toolbar button, when a child option has been selected.","default":"false"}},"category":"toolbar"},"fonts":{"type":"Object","desc":"Object with definitions of fonts","examples":[":fonts=\\"{ arial: \'Arial\', arial_black: \'Arial Black\', comic_sans: \'Comic Sans MS\' }\\""],"category":"toolbar"},"toolbar":{"type":"Array","desc":"An array of arrays of Objects/Strings that you use to define the construction of the elements and commands available in the toolbar","default":[["left","center","right","justify"],["bold","italic","underline","strike"],["undo","redo"]],"examples":[["left","center","right","justify"]],"category":"toolbar"},"toolbar-color":{"type":"String","desc":"Font color (from the Quasar Palette) of buttons and text in the toolbar","examples":["primary","teal-10"],"category":"toolbar"},"toolbar-text-color":{"type":"String","desc":"Text color (from the Quasar Palette) of toolbar commands","examples":["primary","teal-10"],"category":"toolbar"},"toolbar-toggle-color":{"type":"String","desc":"Choose the active color (from the Quasar Palette) of toolbar commands button","default":"primary","examples":["secondary","blue-3"],"category":"toolbar"},"toolbar-bg":{"type":"String","desc":"Toolbar background color (from Quasar Palette)","default":"grey-3","examples":["secondary","blue-3"],"category":"toolbar"},"toolbar-outline":{"type":"Boolean","desc":"Toolbar buttons are rendered \\"outlined\\"","category":"toolbar|style"},"toolbar-push":{"type":"Boolean","desc":"Toolbar buttons are rendered as a \\"push-button\\" type","category":"toolbar|style"},"toolbar-rounded":{"type":"Boolean","desc":"Toolbar buttons are rendered \\"rounded\\"","category":"toolbar|style"},"content-style":{"type":"Object","desc":"Object with CSS properties and values for styling the container of QEditor","examples":[":content-style=\\"{ backgroundColor: \'#C0C0C0\' }\\""],"category":"style"},"content-class":{"type":["Object","Array","String"],"desc":"CSS classes for the input area","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"placeholder":{"type":"String","desc":"Text to display as placeholder","examples":["Type your story here ..."],"category":"content","addedIn":"v1.9.12"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"String","desc":"The pure HTML of the content","required":true}}}},"methods":{"toggleFullscreen":{"desc":"Toggle the view to be fullscreen or not fullscreen"},"setFullscreen":{"desc":"Enter the fullscreen view"},"exitFullscreen":{"desc":"Leave the fullscreen view"},"runCmd":{"desc":"Run contentEditable command at caret position and range","params":{"cmd":{"type":"String","desc":"Must be a valid execCommand method according to the designMode API","examples":["copy","cut","paste"],"required":true},"param":{"type":"String","desc":"The argument to pass to the command","examples":["<small>Small Text</small>"]},"update":{"type":"Boolean","desc":"Refresh the toolbar","default":true}}},"refreshToolbar":{"desc":"Hide the link editor if visible and force the instance to re-render"},"focus":{"desc":"Focus on the contentEditable at saved cursor position"},"getContentEl":{"desc":"Retrieve the content of the Editor","returns":{"type":"String","desc":"Provides the pure HTML within the editable area"}}}}')},6642:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/table"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"props":{"type":"Object","desc":"QTable\'s row scoped slot property","examples":[":props=\\"props\\""],"category":"general"},"no-hover":{"type":"Boolean","desc":"Disable hover effect","addedIn":"v1.5.9","category":"style"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},"676a":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/checkbox"},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style","addedIn":"v1.8.0"},"value":{"desc":"Model of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model","required":true,"type":["Any","Array"],"examples":["false","[\'car\', \'building\']"]},"val":{"type":"Any","desc":"Works when model (\'value\') is Array. It tells the component which value should add/remove when ticked/unticked","examples":["car"],"category":"model"},"true-value":{"type":"Any","desc":"What model value should be considered as checked/ticked/on?","default":true,"examples":["Agreed"],"category":"model"},"false-value":{"type":"Any","desc":"What model value should be considered as unchecked/unticked/off?","default":false,"examples":["Disagree"],"category":"model"},"indeterminate-value":{"type":"Any","desc":"What model value should be considered as \'indeterminate\'?","default":null,"examples":[0,"not_answered"],"category":"behavior"},"toggle-order":{"type":"String","desc":"Determines toggle order of the two states (\'t\' stands for state of true, \'f\' for state of false); If \'toggle-indeterminate\' is true, then the order is: indet -> first state -> second state -> indet (and repeat), otherwise: indet -> first state -> second state -> first state -> second state -> ...","default":"tf","values":["tf","ft"],"category":"behavior","addedIn":"v1.12.0"},"toggle-indeterminate":{"type":"Boolean","desc":"When user clicks/taps on the component, should we toggle through the indeterminate state too?","category":"behavior"},"label":{"type":"String","desc":"Label to display along the component (or use the default slot instead of this prop)","examples":["I agree with the Terms and Conditions"],"category":"label"},"left-label":{"type":"Boolean","desc":"Label (if any specified) should be displayed on the left side of the component","category":"label"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"keep-color":{"type":"Boolean","desc":"Should the color (if specified any) be kept when the component is unticked/ off?","category":"behavior"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"}},"slots":{"default":{"desc":"Default slot can be used as label, unless \'label\' prop is specified; Suggestion: string"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true},"evt":{"type":"Object","desc":"JS event object","required":true,"addedIn":"v1.11.2"}}}},"methods":{"toggle":{"desc":"Toggle the state (of the model)"}}}')},"67d5":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/bar"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"dark":{"type":"Boolean","desc":"The component background color lights up the parent\'s background (as opposed to default behavior which is to darken it); Works unless you specify a CSS background color for it","category":"style"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},6814:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/toolbar"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"inset":{"type":"Boolean","desc":"Apply an inset to content (useful for subsequent toolbars)","category":"content"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},"69ce":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},"6a65":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},"6c02":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/slide-item"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"left-color":{"type":"String","desc":"Color name for left-side background from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"right-color":{"type":"String","desc":"Color name for right-side background from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"top-color":{"type":"String","desc":"Color name for top-side background from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.1.3"},"bottom-color":{"type":"String","desc":"Color name for bottom-side background from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.1.3"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style","addedIn":"v1.4.1"}},"slots":{"default":{"desc":"This is where item\'s sections go; Suggestion: QItemSection"},"left":{"desc":"Left side content when sliding"},"right":{"desc":"Right side content when sliding"},"top":{"desc":"Top side content when sliding","addedIn":"v1.1.3"},"bottom":{"desc":"Bottom side content when sliding","addedIn":"v1.1.3"}},"events":{"left":{"desc":"Emitted when user finished sliding the item to the left","params":{"details":{"type":"Object","desc":"Details","definition":{"reset":{"type":"Function","desc":"When called, it resets the component to its initial non-slided state","params":null,"returns":null}}}}},"right":{"desc":"Emitted when user finished sliding the item to the right","params":{"details":{"type":"Object","desc":"Details","definition":{"reset":{"type":"Function","desc":"When called, it resets the component to its initial non-slided state","params":null,"returns":null}}}}},"top":{"desc":"Emitted when user finished sliding the item up","addedIn":"v1.1.3","params":{"details":{"type":"Object","desc":"Details","definition":{"reset":{"type":"Function","desc":"When called, it resets the component to its initial non-slided state","params":null,"returns":null}}}}},"bottom":{"desc":"Emitted when user finished sliding the item down","addedIn":"v1.1.3","params":{"details":{"type":"Object","desc":"Details","definition":{"reset":{"type":"Function","desc":"When called, it resets the component to its initial non-slided state","params":null,"returns":null}}}}},"action":{"desc":"Emitted when user finished sliding the item to either sides","params":{"details":{"type":"Object","desc":"Details","definition":{"side":{"type":"String","desc":"Side to which sliding has taken effect","values":["left","right","top","bottom"]},"reset":{"type":"Function","desc":"When called, it resets the component to its initial non-slided state","params":null,"returns":null}}}}}},"methods":{"reset":{"desc":"Reset to initial state (not swiped to any side)"}}}')},"6ef6":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/parallax"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"src":{"type":"String","desc":"Path to image (unless a \'media\' slot is used)","transformAssetUrls":true,"examples":["(statics folder) src=\\"statics/img/something.png\\"","(assets folder) src=\\"~assets/my-img.png\\"","(relative path format) :src=\\"require(\'./my_img.jpg\')\\"","(URL) src=\\"https://some-site.net/some-img.jpg\\""],"category":"model"},"height":{"type":"Number","desc":"Height of component (in pixels)","default":500,"examples":[":height=\\"1000\\""],"category":"style"},"speed":{"type":"Number","desc":"Speed of parallax effect (0.0 < x < 1.0)","examples":[":speed=\\"0.24\\""],"category":"behavior"},"scroll-target":{"type":["Element","String"],"desc":"CSS selector or DOM element to be used as a custom scroll container instead of the auto detected one","examples":[":scroll-target=\\"$refs.scrollTarget\\"","scroll-target=\\".scroll-target-class\\"","scroll-target=\\"#scroll-target-id\\"","scroll-target=\\"body\\""],"category":"behavior","addedIn":"v1.8.0"}},"slots":{"default":{"desc":"Default slot can be used for content that gets displayed on top of the component"},"media":{"desc":"Slot for describing <img> or <video> tags"}},"scopedSlots":{"content":{"desc":"Scoped slot for describing content that gets displayed on top of the component; If specified, it overrides the default slot","scope":{"percentScrolled":{"type":"Number","desc":"Percentage (0.0 < x < 1.0) of scroll in regards to QParallax","examples":[0.241]}}}},"events":{"scroll":{"desc":"Emitted when scrolling occurs","params":{"percentage":{"type":"Number","desc":"Number between 0.0 and 1.0 defining the scrolled percentage of the component","examples":[0.234]}}}}}')},"6f73":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/scroll-observer"},"props":{"debounce":{"type":["String","Number"],"desc":"Debounce amount (in milliseconds)","examples":["0","530"],"category":"behavior"},"horizontal":{"type":"Boolean","desc":"Register for horizontal scroll instead of vertical (which is default)","category":"behavior"},"scroll-target":{"type":["Element","String"],"desc":"CSS selector or DOM element to be used as a custom scroll container instead of the auto detected one","examples":[":scroll-target=\\"$refs.scrollTarget\\"","scroll-target=\\".scroll-target-class\\"","scroll-target=\\"#scroll-target-id\\"","scroll-target=\\"body\\""],"category":"behavior","addedIn":"v1.8.0"}},"events":{"scroll":{"desc":"Emitted when scroll position changes","params":{"details":{"type":"Object","desc":"Scroll details","definition":{"position":{"type":"Number","desc":"Scroll offset (from top)","examples":[822]},"direction":{"type":"String","desc":"Direction of scroll","values":["up","down"]},"directionChanged":{"type":"Boolean","desc":"Has scroll direction changed since event was last emitted?"},"inflexionPosition":{"type":"Number","desc":"Last scroll offset where scroll direction has changed","examples":[822]}}}}}},"methods":{"trigger":{"desc":"Emit a \'scroll\' event","params":{"immediately":{"type":"Boolean","desc":"Skip over the debounce amount"}}},"getPosition":{"desc":"Get current scroll details under the form of an Object: { position, direction, directionChanged, inflexionPosition }"}}}')},"6fb8":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/tabs"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"value":{"type":["Number","String"],"desc":"Model of the component defining current panel name; Either use this property (along with a listener for \'input\' event) OR use v-model directive","examples":["v-model=\\"selectedTab\\""],"category":"model"},"vertical":{"type":"Boolean","desc":"Use vertical design (tabs one on top of each other rather than one next to the other horizontally)","category":"content"},"outside-arrows":{"type":"Boolean","desc":"Reserve space for arrows to place them on each side of the tabs (the arrows fade when inactive)","category":"content","addedIn":"v1.12.9"},"mobile-arrows":{"type":"Boolean","desc":"Force display of arrows (if needed) on mobile","category":"content","addedIn":"v1.12.9"},"align":{"type":"String","desc":"Horizontal alignment the tabs within the tabs container","default":"center","values":["left","center","right","justify"],"examples":["right"],"category":"content"},"breakpoint":{"type":["Number","String"],"desc":"Breakpoint (in pixels) of tabs container width at which the tabs automatically turn to a justify alignment","default":600,"examples":[":breakpoint=\\"500\\""],"category":"content|behavior"},"active-color":{"type":"String","desc":"The color to be attributed to the text of the active tab","examples":["primary","teal-10"],"category":"style"},"active-bg-color":{"type":"String","desc":"The color to be attributed to the background of the active tab","examples":["primary","teal-10"],"category":"style"},"indicator-color":{"type":"String","desc":"The color to be attributed to the indicator (the underline) of the active tab","examples":["primary","teal-10"],"category":"style"},"content-class":{"type":"String","desc":"Class definitions to be attributed to the content wrapper","examples":["my-special-class"],"category":"style","addedIn":"v1.12.0"},"left-icon":{"type":"String","desc":"The name of an icon to replace the default arrow used to scroll through the tabs to the left, when the tabs extend past the width of the tabs container","examples":["arrow_left"],"category":"content"},"right-icon":{"type":"String","desc":"The name of an icon to replace the default arrow used to scroll through the tabs to the right, when the tabs extend past the width of the tabs container","examples":["arrow_right"],"category":"content"},"stretch":{"type":"Boolean","desc":"When used on flexbox parent, tabs will stretch to parent\'s height","category":"content"},"shrink":{"type":"Boolean","desc":"By default, QTabs is set to grow to the available space; However, you can reverse that with this prop; Useful (and required) when placing the component in a QToolbar","category":"content"},"switch-indicator":{"type":"Boolean","desc":"Switches the indicator position (on left of tab for vertical mode or above the tab for default horizontal mode)","category":"content"},"narrow-indicator":{"type":"Boolean","desc":"Allows the indicator to be the same width as the tab\'s content (text or icon), instead of the whole width of the tab","category":"content"},"inline-label":{"type":"Boolean","desc":"Allows the text to be inline with the icon, should one be used","category":"content"},"no-caps":{"type":"Boolean","desc":"Turns off capitalizing all letters within the tab (which is the default)","category":"content"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true}}}}}')},"71b0":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},"723b":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/tabs"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"to":{"type":["String","Object"],"desc":"Equivalent to Vue Router <router-link> \'to\' property","examples":["/home/dashboard",":to=\\"{ name: \'my-route-name\' }\\""],"category":"general","required":true},"exact":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'exact\' property","category":"behavior"},"append":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'append\' property","category":"behavior"},"replace":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'replace\' property","category":"behavior"},"active-class":{"type":"String","desc":"Equivalent to Vue Router <router-link> \'active-class\' property","examples":["my-active-class"],"category":"behavior"},"exact-active-class":{"type":"String","desc":"Equivalent to Vue Router <router-link> \'active-class\' property","examples":["my-exact-active-class"],"category":"behavior"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"ripple":{"type":["Boolean","Object"],"desc":"Configure material ripple (disable it by setting it to \'false\' or supply a config object)","default":true,"examples":[false,"{ early: true, center: true, color: \'teal\', keyCodes: [] }"],"category":"style"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"label":{"type":["Number","String"],"desc":"A number or string to label the tab","examples":["Home"],"category":"content"},"alert":{"type":["Boolean","String"],"desc":"Adds an alert symbol to the tab, notifying the user there are some updates; If its value is not a Boolean, then you can specify a color","examples":["alert","alert=\\"purple\\""],"category":"content"},"alert-icon":{"type":"String","desc":"Adds a floating icon to the tab, notifying the user there are some updates; It\'s displayed only if \'alert\' is set; Can use the color specified by \'alert\' prop","examples":["alert-icon=\\"alarm_on\\""],"category":"content","addedIn":"v1.9.14"},"name":{"type":["Number","String"],"desc":"Panel name","default":"A random UID","examples":["home",":name=\\"1\\""],"category":"general"},"no-caps":{"type":"Boolean","desc":"Turns off capitalizing all letters within the tab (which is the default)","category":"content"},"content-class":{"type":"String","desc":"Class definitions to be attributed to the content wrapper","examples":["my-special-class"],"category":"style","addedIn":"v1.12.0"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"}},"slots":{"default":{"desc":"Suggestion: QMenu, QTooltip"}}}')},"72c6":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/dialog"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"content-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the content","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"content-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the content","examples":["background-color: #ff0000",":content-style=\\"{ color: \'#ff0000\' }\\""],"category":"style"},"value":{"type":"Boolean","desc":"Model of the component defining shown/hidden state; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model"},"persistent":{"type":"Boolean","desc":"User cannot dismiss Dialog if clicking outside of it or hitting ESC key; Also, an app route change won\'t dismiss it","category":"behavior"},"no-esc-dismiss":{"type":"Boolean","desc":"User cannot dismiss Dialog by hitting ESC key; No need to set it if \'persistent\' prop is also set","category":"behavior"},"no-backdrop-dismiss":{"type":"Boolean","desc":"User cannot dismiss Dialog by clicking outside of it; No need to set it if \'persistent\' prop is also set","category":"behavior"},"no-route-dismiss":{"type":"Boolean","desc":"Changing route app won\'t dismiss Dialog; No need to set it if \'persistent\' prop is also set","category":"behavior"},"auto-close":{"type":"Boolean","desc":"Any click/tap inside of the dialog will close it","category":"behavior"},"seamless":{"type":"Boolean","desc":"Put Dialog into seamless mode; Does not use a backdrop so user is able to interact with the rest of the page too","category":"content"},"maximized":{"type":"Boolean","desc":"Put Dialog into maximized mode","category":"content"},"full-width":{"type":"Boolean","desc":"Dialog will try to render with same width as the window","category":"content"},"full-height":{"type":"Boolean","desc":"Dialog will try to render with same height as the window","category":"content"},"position":{"type":"String","desc":"Stick dialog to one of the sides (top, right, bottom or left)","default":"standard","values":["standard","top","right","bottom","left"],"examples":["top","right"],"category":"content"},"transition-show":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"scale"},"transition-hide":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"scale"},"square":{"type":"Boolean","desc":"Forces content to have squared borders","category":"style"},"no-refocus":{"type":"Boolean","desc":"(Accessibility) When Dialog gets hidden, do not refocus on the DOM element that previously had focus","category":"behavior"},"no-focus":{"type":"Boolean","desc":"(Accessibility) When Dialog gets shown, do not switch focus on it","category":"behavior"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"events":{"input":{"desc":"Emitted when showing/hidden state changes; Is also used by v-model","params":{"value":{"type":"Boolean","desc":"New state (showing/hidden)"}}},"show":{"desc":"Emitted after component has triggered show()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-show":{"desc":"Emitted when component triggers show() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"hide":{"desc":"Emitted after component has triggered hide()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-hide":{"desc":"Emitted when component triggers hide() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"shake":{"desc":"Shakes up the Dialog in order to catch user\'s attention"},"escape-key":{"desc":"Emitted when ESC key is pressed; Does not get emitted if Dialog is \'persistent\' or it has \'no-esc-key\' set"}},"methods":{"show":{"desc":"Triggers component to show","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"hide":{"desc":"Triggers component to hide","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"toggle":{"params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}},"desc":"Triggers component to toggle between show/hide"},"focus":{"desc":"Focus dialog; if you have content with autofocus attribute, it will directly focus it"},"shake":{"desc":"Shakes dialog"}}}')},7445:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/stepper"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"value":{"type":"Any","desc":"Model of the component defining the current panel\'s name; If a Number is used, it does not define the panel\'s index, but rather the panel\'s name which can also be an Integer; Either use this property (along with a listener for \'input\' event) OR use the v-model directive.","examples":["v-model=\\"panelName\\""],"category":"model"},"keep-alive":{"type":"Boolean","desc":"Equivalent to using Vue\'s native <keep-alive> component on the content","category":"behavior"},"animated":{"type":"Boolean","desc":"Enable transitions between panel (also see \'transition-prev\' and \'transition-next\' props)","category":"behavior"},"infinite":{"type":"Boolean","desc":"Makes component appear as infinite (when reaching last panel, next one will become the first one)","category":"behavior"},"swipeable":{"type":"Boolean","desc":"Enable swipe events (may interfere with content\'s touch/mouse events)","category":"behavior"},"vertical":{"type":"Boolean","desc":"Put Stepper in vertical mode (instead of horizontal by default)","category":"behavior"},"transition-prev":{"type":"String","desc":"One of Quasar\'s embedded transitions (has effect only if \'animated\' prop is set)","examples":["fade","slide-down"],"category":"behavior","default":"slide-right/slide-down"},"transition-next":{"type":"String","desc":"One of Quasar\'s embedded transitions (has effect only if \'animated\' prop is set)","examples":["fade","slide-down"],"category":"behavior","default":"slide-left/slide-up"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"flat":{"type":"Boolean","desc":"Applies a \'flat\' design (no default shadow)","category":"style"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style"},"alternative-labels":{"type":"Boolean","desc":"Use alternative labels - stacks the icon on top of the label (applies only to horizontal stepper)","category":"header"},"header-nav":{"type":"Boolean","desc":"Allow navigation through the header","category":"behavior"},"contracted":{"type":"Boolean","desc":"Hide header labels on narrow windows","category":"header|behavior"},"inactive-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"header"},"inactive-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"header"},"done-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"header"},"done-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"header"},"active-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"header"},"active-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"header"},"error-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"header"},"error-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"header"},"header-class":{"type":"String","desc":"Class definitions to be attributed to the header","examples":["my-special-class"],"category":"style"}},"slots":{"default":{"desc":"Suggestion: QStep"},"navigation":{"desc":"Slot specific for the global navigation; Suggestion: QStepperNavigation"},"message":{"desc":"Slot specific for putting a message on top of each step (if horizontal stepper) or above steps (if vertical); Suggestion: QBanner, div.q-pa-lg"}},"events":{"input":{"desc":"Emitted when the component changes the model; This event _isn\'t_ fired if the model is changed externally; Is also used by v-model","params":{"value":{"type":["String","Number"],"desc":"New current panel name","examples":["dashboard"]}}},"before-transition":{"desc":"Emitted before transitioning to a new panel","params":{"newVal":{"type":["String","Number"],"desc":"Panel name towards transition is going","examples":["dashboard"]},"oldVal":{"type":["String","Number"],"desc":"Panel name from which transition is happening","examples":["dashboard"]}}},"transition":{"desc":"Emitted after component transitioned to a new panel","params":{"newVal":{"type":["String","Number"],"desc":"Panel name towards transition has occurred","examples":["dashboard"]},"oldVal":{"type":["String","Number"],"desc":"Panel name from which transition has happened","examples":["dashboard"]}}}},"methods":{"next":{"desc":"Go to next panel"},"previous":{"desc":"Go to previous panel"},"goTo":{"desc":"Go to specific panel","params":{"panelName":{"type":["String","Number"],"desc":"Panel\'s name, which may be a String or Number; Number does not refers to panel index, but to its name, which may be an Integer","required":true,"examples":["dashboard"]}}}}}')},7501:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},"773b":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/card"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"tag":{"type":"String","desc":"HTML tag to render","default":"div","category":"content","examples":["div","form"],"addedIn":"v1.8.4"},"horizontal":{"type":"Boolean","desc":"Display a horizontal section (will have no padding and can contain other QCardSection)","category":"content","addedIn":"v1.7.0"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},7835:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/list-and-list-items"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"avatar":{"type":"Boolean","desc":"Render an avatar item side (does not needs \'side\' prop to be set)","category":"content"},"thumbnail":{"type":"Boolean","desc":"Render a thumbnail item side (does not needs \'side\' prop to be set)","category":"content"},"side":{"type":"Boolean","desc":"Renders as a side of the item","category":"content"},"top":{"type":"Boolean","desc":"Align content to top (useful for multi-line items)","category":"content"},"no-wrap":{"type":"Boolean","desc":"Do not wrap text (useful for item\'s main content)","category":"content"}},"slots":{"default":{"desc":"Section\'s actual content"}}}')},"7e074":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/range"},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"value":{"type":"Object","desc":"Model of the component of type { min, max } (both values must be between global min/max); Either use this property (along with a listener for \'input\' event) OR use v-model directive","definition":{"min":{"type":"Number","desc":"Model value for left thumb","examples":[2]},"max":{"type":"Number","desc":"Model value for right thumb","examples":[12]}},"examples":["v-model=\\"positionModel\\""],"category":"model"},"min":{"type":"Number","desc":"Minimum value of the model","default":0,"examples":[":min=\\"0\\""],"category":"model"},"max":{"type":"Number","desc":"Maximum value of the model","default":100,"examples":[":max=\\"100\\""],"category":"model"},"step":{"type":"Number","desc":"Specify step amount between valid values (> 0.0); When step equals to 0 it defines infinite granularity","default":1,"examples":[":step=\\"1\\""],"category":"model"},"reverse":{"type":"Boolean","desc":"Work in reverse (changes direction)","category":"behavior","addedIn":"v1.5.0"},"vertical":{"type":"Boolean","desc":"Display in vertical direction","category":"behavior","addedIn":"v1.10.0"},"drag-range":{"type":"Boolean","desc":"User can drag range instead of just the two thumbs","category":"content"},"drag-only-range":{"type":"Boolean","desc":"User can drag only the range instead and NOT the two thumbs","category":"content"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"label":{"type":"Boolean","desc":"Popup labels (for left and right thumbs) when user clicks/taps on the slider thumb and moves it","category":"labels"},"label-color":{"type":"String","desc":"Color name for labels background from the Quasar Color Palette; Applies to both labels, unless specific label color props are used","examples":["primary","teal-10"],"category":"labels"},"label-text-color":{"type":"String","desc":"Color name for labels text from the Quasar Color Palette; Applies to both labels, unless specific label text color props are used","examples":["primary","teal-10"],"category":"labels","addedIn":"v1.1.0"},"left-label-color":{"type":"String","desc":"Color name for left label background from the Quasar Color Palette","examples":["primary","teal-10"],"category":"labels"},"left-label-text-color":{"type":"String","desc":"Color name for left label text from the Quasar Color Palette","examples":["primary","teal-10"],"category":"labels","addedIn":"v1.1.0"},"right-label-color":{"type":"String","desc":"Color name for right label background from the Quasar Color Palette","examples":["primary","teal-10"],"category":"labels"},"right-label-text-color":{"type":"String","desc":"Color name for right label text from the Quasar Color Palette","examples":["primary","teal-10"],"category":"labels","addedIn":"v1.1.0"},"left-label-value":{"type":["String","Number"],"desc":"Override default label for min value","examples":[":left-label-value=\\"model.min + \'px\'\\""],"category":"labels"},"right-label-value":{"type":["String","Number"],"desc":"Override default label for max value","examples":[":right-label-value=\\"model.max + \'px\'\\""],"category":"labels"},"label-always":{"type":"Boolean","desc":"Always display the labels","category":"labels"},"markers":{"type":"Boolean","desc":"Display markers on the track, one for each possible value for the model","category":"content"},"snap":{"type":"Boolean","desc":"Snap thumbs on valid values, rather than sliding freely; Suggestion: use with \'step\' prop","category":"content"},"thumb-path":{"type":"String","desc":"Set custom thumbs svg path","default":"M 4, 10 a 6,6 0 1,0 12,0 a 6,6 0 1,0 -12,0","examples":["M5 5 h10 v10 h-10 v-10"],"category":"style","addedIn":"v1.5.10"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true}}},"change":{"desc":"Emitted on lazy model value change (after user slides then releases thumb)","params":{"value":{"type":"Any","desc":"New model value","required":true}}}}}')},"805b":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/virtual-scroll"},"addedIn":"v1.1.0","props":{"virtual-scroll-horizontal":{"type":"Boolean","desc":"Make virtual list work in horizontal mode","category":"behavior"},"virtual-scroll-slice-size":{"type":"Number","desc":"Number of options to render in the virtual list","default":"30","examples":[":virtual-scroll-slice-size=\\"60\\""],"category":"virtual-scroll"},"virtual-scroll-item-size":{"type":"Number","desc":"Default size in pixels (height if vertical, width if horizontal) of an option; This value is used for rendering the initial list; Try to use a value close to the minimum size of an item","default":"24","examples":[":virtual-scroll-item-size=\\"48\\""],"category":"virtual-scroll"},"virtual-scroll-sticky-size-start":{"type":"Number","desc":"Size in pixels (height if vertical, width if horizontal) of the sticky part (if using one) at the start of the list; A correct value will improve scroll precision","default":"0","examples":[":virtual-scroll-sticky-size-start=\\"48\\""],"category":"virtual-scroll"},"virtual-scroll-sticky-size-end":{"type":"Number","desc":"Size in pixels (height if vertical, width if horizontal) of the sticky part (if using one) at the end of the list; A correct value will improve scroll precision","default":"0","examples":[":virtual-scroll-sticky-size-end=\\"48\\""],"category":"virtual-scroll"},"type":{"type":"String","desc":"The type of content: list (default) or table","default":"list","values":["list","table"],"category":"content"},"items":{"type":"Array","desc":"Available list items that will be passed to the scoped slot; For best performance freeze the list of items; Required if \'itemsFn\' is not supplied","default":"[]","examples":[":items=\\"[ \'BMW\', \'Samsung Phone\' ]\\"",":items=\\"[ { label: \'BMW\', value: \'car\' }, { label: \'Samsung Phone\', value: \'phone\' } ]\\""],"category":"content"},"items-size":{"type":"Number","desc":"Number of available items in the list; Required and used only if \'itemsFn\' is provided","default":"void 0","examples":[":items-size=\\"100000\\"",":items-size=\\"500\\""],"category":"content"},"items-fn":{"type":"Function","desc":"Function to return the scope for the items to be displayed; Should return an array for items starting from \'from\' index for size length; For best performance, reference it from your scope and do not define it inline","params":{"from":{"type":"Number","desc":"Index of the first item (0 based)","examples":[15]},"size":{"type":"Number","desc":"Number of items to return","examples":[38]}},"returns":{"type":"Array","desc":"List of scope for items to be displayed"},"examples":[":items-fn=\\"(from, size) => { const items = []; for (let i = 0; i < size; i++) { items.push(\'Item \' + i) }; return items }\\""],"category":"content"},"scroll-target":{"type":["Element","String"],"desc":"CSS selector or DOM element to be used as a custom scroll container instead of the auto detected one","examples":[":scroll-target=\\"$refs.scrollTarget\\"","scroll-target=\\".scroll-target-class\\"","scroll-target=\\"#scroll-target-id\\"","scroll-target=\\"body\\""],"category":"behavior","addedIn":"v1.8.0"}},"slots":{"before":{"desc":"Template slot for the elements that should be rendered before the list; Suggestion: thead before a table"},"after":{"desc":"Template slot for the elements that should be rendered after the list; Suggestion: tfoot after a table"}},"scopedSlots":{"default":{"desc":"Template slot for defining the list item; Suggestion: QItem","scope":{"index":{"type":"Number","desc":"Item index in the options list","examples":[0]},"item":{"type":"Any","desc":"Item data -- its value is taken from \'options\' prop"}}}},"events":{"virtual-scroll":{"desc":"Emitted when the virtual scroll occurs","params":{"details":{"type":"Object","desc":"Object of properties on the new scroll position","definition":{"index":{"type":"Number","desc":"Index of the list item that was scrolled into view (0 based)","examples":[30]},"from":{"type":"Number","desc":"The index of the first list item that is rendered (0 based)","examples":[10]},"to":{"type":"Number","desc":"The index of the last list item that is rendered (0 based)","examples":[50]},"direction":{"type":"String","desc":"Direction of change","values":["increase","decrease"]},"ref":{"type":"Object","desc":"Vue reference to the QVirtualList which triggered the event","addedIn":"v1.8.4"}}}}}},"methods":{"scrollTo":{"desc":"Scroll the virtual scroll list to the item with the specified index (0 based)","params":{"index":{"type":["String","Number"],"desc":"The index of the list item (0 based)","required":true,"examples":["1",23]}}},"reset":{"desc":"Resets the computations; Needed for custom edge-cases"},"refresh":{"desc":"Refreshes the list; Use it after appending items","params":{"index":{"type":["String","Number"],"desc":"The index of the list item to scroll to after refresh (0 based); If it\'s not specified the scroll position is not changed; Use a negative value to keep scroll position","examples":["1",23,-1]}},"addedIn":"v1.8.4"}}}')},8179:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/video"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"ratio":{"type":["String","Number"],"desc":"Aspect ratio for the content; If value is a String, then avoid using a computational statement (like \'16/9\') and instead specify the String value of the result directly (eg. \'1.7777\')","examples":[":ratio=\\"4/3\\"",":ratio=\\"16/9\\"","ratio=\\"1\\""],"category":"style","addedIn":"v1.7.0"},"src":{"type":"String","desc":"The source url to display in an iframe","required":true,"examples":["src=\\"https://www.youtube.com/embed/k3_tw44QsZQ\\""],"category":"model"}}}')},"837a":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/intersection"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"addedIn":"v1.4.0","props":{"tag":{"type":"String","desc":"HTML tag to render","default":"div","category":"content","examples":["div","span","blockquote"],"addedIn":"v1.9.3"},"once":{"type":"Boolean","desc":"Get triggered only once","category":"behavior"},"ssr-prerender":{"type":"Boolean","desc":"Pre-render content on server side if using SSR (use it to pre-render above the fold content)","category":"behavior","addedIn":"v1.9.5"},"margin":{"type":"String","desc":"[Intersection API rootMargin prop] Allows you to specify the margins for the root, effectively allowing you to either grow or shrink the area used for intersections","examples":["-20px 0px","10px 20px 30px 40px"],"category":"behavior"},"threshold":{"type":["Array","Number"],"desc":"[Intersection API threshold prop] Threshold(s) at which to trigger, specified as a ratio, or list of ratios, of (visible area / total area) of the observed element","examples":["[ 0, 0.25, 0.5, 0.75, 1 ]",":threshold=\\"1\\""],"category":"behavior"},"transition":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior"},"disable":{"type":"Boolean","desc":"Disable visibility observable (content will remain as it was, visible or hidden)","category":"behavior"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"events":{"visibility":{"desc":"Fires when visibility changes","params":{"isVisible":{"type":"Boolean","desc":"Visibility status (true/false)"}}}}}')},"84a2":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/icon"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"tag":{"type":"String","desc":"HTML tag to render, unless no icon is supplied or it\'s an svg icon","default":"i","category":"content","examples":["div","i"],"addedIn":"v1.8.4"},"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"name":{"type":"String","desc":"Name of the icon, following Quasar convention","examples":["map","ion-add"],"category":"model"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"left":{"type":"Boolean","desc":"Useful if icon is on the left side of something: applies a standard margin on the right side of Icon","category":"content"},"right":{"type":"Boolean","desc":"Useful if icon is on the right side of something: applies a standard margin on the left side of Icon","category":"content"}},"slots":{"default":{"desc":"Suggestions: QTooltip or QMenu"}}}')},"866f":function(e){e.exports=JSON.parse('{"type":"directive","meta":{"docsUrl":"https://v1.quasar.dev/vue-directives/intersection"},"addedIn":"v1.3.0","value":{"type":["Object","Function"],"desc":"Function to call when scrolling occurs (identical to description of \'handler\' prop of the Object form); If using the Object form, it is HIGHLY recommended to reference it from your vue component scope, otherwise the directive update cycle will continuously recreate the observer which hits performance hard","examples":["v-intersection=\\"myFunction\\"","v-intersection=\\"{ handler: myFunction, cfg: { root: myScrollingParentEl, rootMargin: \'10px 20px 30px 40px\', threshold: [0, 0.25, 0.5, 0.75, 1] } }\\""],"definition":{"handler":{"type":"Function","desc":"The handler function to be called","returns":{"type":"Boolean","desc":"If you return Boolean false from the handler, the observer stops"},"params":{"entry":{"type":"Object","desc":"The IntersectionObserverEntry object","definition":{"boundingClientRect":{"type":"Object","desc":"Object containing the client rect information","definition":{"bottom":{"type":"Number","desc":"The bottom of the client rect","examples":["1770"]},"height":{"type":"Number","desc":"The height of the client rect","examples":["50"]},"left":{"type":"Number","desc":"The left of the client rect","examples":["49"]},"right":{"type":"Number","desc":"The right of the client rect","examples":["384"]},"top":{"type":"Number","desc":"The top of the client rect","examples":["1720"]},"width":{"type":"Number","desc":"The width of the client rect","examples":["335"]},"x":{"type":"Number","desc":"The x position of the client rect","examples":["49"]},"y":{"type":"Number","desc":"The y position of the client rect","examples":["1720"]}}},"intersectionRatio":{"type":"Number","desc":"The ratio of the observed objects visibility","examples":["0.5"]},"intersectionRect":{"type":"Object","desc":"Object containing the client rect information","definition":{"bottom":{"type":"Number","desc":"The bottom of the client rect","examples":["0"]},"height":{"type":"Number","desc":"The height of the client rect","examples":["0"]},"left":{"type":"Number","desc":"The left of the client rect","examples":["0"]},"right":{"type":"Number","desc":"The right of the client rect","examples":["0"]},"top":{"type":"Number","desc":"The top of the client rect","examples":["0"]},"width":{"type":"Number","desc":"The width of the client rect","examples":["0"]},"x":{"type":"Number","desc":"The x position of the client rect","examples":["0"]},"y":{"type":"Number","desc":"The y position of the client rect","examples":["0"]}}},"isIntersecting":{"type":"Boolean","desc":"It is Boolean true if intersecting the scrollable area"},"rootBounds":{"type":"Object","desc":"Object containing the client rect information","definition":{"bottom":{"type":"Number","desc":"The bottom of the client rect","examples":["0"]},"height":{"type":"Number","desc":"The height of the client rect","examples":["0"]},"left":{"type":"Number","desc":"The left of the client rect","examples":["0"]},"right":{"type":"Number","desc":"The right of the client rect","examples":["0"]},"top":{"type":"Number","desc":"The top of the client rect","examples":["0"]},"width":{"type":"Number","desc":"The width of the client rect","examples":["0"]},"x":{"type":"Number","desc":"The x position of the client rect","examples":["0"]},"y":{"type":"Number","desc":"The y position of the client rect","examples":["0"]}}},"target":{"type":"Element","desc":"The target element"},"time":{"type":"Number","desc":"The timestamp of the event","examples":["6316.879999998491"]}}}}},"cfg":{"type":"Object","desc":"Intersection observer options (can be omitted and all its props are optional)","definition":{"root":{"type":"Element","desc":"Lets you define an alternative to the viewport as your root (through its DOM element); It is important to keep in mind that root needs to be an ancestor of the observed element","examples":["myScrollingParentEl"]},"rootMargin":{"type":"String","desc":"Allows you to specify the margins for the root, effectively allowing you to either grow or shrink the area used for intersections","examples":["10px 20px 30px 40px"]},"threshold":{"type":"Array","desc":"Threshold(s) at which to trigger callback, specified as a ratio, or list of ratios, of (visible area / total area) of the observed element","examples":["[ 0, 0.25, 0.5, 0.75, 1 ]"]}}}}},"modifiers":{"once":{"type":"Boolean","desc":"Call handler only once, when the conditions are first met","reactive":true,"examples":["v-intersection.once"]}}}')},"881f":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/layout/page"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"slots":{"default":{"desc":"Encapsulates a QPage (either directly or through <router-view>)"}}}')},"89f3":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/breadcrumbs"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"separator":{"type":"String","desc":"The string used to separate the breadcrumbs","default":"/","examples":["-","|",">"],"category":"content"},"active-color":{"type":"String","desc":"The color of the active breadcrumb, which can be any color from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","default":"primary"},"gutter":{"type":"String","desc":"The gutter value allows you control over the space between the breadcrumb elements.","default":"sm","values":["none","xs","sm","md","lg","xl"],"examples":["md","lg"],"category":"content"},"separator-color":{"type":"String","desc":"The color used to color the separator, which can be any color from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"align":{"type":"String","default":"left","desc":"Specify how to align the breadcrumbs horizontally","values":["left","center","right","between","around","evenly"],"examples":["left","center"],"category":"content"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"scopedSlots":{"separator":{"desc":"HTML or component you can slot in to separate the breadcrumbs","scope":{}}}}')},"8a7b":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/splitter"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"value":{"type":"Number","desc":"Model of the component defining the split ratio percent (0.0 < x < 100.0) between panels; Either use this property (along with a listener for \'input\' event) OR use v-model directive","examples":["v-model=\\"ratio\\""],"category":"model"},"reverse":{"type":"Boolean","desc":"Apply the model size to the second panel (by default it applies to the first)","category":"model","addedIn":"v1.2.6"},"unit":{"type":"String","desc":"CSS unit for the model","default":"%","values":["%","px"],"category":"model","addedIn":"v1.2.6"},"emit-immediately":{"type":"Boolean","desc":"Emit model while user is panning on the separator","category":"model"},"horizontal":{"type":"Boolean","desc":"Allows the splitter to split its two panels horizontally, instead of vertically","category":"content"},"limits":{"type":"Array","desc":"An array of two values representing the minimum and maximum split size of the two panels; When \'px\' unit is set then you can use Infinity as the second value to make it unbound on the other side","default":"For \'%\' unit: [10, 90]; For \'px\' unit: [50, Infinity]","examples":[":limits=\\"[30, 70]\\"",":limits=\\"[0, Infinity]\\""],"category":"content|model"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"before-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the \'before\' panel","examples":["bg-deep-orange",":before-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"after-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the \'after\' panel","examples":["bg-deep-orange",":after-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"separator-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the splitter separator","examples":["bg-deep-orange",":separator-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"separator-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the splitter separator","examples":["background-color: #ff0000",":separator-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style"},"dark":{"type":"Boolean","desc":"Applies a default lighter color on the separator; To be used when background is darker; Avoid using when you are overriding through separator-class or separator-style props","category":"style"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component; Suggestion: QTooltip, QMenu"},"before":{"desc":"Content of the panel on left/top"},"after":{"desc":"Content of the panel on right/bottom"},"separator":{"desc":"Content to be placed inside the separator; By default it is centered"}},"events":{"input":{"desc":"Emitted when component\'s model value changes; Is also used by v-model","params":{"value":{"type":"Number","desc":"New model value (0.0 < x < 100.0) defining the ratio between panels","examples":[0.22]}}}}}')},"8fee":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},9012:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/menu"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"target":{"type":["Boolean","String","Element"],"desc":"Configure a target element to trigger component toggle; \'true\' means it enables the parent DOM element, \'false\' means it disables attaching events to any DOM elements; By using a String (CSS selector) or a DOM element it attaches the events to the specified DOM element (if it exists)","default":true,"values":["(Boolean) true","(Boolean) false","(CSS selector)","(DOM Element)"],"examples":[":target=\\"false\\"",":target=\\"$refs.target\\"","target=\\".my-parent\\"","target=\\"#target-id\\""],"category":"behavior"},"no-parent-event":{"type":"Boolean","desc":"Skips attaching events to the target DOM element (that trigger the element to get shown)","category":"behavior"},"context-menu":{"type":"Boolean","desc":"Allows the component to behave like a context menu, which opens with a right mouse click (or long tap on mobile)","category":"behavior"},"content-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the content","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"content-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the content","examples":["background-color: #ff0000",":content-style=\\"{ color: \'#ff0000\' }\\""],"category":"style"},"value":{"type":"Boolean","desc":"Model of the component defining shown/hidden state; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style","addedIn":"v1.3.0"},"fit":{"type":"Boolean","desc":"Allows the menu to match at least the full width of its target","category":"position"},"cover":{"type":"Boolean","desc":"Allows the menu to cover its target. When used, the \'self\' and \'fit\' props are no longer effective","category":"position"},"anchor":{"type":"String","desc":"Two values setting the starting position or anchor point of the menu relative to its target","values":["top left","top middle","top right","center left","center middle","center right","bottom left","bottom middle","bottom right"],"examples":["top left","bottom right"],"category":"position"},"self":{"type":"String","desc":"Two values setting the menu\'s own position relative to its target","values":["top left","top middle","top right","center left","center middle","center right","bottom left","bottom middle","bottom right"],"examples":["top left","bottom right"],"category":"position"},"offset":{"type":"Array","desc":"An array of two numbers to offset the menu horizontally and vertically in pixels","examples":["[8, 8]","[5, 10]"],"category":"position"},"scroll-target":{"type":["Element","String"],"desc":"CSS selector or DOM element to be used as a custom scroll container instead of the auto detected one","examples":[":scroll-target=\\"$refs.scrollTarget\\"","scroll-target=\\".scroll-target-class\\"","scroll-target=\\"#scroll-target-id\\"","scroll-target=\\"body\\""],"category":"behavior","addedIn":"v1.8.0"},"touch-position":{"type":"Boolean","desc":"Allows for the target position to be set by the mouse position, when the target of the menu is either clicked or touched","category":"behavior"},"persistent":{"type":"Boolean","desc":"Allows the menu to not be dismissed by a click/tap outside of the menu or by hitting the ESC key","category":"behavior"},"auto-close":{"type":"Boolean","desc":"Allows any click/tap in the menu to close it; Useful instead of attaching events to each menu item that should close the menu on click/tap","category":"behavior"},"separate-close-popup":{"type":"Boolean","desc":"Separate from parent menu, marking it as a separate closing point for v-close-popup (without this, chained menus close all together)","category":"behavior","addedIn":"v1.1.0"},"square":{"type":"Boolean","desc":"Forces content to have squared borders","category":"style"},"no-refocus":{"type":"Boolean","desc":"(Accessibility) When Menu gets hidden, do not refocus on the DOM element that previously had focus","category":"behavior"},"no-focus":{"type":"Boolean","desc":"(Accessibility) When Menu gets shown, do not switch focus on it","category":"behavior"},"max-height":{"type":"String","desc":"The maximum height of the menu; Size in CSS units, including unit name","examples":["16px","2rem"],"category":"style"},"max-width":{"type":"String","desc":"The maximum width of the menu; Size in CSS units, including unit name","examples":["16px","2rem"],"category":"style"},"transition-show":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"fade"},"transition-hide":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"fade"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"events":{"input":{"desc":"Emitted when showing/hidden state changes; Is also used by v-model","params":{"value":{"type":"Boolean","desc":"New state (showing/hidden)"}}},"show":{"desc":"Emitted after component has triggered show()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-show":{"desc":"Emitted when component triggers show() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"hide":{"desc":"Emitted after component has triggered hide()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-hide":{"desc":"Emitted when component triggers hide() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"escape-key":{"desc":"Emitted when ESC key is pressed; Does not get emitted if Menu is \'persistent\'"}},"methods":{"show":{"desc":"Triggers component to show","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"hide":{"desc":"Triggers component to hide","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"toggle":{"params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}},"desc":"Triggers component to toggle between show/hide"},"updatePosition":{"desc":"There are some custom scenarios for which Quasar cannot automatically reposition the menu without significant performance drawbacks so the optimal solution is for you to call this method when you need it"},"focus":{"desc":"Focus menu; if you have content with autofocus attribute, it will directly focus it"}}}')},"907a":function(e){e.exports=JSON.parse('{"type":"directive","meta":{"docsUrl":"https://v1.quasar.dev/vue-directives/touch-pan"},"value":{"type":"Function","desc":"Handler for panning (use a non-function to disable)","params":{"details":{"type":"Object","desc":"Event details","definition":{"evt":{"type":"Object","desc":"Original JS event Object"},"touch":{"type":"Boolean","desc":"Triggered by a touch event"},"mouse":{"type":"Boolean","desc":"Triggered by a mouse event"},"position":{"type":"Object","desc":"Event Position Object","definition":{"top":{"type":"Number","desc":"Vertical offset from top of window","examples":[235]},"left":{"type":"Number","desc":"Horizontal offset from left of window","examples":[235]}}},"direction":{"type":"String","desc":"Direction of movement","values":["up","right","down","left"]},"isFirst":{"type":"Boolean","desc":"Is first time the handler is called since movement started"},"isFinal":{"type":"Boolean","desc":"Is last time the handler is called since movement ended"},"duration":{"type":"Number","desc":"How long it took to trigger the event (in milliseconds)","examples":[612]},"distance":{"type":"Object","desc":"Absolute distance (in pixels) since movement started from initial point","definition":{"x":{"type":"Number","desc":"Absolute distance horizontally","examples":[231]},"y":{"type":"Number","desc":"Absolute distance vertically","examples":[231]}}},"offset":{"type":"Object","desc":"Distance (in pixels) since movement started from initial point","definition":{"x":{"type":"Number","desc":"Distance horizontally","examples":[-231,110]},"y":{"type":"Number","desc":"Distance vertically","examples":[-231,110]}}},"delta":{"type":"Object","desc":"Delta of distance (in pixels) since handler was called last time","definition":{"x":{"type":"Number","desc":"Distance horizontally","examples":[2]},"y":{"type":"Number","desc":"Distance vertically","examples":[1]}}}}}},"returns":null,"examples":["v-touch-pan=\\"fnToCall\\"","v-touch-pan=\\"void 0\\""]},"modifiers":{"stop":{"type":"Boolean","desc":"Stop event propagation for touch events"},"prevent":{"type":"Boolean","desc":"Calls event.preventDefault() for touch events"},"mightPrevent":{"type":"Boolean","desc":"Required when you might call event.preventDefault() in your handler for touch events"},"capture":{"type":"Boolean","desc":"Use capture for touchstart event"},"mouse":{"type":"Boolean","desc":"Listen for mouse events too"},"mouseCapture":{"type":"Boolean","desc":"Use capture for mousedown event"},"mouseAllDir":{"type":"Boolean","desc":"Ignore initial mouse move direction (do not abort if the first mouse move is in an unaccepted direction)","reactive":true},"horizontal":{"type":"Boolean","desc":"Catch horizontal (left/right) movement","reactive":true},"vertical":{"type":"Boolean","desc":"Catch vertical (up/down) movement","reactive":true},"up":{"type":"Boolean","desc":"Catch panning to up","reactive":true},"right":{"type":"Boolean","desc":"Catch panning to right","reactive":true},"down":{"type":"Boolean","desc":"Catch panning to down","reactive":true},"left":{"type":"Boolean","desc":"Catch panning to left","reactive":true}}}')},"91af":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/input"},"behavior":{"$listeners":{"desc":"All native events are being propagated to the inner native input element (you don\'t need the \'.native\' modifier)"}},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms; If not specified, it takes the value of \'for\' prop, if it exists","examples":["car_id","car_id"],"category":"behavior","addedIn":"v1.9.0"},"mask":{"type":"String","desc":"Custom mask or one of the predefined mask names","examples":["###-##","date","datetime","time","fulltime","phone","card"],"category":"behavior"},"fill-mask":{"type":["Boolean","String"],"desc":"Fills string with specified characters (or underscore if value is not string) to fill mask\'s length","examples":["true","\'0\'","\'_\'"],"category":"behavior"},"reverse-fill-mask":{"type":"Boolean","desc":"Fills string from the right side of the mask","category":"behavior"},"unmasked-value":{"type":"Boolean","desc":"Model will be unmasked (won\'t contain tokens/separation characters)","category":"behavior"},"error":{"type":"Boolean","desc":"Does field have validation errors?","category":"behavior"},"error-message":{"type":"String","desc":"Validation error message (gets displayed only if \'error\' is set to \'true\')","examples":["Username must have at least 5 characters"],"category":"content"},"no-error-icon":{"type":"Boolean","desc":"Hide error icon when there is an error","category":"content"},"rules":{"type":"Array","desc":"Array of Functions/Strings; If String, then it must be a name of one of the embedded validation rules","examples":[":rules=\\"[ val => val.length <= 3 || \'Please use maximum 3 characters\' ]\\"",":rules=\\"[ \'fulltime\' ]\\""],"category":"behavior"},"reactive-rules":{"type":"Boolean","desc":"By default a change in the rules does not trigger a new validation until the model changes; If set to true then a change in the rules will trigger a validation; Has a performance penalty, so use it only when you really need it","category":"behavior","addedIn":"v1.11.0"},"lazy-rules":{"type":["Boolean","String"],"desc":"If set to boolean true then it checks validation status against the \'rules\' only after field loses focus for first time; If set to \'ondemand\' then it will trigger only when component\'s validate() method is manually called or when the wrapper QForm submits itself","values":["(Boolean) true","(Boolean) false","ondemand"],"category":"behavior"},"label":{"type":"String","desc":"A text label that will “float” up above the input field, once the field gets focus","examples":["Username"],"category":"content"},"stack-label":{"type":"Boolean","desc":"Label will be always shown above the field regardless of field content (if any)","category":"content"},"hint":{"type":"String","desc":"Helper (hint) text which gets placed below your wrapped form component","examples":["Fill in between 3 and 12 characters"],"category":"content"},"hide-hint":{"type":"Boolean","desc":"Hide the helper (hint) text when field doesn\'t have focus","category":"content"},"prefix":{"type":"String","desc":"Prefix","examples":["$"],"category":"content"},"suffix":{"type":"String","desc":"Suffix","examples":["@gmail.com"],"category":"content"},"label-color":{"type":"String","desc":"Color name for the label from the Quasar Color Palette; Overrides the \'color\' prop; The difference from \'color\' prop is that the label will always have this color, even when field is not focused","examples":["primary","teal-10"],"category":"style","addedIn":"v1.7.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"bg-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"loading":{"type":"Boolean","desc":"Signals the user a process is in progress by displaying a spinner; Spinner can be customized by using the \'loading\' slot.","category":"behavior|content"},"clearable":{"type":"Boolean","desc":"Appends clearable icon when a value (not undefined or null) is set; When clicked, model becomes null","category":"behavior|content"},"clear-icon":{"type":"String","desc":"Custom icon to use for the clear button when using along with \'clearable\' prop","examples":["close"],"category":"content"},"filled":{"type":"Boolean","desc":"Use \'filled\' design for the field","category":"style"},"outlined":{"type":"Boolean","desc":"Use \'outlined\' design for the field","category":"style"},"borderless":{"type":"Boolean","desc":"Use \'borderless\' design for the field","category":"style"},"standout":{"type":["Boolean","String"],"desc":"Use \'standout\' design for the field; Specifies classes to be applied when focused (overriding default ones)","examples":["standout","standout=\\"bg-primary text-white\\""],"category":"style"},"label-slot":{"type":"Boolean","desc":"Enables label slot; You need to set it to force use of the \'label\' slot if the \'label\' prop is not set","category":"content","addedIn":"v1.12.9"},"bottom-slots":{"type":"Boolean","desc":"Enables bottom slots (\'error\', \'hint\', \'counter\')","category":"content"},"hide-bottom-space":{"type":"Boolean","desc":"Do not reserve space for hint/error/counter anymore when these are not used; As a result, it also disables the animation for those; It also allows the hint/error area to stretch vertically based on its content","category":"style"},"counter":{"type":"Boolean","desc":"Show an automatic counter on bottom right","category":"content"},"rounded":{"type":"Boolean","desc":"Applies a small standard border-radius for a squared shape of the component","category":"style"},"square":{"type":"Boolean","desc":"Remove border-radius so borders are squared; Overrides \'rounded\' prop","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"item-aligned":{"type":"Boolean","desc":"Match inner content alignment to that of QItem","category":"style"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"autofocus":{"type":"Boolean","desc":"Focus field on initial component render","category":"behavior"},"for":{"type":"String","desc":"Used to specify the \'id\' of the control and also the \'for\' attribute of the label that wraps it; If no \'name\' prop is specified, then it is used for this attribute as well","examples":["myFieldsId"],"category":"behavior","addedIn":"v1.4.2"},"value":{"type":["String","Number"],"desc":"Model of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","required":true,"examples":["v-model=\\"myText\\""],"category":"model"},"shadow-text":{"type":"String","desc":"Text to be displayed as shadow at the end of the text in the control; Does NOT applies to type=file","examples":["rest of the fill value"],"category":"content","addedIn":"v1.10.0"},"type":{"type":"String","desc":"Input type","default":"text","values":["text","password","textarea","email","search","tel","file","number","url","time","date"],"examples":["password"],"category":"general"},"debounce":{"type":["String","Number"],"desc":"Debounce amount (in milliseconds) when updating model","examples":["0","530"],"category":"model"},"maxlength":{"type":["String","Number"],"desc":"Specify a max length of model","examples":["12"],"category":"model"},"autogrow":{"type":"Boolean","desc":"Make field autogrow along with its content (uses a textarea)","category":"content"},"input-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the underlying input tag","examples":["my-special-class",":input-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"input-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the underlying input tag","examples":["background-color: #ff0000",":input-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style"}},"slots":{"default":{"desc":"Field main content"},"prepend":{"desc":"Prepend inner field; Suggestions: QIcon, QBtn"},"append":{"desc":"Append to inner field; Suggestions: QIcon, QBtn"},"before":{"desc":"Prepend outer field; Suggestions: QIcon, QBtn"},"after":{"desc":"Append outer field; Suggestions: QIcon, QBtn"},"label":{"desc":"Slot for label; Used only if \'label-slot\' prop is set or the \'label\' prop is set; When it is used the text in the \'label\' prop is ignored","addedIn":"v1.12.9"},"error":{"desc":"Slot for errors; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"hint":{"desc":"Slot for hint text; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"counter":{"desc":"Slot for counter text; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"loading":{"desc":"Override default spinner when component is in loading mode; Use in conjunction with \'loading\' prop"}},"events":{"clear":{"desc":"When using the \'clearable\' property, this event is emitted when the clear icon is clicked","addedIn":"v1.1.5","params":{"value":{"type":["Any"],"desc":"The previous value before clearing it"}}},"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":["String","Number"],"desc":"New model value","required":true}}},"focus":{"desc":"Emitted when component gets focused","params":{"evt":{"type":"Object","desc":"JS event object"}}},"blur":{"desc":"Emitted when component loses focus","params":{"evt":{"type":"Object","desc":"JS event object"}}}},"methods":{"resetValidation":{"desc":"Reset validation status"},"validate":{"desc":"Trigger a validation","params":{"value":{"type":"Any","desc":"Optional value to validate against"}},"returns":{"type":["Boolean","Promise<boolean>"],"desc":"True/false if no async rules, otherwise a Promise with the outcome (true -> validation was a success, false -> invalid models detected)","examples":["true","validate().then(outcome => { ... })"]}},"focus":{"desc":"Focus underlying input tag"},"blur":{"desc":"Lose focus on underlying input tag"},"select":{"desc":"Select input text"}}}')},"91ea":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},"92ee":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},9460:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/knob"},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"value":{"type":"Number","desc":"Any number to indicate the given value of the knob. Either use this property (along with a listener for \'input\' event) OR use the v-model directive","examples":["v-model=\\"myValue\\""],"category":"model"},"min":{"type":"Number","desc":"The minimum value that the model (the knob value) should start at","examples":["20","5"],"category":"model"},"max":{"type":"Number","desc":"The maximum value that the model (the knob value) should go to","examples":["100","50"],"category":"model"},"step":{"type":"Number","default":"1","desc":"A number representing steps in the value of the model, while adjusting the knob","examples":["1","5"],"category":"model"},"instant-feedback":{"type":"Boolean","desc":"No animation when model changes","category":"behavior","addedIn":"v1.11.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"center-color":{"type":"String","desc":"Color name for the center part of the component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"track-color":{"type":"String","desc":"Color name for the track of the component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"font-size":{"type":"String","desc":"Size of text in CSS units, including unit name. Suggestion: use \'em\' units to sync with component size","default":"0.25em","examples":["1em","16px","2rem"],"category":"style"},"thickness":{"type":"Number","default":0.2,"desc":"Thickness of progress arc as a ratio (0.0 < x < 1.0) of component size","examples":[1,0.3],"category":"style"},"angle":{"type":"Number","desc":"Angle to rotate progress arc by","default":0,"examples":[0,40,90],"category":"content"},"show-value":{"type":"Boolean","desc":"Enables the default slot and uses it (if available), otherwise it displays the \'value\' prop as text; Make sure the text has enough space to be displayed inside the component","category":"content|behavior"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Number","desc":"New model value","required":true}}},"change":{"desc":"Fires at the end of a knob\'s adjustment and offers the value of the model","params":{"value":{"type":"Number","desc":"New model value","examples":[12]}}},"drag-value":{"desc":"The value of the model while dragging is still in progress","params":{"value":{"type":"Number","desc":"New model value","examples":[12]}}}}}')},9472:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/addressbar-color"},"injection":"$q.addressbarColor","methods":{"set":{"desc":"Sets addressbar color (for browsers that support it)","params":{"hexColor":{"type":"String","desc":"Color in hex format","required":true,"examples":["#ff0000"]}}}}}')},9677:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/tabs"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"ripple":{"type":["Boolean","Object"],"desc":"Configure material ripple (disable it by setting it to \'false\' or supply a config object)","default":true,"examples":[false,"{ early: true, center: true, color: \'teal\', keyCodes: [] }"],"category":"style"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"label":{"type":["Number","String"],"desc":"A number or string to label the tab","examples":["Home"],"category":"content"},"alert":{"type":["Boolean","String"],"desc":"Adds an alert symbol to the tab, notifying the user there are some updates; If its value is not a Boolean, then you can specify a color","examples":["alert","alert=\\"purple\\""],"category":"content"},"alert-icon":{"type":"String","desc":"Adds a floating icon to the tab, notifying the user there are some updates; It\'s displayed only if \'alert\' is set; Can use the color specified by \'alert\' prop","examples":["alert-icon=\\"alarm_on\\""],"category":"content","addedIn":"v1.9.14"},"name":{"type":["Number","String"],"desc":"Panel name","default":"A random UID","examples":["home",":name=\\"1\\""],"category":"general"},"no-caps":{"type":"Boolean","desc":"Turns off capitalizing all letters within the tab (which is the default)","category":"content"},"content-class":{"type":"String","desc":"Class definitions to be attributed to the content wrapper","examples":["my-special-class"],"category":"style","addedIn":"v1.12.0"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"}},"slots":{"default":{"desc":"Suggestion: QMenu, QTooltip"}}}')},"98fe":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/infinite-scroll"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"offset":{"type":"Number","desc":"Offset (pixels) to bottom of Infinite Scroll container from which the component should start loading more content in advance","default":500,"examples":[":offset=\\"250\\""],"category":"behavior"},"debounce":{"type":["String","Number"],"desc":"Debounce amount (in milliseconds)","default":100,"examples":["0","530"],"category":"behavior","addedIn":"v1.1.0"},"scroll-target":{"type":["Element","String"],"desc":"CSS selector or DOM element to be used as a custom scroll container instead of the auto detected one","examples":[":scroll-target=\\"$refs.scrollTarget\\"","scroll-target=\\".scroll-target-class\\"","scroll-target=\\"#scroll-target-id\\"","scroll-target=\\"body\\""],"category":"behavior","addedIn":"v1.8.0"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"reverse":{"type":"Boolean","desc":"Scroll area should behave like a messenger - starting scrolled to bottom and loading when reaching the top","category":"behavior"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"},"loading":{"desc":"Slot displaying something while loading content; Example: QSpinner"}},"events":{"load":{"desc":"Emitted when Infinite Scroll needs to load more data","params":{"index":{"type":"Number","desc":"The index parameter can be used to make some sort of pagination on the content you load. It takes numeric values starting with 1 and incrementing with each call","examples":[12]},"done":{"type":"Function","desc":"Function to call when you made all necessary updates. DO NOT forget to call it otherwise your loading message will continue to be displayed","params":{"stop":{"type":"Boolean","desc":"Stops QInfiniteScroll if it\'s Boolean \'true\'; Specify it in case there\'s nothing more to load"}},"returns":null}}}},"methods":{"poll":{"desc":"Checks scroll position and loads more content if necessary"},"trigger":{"desc":"Tells Infinite Scroll to load more content, regardless of the scroll position"},"reset":{"desc":"Resets calling index to 0"},"stop":{"desc":"Stops working, regardless of scroll position"},"resume":{"desc":"Starts working. Checks scroll position upon call and if trigger is hit, it loads more content"},"updateScrollTarget":{"desc":"Updates the scroll target; Useful when the parent elements change so that the scrolling target also changes"}}}')},9991:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/expansion-item"},"props":{"to":{"type":["String","Object"],"desc":"Equivalent to Vue Router <router-link> \'to\' property","examples":["/home/dashboard",":to=\\"{ name: \'my-route-name\' }\\""],"category":"behavior"},"exact":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'exact\' property","category":"behavior"},"append":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'append\' property","category":"behavior"},"replace":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'replace\' property","category":"behavior"},"active-class":{"type":"String","desc":"Equivalent to Vue Router <router-link> \'active-class\' property","examples":["my-active-class"],"category":"behavior"},"exact-active-class":{"type":"String","desc":"Equivalent to Vue Router <router-link> \'active-class\' property","examples":["my-exact-active-class"],"category":"behavior"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"value":{"type":"Boolean","desc":"Model of the component defining \'open\' state; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"expand-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"expanded-icon":{"type":"String","desc":"Expand icon name (following Quasar convention) for when QExpansionItem is expanded; When used, it also disables the rotation animation of the expand icon; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v1.4.5"},"expand-icon-class":{"type":["Array","String","Object"],"desc":"Apply custom class(es) to the expand icon item section","examples":["text-purple"],"category":"style"},"label":{"type":"String","desc":"Header label (unless using \'header\' slot)","examples":["My expansion item"],"category":"content"},"label-lines":{"type":["Number","String"],"desc":"Apply ellipsis when there\'s not enough space to render on the specified number of lines; If more than one line specified, then it will only work on webkit browsers because it uses the \'-webkit-line-clamp\' CSS property!","examples":["1","3",":label-lines=\\"2\\""],"category":"content"},"caption":{"type":"String","desc":"Header sub-label (unless using \'header\' slot)","examples":["Unread message: 5"],"category":"content"},"caption-lines":{"type":["Number","String"],"desc":"Apply ellipsis when there\'s not enough space to render on the specified number of lines; If more than one line specified, then it will only work on webkit browsers because it uses the \'-webkit-line-clamp\' CSS property!","examples":["1","3",":caption-lines=\\"2\\""],"category":"content"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"duration":{"type":"Number","desc":"Animation duration (in milliseconds)","default":300,"examples":[":duration=\\"1000\\""],"category":"behavior"},"header-inset-level":{"type":"Number","desc":"Apply an inset to header (unless using \'header\' slot); Useful when header avatar/left side is missing but you want to align content with other items that do have a left side, or when you\'re building a menu","examples":[":header-inset-level=\\"1\\""],"category":"content"},"content-inset-level":{"type":"Number","desc":"Apply an inset to content (changes content padding)","examples":[":content-inset-level=\\"1\\""],"category":"content"},"expand-separator":{"type":"Boolean","desc":"Apply a top and bottom separator when expansion item is opened","category":"content"},"default-opened":{"type":"Boolean","desc":"Puts expansion item into open state on initial render; Overridden by v-model if used","category":"behavior"},"expand-icon-toggle":{"type":"Boolean","desc":"Applies the expansion events to the expand icon only and not to the whole header","category":"behavior"},"switch-toggle-side":{"type":"Boolean","desc":"Switch expand icon side (from default \'right\' to \'left\')","category":"content"},"dense-toggle":{"type":"Boolean","desc":"Use dense mode for expand icon","category":"style"},"group":{"type":"String","desc":"Register expansion item into a group (unique name that must be applied to all expansion items in that group) for coordinated open/close state within the group a.k.a. \'accordion mode\'","examples":["my-emails"],"category":"content|behavior"},"popup":{"type":"Boolean","desc":"Put expansion list into \'popup\' mode","category":"behavior"},"header-style":{"type":["Array","String","Object"],"desc":"Apply custom style to the header","examples":["background: \'#ff0000\'",":header-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style"},"header-class":{"type":["Array","String","Object"],"desc":"Apply custom class(es) to the header","examples":["my-custom-class",":header-class=\\"{ \'my-custom-class\': someCondition }\\""],"category":"style"}},"slots":{"default":{"desc":"Slot used for expansion item\'s content"},"header":{"desc":"Slot used for overriding default header"}},"events":{"input":{"desc":"Emitted when showing/hidden state changes; Is also used by v-model","params":{"value":{"type":"Boolean","desc":"New state (showing/hidden)"}}},"show":{"desc":"Emitted after component has triggered show()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-show":{"desc":"Emitted when component triggers show() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"hide":{"desc":"Emitted after component has triggered hide()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-hide":{"desc":"Emitted when component triggers hide() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"after-show":{"desc":"Emitted when component show animation is finished","addedIn":"v1.9.0"},"after-hide":{"desc":"Emitted when component hide animation is finished","addedIn":"v1.9.0"}},"methods":{"show":{"desc":"Triggers component to show","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"hide":{"desc":"Triggers component to hide","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"toggle":{"params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}},"desc":"Triggers component to toggle between show/hide"}}}')},"9dd83":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/table"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"props":{"type":"Object","desc":"QTable\'s column scoped slot property","examples":[":props=\\"props\\""],"category":"general"},"auto-width":{"type":"Boolean","desc":"Tries to shrink column width size; Useful for columns with a checkbox/radio/toggle","category":"content"},"no-hover":{"type":"Boolean","desc":"Disable hover effect","addedIn":"v1.5.9","category":"style"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},"9e0c":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/slide-transition"},"props":{"appear":{"type":"Boolean","desc":"If set to true, the transition will be applied on the initial render.","category":"behavior"},"duration":{"type":"Number","desc":"Duration (in milliseconds) enabling animated scroll.","default":300,"examples":[500,":duration=\\"500\\""],"category":"behavior"}},"slots":{"default":{"desc":"This is where content goes"}},"events":{"show":{"desc":"Emitted when component show animation is finished","addedIn":"v1.9.0"},"hide":{"desc":"Emitted when component hide animation is finished","addedIn":"v1.9.0"}}}')},"9fa5":function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},a2fe:function(e){e.exports=JSON.parse('{"type":"directive","meta":{"docsUrl":"https://v1.quasar.dev/vue-directives/scroll-fire"},"value":{"type":"Function","desc":"Function to call when scrolling and element comes into the viewport (use a non-function to disable)","params":{"el":{"type":"Object","desc":"DOM element that scroll-fire is applied to"}},"returns":null,"examples":["v-scroll-fire=\\"fnToCall\\"","v-scroll-fire=\\"void 0\\""]}}')},a393:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/rating"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"value":{"desc":"Model of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model","type":"Number","examples":[":value=\\"2\\""]},"max":{"type":["Number","String"],"desc":"Number of icons to display","default":5,"examples":["3",":max=\\"5\\""],"category":"general"},"icon":{"type":["String","Array"],"desc":"Icon name following Quasar convention; make sure you have the icon library installed unless you are using \'img:\' prefix; If an array is provided each rating value will use the corresponding icon in the array (0 based)","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"icon-selected":{"type":["String","Array"],"desc":"Icon name following Quasar convention to be used when selected (optional); make sure you have the icon library installed unless you are using \'img:\' prefix; If an array is provided each rating value will use the corresponding icon in the array (0 based)","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v1.1.0"},"icon-half":{"type":["String","Array"],"desc":"Icon name following Quasar convention to be used when selected (optional); make sure you have the icon library installed unless you are using \'img:\' prefix; If an array is provided each rating value will use the corresponding icon in the array (0 based)","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v1.7.4"},"color":{"type":["String","Array"],"desc":"Color name for component from the Quasar Color Palette; v1.5.0+: If an array is provided each rating value will use the corresponding color in the array (0 based)","examples":["primary","teal-10","primary","teal-10","[\\"accent\\", \\"grey-7\\"] "],"category":"style"},"color-selected":{"type":["String","Array"],"desc":"Color name from the Quasar Palette for selected icons","examples":["primary","teal-10"],"category":"style","addedIn":"v1.5.0"},"color-half":{"type":["String","Array"],"desc":"Color name from the Quasar Palette for half selected icons","examples":["primary","teal-10"],"category":"style","addedIn":"v1.7.4"},"no-dimming":{"type":"Boolean","desc":"Does not lower opacity for unselected icons","category":"style","addedIn":"v1.7.4"},"no-reset":{"type":"Boolean","desc":"When used, disables default behavior of clicking/tapping on icon which represents current model value to reset model to 0","category":"model"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"}},"slots":{"tip-[index]":{"desc":"Slot to define the tooltip of icon at \'[index]\' (1-based); Suggestion: QTooltip","addedIn":"v1.5.0"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true}}}}}')},a3a7:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/inner-loading"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name, or standard size name (xs|sm|md|lg|xl), for the inner Spinner (unless using the default slot)","examples":["16px","2rem","xs","md"],"category":"style","default":"42px"},"showing":{"type":"Boolean","desc":"State - loading or not","category":"state"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette for the inner Spinner (unless using the default slot)","examples":["primary","teal-10"],"category":"style"},"transition-show":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"fade"},"transition-hide":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"fade"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"}},"slots":{"default":{"desc":"Default slot is used for replacing default Spinner; Suggestions: a spinner or text"}}}')},a44a:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},a76f:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/space"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}}}')},a809:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/options/platform-detection"},"injection":"$q.platform","props":{"userAgent":{"type":"String","desc":"Client browser User Agent","examples":["mozilla/5.0 (macintosh; intel mac os x 10_14_5) applewebkit/537.36 (khtml, like gecko) chrome/75.0.3770.100 safari/537.36"]},"is":{"type":"Object","desc":"Client browser details (property names depend on browser)","examples":["{ chrome: true, version: \'71.0.3578.98\', versionNumber: 71, mac: true, desktop: true, webkit: true, name: \'chrome\', platform: \'mac\' }"]},"has":{"type":"Object","desc":"Client browser detectable properties","definition":{"touch":{"type":"Boolean","desc":"Client browser runs on device with touch support"},"webStorage":{"type":"Boolean","desc":"Client browser has Web Storage support"}},"examples":["{ touch: false, webStorage: true }"]},"within":{"type":"Object","desc":"Client browser environment","definition":{"iframe":{"type":"Boolean","desc":"Does the app run under an iframe?"}},"examples":["{ iframe: false }"]}}}')},a8fa:function(e){e.exports=JSON.parse('{"type":"directive","meta":{"docsUrl":"https://v1.quasar.dev/vue-directives/touch-hold"},"value":{"type":"Function","desc":"Function to call after user has hold touch/click for the specified amount of time (use a non-function to disable)","params":{"details":{"type":"Object","desc":"Event details","definition":{"evt":{"type":"Object","desc":"Original JS event Object"},"touch":{"type":"Boolean","desc":"Triggered by a touch event"},"mouse":{"type":"Boolean","desc":"Triggered by a mouse event"},"position":{"type":"Object","desc":"Event Position Object","definition":{"top":{"type":"Number","desc":"Vertical offset from top of window","examples":[235]},"left":{"type":"Number","desc":"Horizontal offset from left of window","examples":[235]}}},"duration":{"type":"Number","desc":"How long it took to trigger the event (in milliseconds)","examples":[612]}}}},"returns":null,"examples":["v-touch-hold=\\"fnToCall\\"","v-touch-hold=\\"void 0\\""]},"arg":{"type":"String","desc":"x:y:z, where x is the amount of time to wait (in milliseconds), y is the touch event sensitivity (in pixels) and z is the mouse event sensitivity (in pixels)","default":"600:5:7","examples":["v-touch-hold:400=\\"fnToCall\\"","v-touch-hold:400:15=\\"fnToCall\\"","v-touch-hold:400:10:10=\\"fnToCall\\""]},"modifiers":{"capture":{"type":"Boolean","desc":"Use capture for touchstart event"},"mouse":{"type":"Boolean","desc":"Listen for mouse events too"},"mouseCapture":{"type":"Boolean","desc":"Use capture for mousedown event"}}}')},aa3c:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/toggle"},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style","addedIn":"v1.8.0"},"value":{"desc":"Model of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model","required":true,"type":["Any","Array"],"examples":["false","[\'car\', \'building\']"]},"val":{"type":"Any","desc":"Works when model (\'value\') is Array. It tells the component which value should add/remove when ticked/unticked","examples":["car"],"category":"model"},"true-value":{"type":"Any","desc":"What model value should be considered as checked/ticked/on?","default":true,"examples":["Agreed"],"category":"model"},"false-value":{"type":"Any","desc":"What model value should be considered as unchecked/unticked/off?","default":false,"examples":["Disagree"],"category":"model"},"indeterminate-value":{"type":"Any","desc":"What model value should be considered as \'indeterminate\'?","default":null,"examples":[0,"not_answered"],"category":"behavior","addedIn":"v1.8.0"},"toggle-order":{"type":"String","desc":"Determines toggle order of the two states (\'t\' stands for state of true, \'f\' for state of false); If \'toggle-indeterminate\' is true, then the order is: indet -> first state -> second state -> indet (and repeat), otherwise: indet -> first state -> second state -> first state -> second state -> ...","default":"tf","values":["tf","ft"],"category":"behavior","addedIn":"v1.12.0"},"toggle-indeterminate":{"type":"Boolean","desc":"When user clicks/taps on the component, should we toggle through the indeterminate state too?","category":"behavior","addedIn":"v1.8.0"},"label":{"type":"String","desc":"Label to display along the component (or use the default slot instead of this prop)","examples":["I agree with the Terms and Conditions"],"category":"label"},"left-label":{"type":"Boolean","desc":"Label (if any specified) should be displayed on the left side of the component","category":"label"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"keep-color":{"type":"Boolean","desc":"Should the color (if specified any) be kept when the component is unticked/ off?","category":"behavior"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"checked-icon":{"type":"String","desc":"The icon to be used when the toggle is on","examples":["visibility"],"category":"content"},"unchecked-icon":{"type":"String","desc":"The icon to be used when the toggle is off","examples":["visibility_off"],"category":"content"},"indeterminate-icon":{"type":"String","desc":"The icon to be used when the model is indeterminate","examples":["help"],"category":"content","addedIn":"v1.8.0"},"icon-color":{"type":"String","desc":"Override default icon color (for truthy state only); Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.8.0"}},"slots":{"default":{"desc":"Default slot can be used as label, unless \'label\' prop is specified; Suggestion: string"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true},"evt":{"type":"Object","desc":"JS event object","required":true,"addedIn":"v1.11.2"}}}},"methods":{"toggle":{"desc":"Toggle the state (of the model)"}}}')},abdf:function(e){e.exports=JSON.parse('{"type":"directive","meta":{"docsUrl":"https://v1.quasar.dev/vue-directives/mutation"},"addedIn":"v1.3.0","value":{"type":["Function"],"desc":"Function to call when mutation occurs; It is HIGHLY recommended to reference it from your vue component scope, otherwise the directive update cycle will continuously recreate the observer which hits performance hard","examples":["v-intersection=\\"myHandler\\""],"returns":{"type":"Boolean","desc":"If you return Boolean false from the handler, the observer stops"},"params":{"mutationList":{"type":"Array","desc":"Array of MutationRecord items","definition":{"type":{"type":"String","desc":"Type of mutation","values":["childList","attributes","characterData"]},"target":{"type":"Object","desc":"The DOM element that the mutation affected, depending on the mutation type"},"addedNodes":{"type":"Array","desc":"The NodeList of the nodes that have been added"},"removedNodes":{"type":"Array","desc":"The NodeList of the nodes that have been removed"},"previousSibling":{"type":"Object","desc":"The previous sibling of the added or removed nodes, or null"},"nextSibling":{"type":"Object","desc":"The next sibling of the added or removed nodes, or null"},"attributeName":{"type":"String","desc":"The local name of the changed attribute, or null","examples":["some-attribute"]},"attributeNamespace":{"type":"String","desc":"The namespace of the changed attribute, or null"},"oldValue":{"type":"String","desc":"Value depends on the mutation type; For attributes, it is the value of the changed attribute before the change; For characterData it is data of the changed node before the change; For childList it is null; Note that for this to work as expected, attributeOldValue or characterDataOldValue must be set"}}}}},"modifiers":{"once":{"type":"Boolean","desc":"Call handler only once, when the first mutation was triggered, then stop monitoring","reactive":true,"examples":["v-mutation.once"]},"childList":{"type":"Boolean","desc":"Monitor the target node (and, if \'subtree\' is also set, its descendants) for the addition of new child nodes or removal of existing child nodes","reactive":true,"examples":["v-mutation.childList"]},"subtree":{"type":"Boolean","desc":"Extend monitoring to the entire subtree of nodes rooted at target","reactive":true,"examples":["v-mutation.subtree"]},"attributes":{"type":"Boolean","desc":"Watch for changes to the value of attributes on the node or nodes being monitored","reactive":true,"examples":["v-mutation.attributes"]},"characterData":{"type":"Boolean","desc":"Monitor the specified target node or subtree for changes to the character data contained within the node or nodes","reactive":true,"examples":["v-mutation.characterData"]},"attributeOldValue":{"type":"Boolean","desc":"Record the previous value of any attribute that changes when monitoring the node or nodes for attribute changes","reactive":true,"examples":["v-mutation.attributeOldValue"]},"characterDataOldValue":{"type":"Boolean","desc":"Record the previous value of a node\'s text whenever the text changes on nodes being monitored","reactive":true,"examples":["v-mutation.characterDataOldValue"]}}}')},ac6e:function(e){e.exports=JSON.parse('{"type":"directive","meta":{"docsUrl":"https://v1.quasar.dev/vue-directives/go-back"},"value":{"type":["String","Object"],"desc":"Equivalent to Vue Router <router-link> \'to\' property","examples":["/home/dashboard","{ name: \'my-route-name\' }"]},"modifiers":{"single":{"type":"Boolean","desc":"Go back to previous route instead of the whole way to before directive was initialized","reactive":true,"examples":["v-go-back.single"]}}}')},acad:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/option-group"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style","addedIn":"v1.8.0"},"value":{"desc":"Model of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model","type":"Any","examples":["v-model=\\"group\\""]},"options":{"type":"Array","desc":"Array of objects with value and label props. The binary components will be created according to this array; Props from QToggle, QCheckbox or QRadio can also be added as key/value pairs to control the components singularly","examples":[":options=\\"[ { label: \'Option 1\', value: \'op1\' }, { label: \'Option 2\', value: \'op2\' }, { label: \'Option 3\', value: \'op3\', disable: true } ]\\""],"category":"model"},"name":{"type":"String","desc":"Used to specify the name of the controls; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"type":{"type":"String","desc":"The type of input component to be used","values":["radio","checkbox","toggle"],"default":"radio","examples":["checkbox"],"category":"content"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"keep-color":{"type":"Boolean","desc":"Should the color (if specified any) be kept when input components are unticked?","category":"behavior"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"left-label":{"type":"Boolean","desc":"Label (if any specified) should be displayed on the left side of the input components","category":"content"},"inline":{"type":"Boolean","desc":"Show input components as inline-block rather than each having their own row","category":"content"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true}}}}}')},ad00:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/carousel"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"name":{"type":"Any","desc":"Slide name","required":true,"examples":["accounts","firstPanel",":name=\\"1\\"","accounts","firstSlide",":name=\\"1\\""],"category":"model"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"img-src":{"type":"String","desc":"URL pointing to a slide background image (use statics folder)","transformAssetUrls":true,"examples":["(statics folder) src=\\"statics/img/my-bg.png\\"","(assets folder) src=\\"~assets/my-img.png\\"","(relative path format) :src=\\"require(\'./my_img.jpg\')\\"","(URL) src=\\"https://placeimg.com/500/300/nature\\""],"category":"model"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},b238:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/markup-table"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"flat":{"type":"Boolean","desc":"Applies a \'flat\' design (no default shadow)","category":"style"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style"},"square":{"type":"Boolean","desc":"Removes border-radius so borders are squared","category":"style"},"separator":{"type":"String","desc":"Use a separator/border between rows, columns or all cells","default":"horizontal","values":["horizontal","vertical","cell","none"],"examples":["cell"],"category":"content"},"wrap-cells":{"type":"Boolean","desc":"Wrap text within table cells","category":"content"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},b2f2:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},b64e:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/slider"},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"value":{"type":"Number","desc":"Model of the component (must be between min/max); Either use this property (along with a listener for \'input\' event) OR use v-model directive","examples":["v-model=\\"positionModel\\""],"category":"model"},"min":{"type":"Number","desc":"Minimum value of the model","default":0,"examples":[":min=\\"0\\""],"category":"model"},"max":{"type":"Number","desc":"Maximum value of the model","default":100,"examples":[":max=\\"100\\""],"category":"model"},"step":{"type":"Number","desc":"Specify step amount between valid values (> 0.0); When step equals to 0 it defines infinite granularity","default":1,"examples":[":step=\\"1\\""],"category":"model"},"reverse":{"type":"Boolean","desc":"Work in reverse (changes direction)","category":"behavior","addedIn":"v1.5.0"},"vertical":{"type":"Boolean","desc":"Display in vertical direction","category":"behavior","addedIn":"v1.10.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"label":{"type":"Boolean","desc":"Popup a label when user clicks/taps on the slider thumb and moves it","category":"content"},"label-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"label-text-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.1.0"},"label-value":{"type":["String","Number"],"desc":"Override default label value","examples":[":label-value=\\"model + \'px\'\\""],"category":"content"},"label-always":{"type":"Boolean","desc":"Always display the label","category":"behavior|content"},"markers":{"type":"Boolean","desc":"Display markers on the track, one for each possible value for the model","category":"content"},"snap":{"type":"Boolean","desc":"Snap on valid values, rather than sliding freely; Suggestion: use with \'step\' prop","category":"behavior"},"thumb-path":{"type":"String","desc":"Set custom thumb svg path","default":"M 4, 10 a 6,6 0 1,0 12,0 a 6,6 0 1,0 -12,0","examples":["M5 5 h10 v10 h-10 v-10"],"category":"style","addedIn":"v1.5.10"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true}}},"change":{"desc":"Emitted on lazy model value change (after user slides then releases the thumb)","params":{"value":{"type":"Any","desc":"New model value","required":true}}}}}')},b68a:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/button-group"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"spread":{"type":"Boolean","desc":"Spread horizontally to all available space","category":"content"},"outline":{"type":"Boolean","desc":"Use \'outline\' design for buttons","category":"style"},"flat":{"type":"Boolean","desc":"Use \'flat\' design for buttons","category":"style"},"unelevated":{"type":"Boolean","desc":"Remove shadow on buttons","category":"style"},"rounded":{"type":"Boolean","desc":"Applies a more prominent border-radius for squared shape buttons","category":"style"},"push":{"type":"Boolean","desc":"Use \'push\' design for buttons","category":"style"},"stretch":{"type":"Boolean","desc":"When used on flexbox parent, buttons will stretch to parent\'s height","category":"content"},"glossy":{"type":"Boolean","desc":"Applies a glossy effect","category":"style"}},"slots":{"default":{"desc":"Suggestion: QBtn"}}}')},b6f0:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/file"},"addedIn":"v1.8.0","props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms; If not specified, it takes the value of \'for\' prop, if it exists","examples":["car_id","car_id"],"category":"behavior","addedIn":"v1.9.0"},"multiple":{"type":"Boolean","desc":"Allow multiple file uploads","category":"behavior"},"accept":{"type":"String","desc":"Comma separated list of unique file type specifiers. Maps to \'accept\' attribute of native input type=file element","examples":[".jpg, .pdf, image/*","image/jpeg, .pdf"],"category":"behavior"},"capture":{"type":"String","desc":"Optionally, specify that a new file should be captured, and which device should be used to capture that new media of a type defined by the \'accept\' prop. Maps to \'capture\' attribute of native input type=file element","values":["user","environment"],"category":"behavior","addedIn":"v1.12.6"},"max-file-size":{"type":["Number","String"],"desc":"Maximum size of individual file in bytes","examples":[1024,1048576],"category":"behavior"},"max-total-size":{"type":["Number","String"],"desc":"Maximum size of all files combined in bytes","examples":[1024,1048576],"category":"behavior"},"max-files":{"type":["Number","String"],"desc":"Maximum number of files to contain","examples":[":max-files=\\"5\\"","10"],"category":"behavior"},"filter":{"type":"Function","desc":"Custom filter for added files; Only files that pass this filter will be added to the queue and uploaded; For best performance, reference it from your scope and do not define it inline","params":{"files":{"type":["FileList","Array"],"desc":"Candidate files to be added to queue"}},"returns":{"type":"Array","desc":"Filtered files to be added to queue"},"examples":[":filter=\\"files => files.filter(file => file.size === 1024)\\""],"category":"behavior"},"error":{"type":"Boolean","desc":"Does field have validation errors?","category":"behavior"},"error-message":{"type":"String","desc":"Validation error message (gets displayed only if \'error\' is set to \'true\')","examples":["Username must have at least 5 characters"],"category":"content"},"no-error-icon":{"type":"Boolean","desc":"Hide error icon when there is an error","category":"content"},"rules":{"type":"Array","desc":"Array of Functions/Strings; If String, then it must be a name of one of the embedded validation rules","examples":[":rules=\\"[ val => val.length <= 3 || \'Please use maximum 3 characters\' ]\\"",":rules=\\"[ \'fulltime\' ]\\""],"category":"behavior"},"reactive-rules":{"type":"Boolean","desc":"By default a change in the rules does not trigger a new validation until the model changes; If set to true then a change in the rules will trigger a validation; Has a performance penalty, so use it only when you really need it","category":"behavior","addedIn":"v1.11.0"},"lazy-rules":{"type":["Boolean","String"],"desc":"If set to boolean true then it checks validation status against the \'rules\' only after field loses focus for first time; If set to \'ondemand\' then it will trigger only when component\'s validate() method is manually called or when the wrapper QForm submits itself","values":["(Boolean) true","(Boolean) false","ondemand"],"category":"behavior"},"label":{"type":"String","desc":"A text label that will “float” up above the input field, once the field gets focus","examples":["Username"],"category":"content"},"stack-label":{"type":"Boolean","desc":"Label will be always shown above the field regardless of field content (if any)","category":"content"},"hint":{"type":"String","desc":"Helper (hint) text which gets placed below your wrapped form component","examples":["Fill in between 3 and 12 characters"],"category":"content"},"hide-hint":{"type":"Boolean","desc":"Hide the helper (hint) text when field doesn\'t have focus","category":"content"},"prefix":{"type":"String","desc":"Prefix","examples":["$"],"category":"content"},"suffix":{"type":"String","desc":"Suffix","examples":["@gmail.com"],"category":"content"},"label-color":{"type":"String","desc":"Color name for the label from the Quasar Color Palette; Overrides the \'color\' prop; The difference from \'color\' prop is that the label will always have this color, even when field is not focused","examples":["primary","teal-10"],"category":"style","addedIn":"v1.7.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"bg-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"loading":{"type":"Boolean","desc":"Signals the user a process is in progress by displaying a spinner; Spinner can be customized by using the \'loading\' slot.","category":"behavior|content"},"clearable":{"type":"Boolean","desc":"Appends clearable icon when a value (not undefined or null) is set; When clicked, model becomes null","category":"behavior|content"},"clear-icon":{"type":"String","desc":"Custom icon to use for the clear button when using along with \'clearable\' prop","examples":["close"],"category":"content"},"filled":{"type":"Boolean","desc":"Use \'filled\' design for the field","category":"style"},"outlined":{"type":"Boolean","desc":"Use \'outlined\' design for the field","category":"style"},"borderless":{"type":"Boolean","desc":"Use \'borderless\' design for the field","category":"style"},"standout":{"type":["Boolean","String"],"desc":"Use \'standout\' design for the field; Specifies classes to be applied when focused (overriding default ones)","examples":["standout","standout=\\"bg-primary text-white\\""],"category":"style"},"label-slot":{"type":"Boolean","desc":"Enables label slot; You need to set it to force use of the \'label\' slot if the \'label\' prop is not set","category":"content","addedIn":"v1.12.9"},"bottom-slots":{"type":"Boolean","desc":"Enables bottom slots (\'error\', \'hint\', \'counter\')","category":"content"},"hide-bottom-space":{"type":"Boolean","desc":"Do not reserve space for hint/error/counter anymore when these are not used; As a result, it also disables the animation for those; It also allows the hint/error area to stretch vertically based on its content","category":"style"},"counter":{"type":"Boolean","desc":"Show an automatic counter on bottom right","category":"content"},"rounded":{"type":"Boolean","desc":"Applies a small standard border-radius for a squared shape of the component","category":"style"},"square":{"type":"Boolean","desc":"Remove border-radius so borders are squared; Overrides \'rounded\' prop","category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"item-aligned":{"type":"Boolean","desc":"Match inner content alignment to that of QItem","category":"style"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"autofocus":{"type":"Boolean","desc":"Focus field on initial component render","category":"behavior"},"for":{"type":"String","desc":"Used to specify the \'id\' of the control and also the \'for\' attribute of the label that wraps it; If no \'name\' prop is specified, then it is used for this attribute as well","examples":["myFieldsId"],"category":"behavior","addedIn":"v1.4.2"},"value":{"type":["File","FileList","Array"],"desc":"Model of the component; Must be FileList or Array if using \'multiple\' prop; Either use this property (along with a listener for \'input\' event) OR use v-model directive","required":true,"examples":["v-model=\\"myModel\\""],"category":"model"},"append":{"type":"Boolean","desc":"Append file(s) to current model rather than replacing them; Has effect only when using \'multiple\' mode","category":"behavior","addedIn":"v1.11.3"},"display-value":{"type":["Number","String"],"desc":"Override default selection string, if not using \'file\' or \'selected\' scoped slots and if not using \'use-chips\' prop","examples":["Options: x, y, z"],"category":"selection"},"use-chips":{"type":"Boolean","desc":"Use QChip to show picked files","category":"selection"},"counter-label":{"type":"Function","desc":"Label for the counter; The \'counter\' prop is necessary to enable this one","params":{"props":{"type":"Object","desc":"Object containing counter label information","definition":{"totalSize":{"type":"String","desc":"The total size of files in human readable format","examples":["1.42MB"]},"filesNumber":{"type":"Number","desc":"Number of picked files","examples":[5]},"maxFiles":{"type":["Number","String"],"desc":"Maximum number of files (same as \'max-files\' prop, if specified); When \'max-files\' is not specified, this has \'void 0\' as value","examples":[5]}}}},"returns":{"type":"String","desc":"String to display for the counter label"},"examples":[":counter-label=\\"counterLabelFn\\""],"category":"behavior"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"},"input-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the underlying selection container","examples":["my-special-class",":input-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"input-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the underlying selection container","examples":["background-color: #ff0000",":input-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style"}},"slots":{"default":{"desc":"Field main content"},"prepend":{"desc":"Prepend inner field; Suggestions: QIcon, QBtn"},"append":{"desc":"Append to inner field; Suggestions: QIcon, QBtn"},"before":{"desc":"Prepend outer field; Suggestions: QIcon, QBtn"},"after":{"desc":"Append outer field; Suggestions: QIcon, QBtn"},"label":{"desc":"Slot for label; Used only if \'label-slot\' prop is set or the \'label\' prop is set; When it is used the text in the \'label\' prop is ignored","addedIn":"v1.12.9"},"error":{"desc":"Slot for errors; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"hint":{"desc":"Slot for hint text; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"counter":{"desc":"Slot for counter text; Enabled only if \'bottom-slots\' prop is used; Suggestion: <div>"},"loading":{"desc":"Override default spinner when component is in loading mode; Use in conjunction with \'loading\' prop"}},"scopedSlots":{"file":{"desc":"Override default node to render a file from the user picked list","scope":{"index":{"type":"Number","desc":"Selection index","examples":[0]},"file":{"type":"File","desc":"File object"},"ref":{"type":"Object","desc":"Reference to the QFile component"}}},"selected":{"desc":"Override default selection slot; Suggestion: QChip","scope":{"files":{"type":["FileList","Array"],"desc":"Array of File objects"},"ref":{"type":"Object","desc":"Reference to the QFile component"}}}},"events":{"rejected":{"desc":"Emitted after files are picked and some do not pass the validation props (accept, max-file-size, max-total-size, filter, etc)","params":{"rejectedEntries":{"type":"Array","desc":"Array of { failedPropValidation: string, file: File } Objects for files that do not pass the validation"}},"addedIn":"v1.11.2"},"clear":{"desc":"When using the \'clearable\' property, this event is emitted when the clear icon is clicked","addedIn":"v1.1.5","params":{"value":{"type":["Any"],"desc":"The previous value before clearing it"}}},"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true}}}},"methods":{"pickFiles":{"desc":"Trigger file pick; Must be called as a direct consequence of user interaction (eg. in a click handler), due to browsers security policy","params":{"evt":{"type":"Object","desc":"JS event object"}}},"addFiles":{"desc":"Add files programmatically","params":{"files":{"type":["FileList","Array"],"desc":"Array of files (instances of File)","required":true}}},"resetValidation":{"desc":"Reset validation status"},"validate":{"desc":"Trigger a validation","params":{"value":{"type":"Any","desc":"Optional value to validate against"}},"returns":{"type":["Boolean","Promise<boolean>"],"desc":"True/false if no async rules, otherwise a Promise with the outcome (true -> validation was a success, false -> invalid models detected)","examples":["true","validate().then(outcome => { ... })"]}},"focus":{"desc":"Focus component"},"blur":{"desc":"Blur component (lose focus)"},"removeAtIndex":{"desc":"Remove file located at specific index in the model","params":{"index":{"type":"Number","desc":"Index at which to remove selection","required":true,"examples":[0]}}},"removeFile":{"desc":"Remove specified file from the model","params":{"file":{"type":"File","desc":"File to remove (instance of File)","required":true}}}}}')},b704:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/linear-progress"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"value":{"type":"Number","desc":"Progress value (0.0 < x < 1.0)","default":0,"examples":[":value=\\"0.28\\""],"category":"model"},"buffer":{"type":"Number","desc":"Optional buffer value (0.0 < x < 1.0)","examples":[":buffer=\\"0.78\\""],"category":"behavior"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"track-color":{"type":"String","desc":"Color name for component\'s track from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"reverse":{"type":"Boolean","desc":"Reverse direction of progress","category":"behavior"},"stripe":{"type":"Boolean","desc":"Draw stripes; For determinate state only (for performance reasons)","category":"content"},"indeterminate":{"type":"Boolean","desc":"Put component into indeterminate mode","category":"behavior"},"query":{"type":"Boolean","desc":"Put component into query mode","category":"behavior"},"rounded":{"type":"Boolean","desc":"Applies a small standard border-radius for a squared shape of the component","category":"style"},"instant-feedback":{"type":"Boolean","desc":"No transition when model changes","category":"behavior","addedIn":"v1.11.2"}},"slots":{"default":{"desc":"Suggestion: QTooltip"}}}')},b7cd:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/list-and-list-items"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"tag":{"type":"String","desc":"HTML tag to render; Suggestion: use \'label\' when encapsulating a QCheckbox/QRadio/QToggle so that when user clicks/taps on the whole item it will trigger a model change for the mentioned components","default":"div","category":"content","examples":["a","label","div"]},"to":{"type":["String","Object"],"desc":"Equivalent to Vue Router <router-link> \'to\' property","examples":["/home/dashboard",":to=\\"{ name: \'my-route-name\' }\\""],"category":"behavior"},"exact":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'exact\' property","category":"behavior"},"append":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'append\' property","category":"behavior"},"replace":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'replace\' property","category":"behavior"},"active-class":{"type":"String","desc":"Equivalent to Vue Router <router-link> \'active-class\' property","examples":["my-active-class"],"category":"behavior"},"exact-active-class":{"type":"String","desc":"Equivalent to Vue Router <router-link> \'active-class\' property","examples":["my-exact-active-class"],"category":"behavior"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"active":{"type":"Boolean","desc":"Put item into \'active\' state","category":"state"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"clickable":{"type":"Boolean","desc":"Is QItem clickable? If it\'s the case, then it will add hover effects and emit \'click\' events","category":"state"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"inset-level":{"type":"Number","desc":"Apply an inset; Useful when avatar/left side is missing but you want to align content with other items that do have a left side, or when you\'re building a menu","examples":[":inset-level=\\"1\\""],"category":"content"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"},"manual-focus":{"type":"Boolean","desc":"Put item into a manual focus state; Enables \'focused\' prop which will determine if item is focused or not, rather than relying on native hover/focus states","category":"state"},"focused":{"type":"Boolean","desc":"Determines focus state, ONLY if \'manual-focus\' is enabled / set to true","category":"state"}},"slots":{"default":{"desc":"This is where QItem\'s content goes"}}}')},b9cd:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/button-dropdown"},"props":{"value":{"type":"Boolean","desc":"Controls Menu show/hidden state; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model","examples":["v-model=\\"menuState\\""]},"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"ripple":{"type":["Boolean","Object"],"desc":"Configure material ripple (disable it by setting it to \'false\' or supply a config object)","default":true,"examples":[false,"{ early: true, center: true, color: \'teal\', keyCodes: [] }"],"category":"style"},"type":{"type":"String","desc":"Define the button HTML DOM type","default":"button","values":["a","submit","button","reset"],"examples":["type=\\"a\\" href=\\"http://some-site.net\\" target=\\"__blank\\""],"category":"general"},"to":{"type":["String","Object"],"desc":"Equivalent to Vue Router <router-link> \'to\' property","examples":["/home/dashboard",":to=\\"{ name: \'my-route-name\' }\\""],"category":"router"},"replace":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'replace\' property","category":"router"},"label":{"type":["String","Number"],"desc":"The text that will be shown on the button","examples":["Button Label"],"category":"content"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"icon-right":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"outline":{"type":"Boolean","desc":"Use \'outline\' design","category":"style"},"flat":{"type":"Boolean","desc":"Use \'flat\' design","category":"style"},"unelevated":{"type":"Boolean","desc":"Remove shadow","category":"style"},"rounded":{"type":"Boolean","desc":"Applies a more prominent border-radius for a squared shape button","category":"style"},"push":{"type":"Boolean","desc":"Use \'push\' design","category":"style"},"glossy":{"type":"Boolean","desc":"Applies a glossy effect","category":"style"},"fab":{"type":"Boolean","desc":"Makes button size and shape to fit a Floating Action Button","category":"style"},"fab-mini":{"type":"Boolean","desc":"Makes button size and shape to fit a small Floating Action Button","category":"style"},"padding":{"type":"String","desc":"Apply custom padding (vertical [horizontal]); Size in CSS units, including unit name or standard size name (none|xs|sm|md|lg|xl); Also removes the min width and height when set","examples":["16px","10px 5px","2rem","xs","md lg","2px 2px 5px 7px"],"category":"style","addedIn":"v1.11.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"no-caps":{"type":"Boolean","desc":"Avoid turning label text into caps (which happens by default)","category":"content"},"no-wrap":{"type":"Boolean","desc":"Avoid label text wrapping","category":"content"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"},"align":{"type":"String","desc":"Label or content alignment","default":"center","values":["left","right","center","around","between","evenly"],"category":"content"},"stack":{"type":"Boolean","desc":"Stack icon and label vertically instead of on same line (like it is by default)","category":"content"},"stretch":{"type":"Boolean","desc":"When used on flexbox parent, button will stretch to parent\'s height","category":"content"},"loading":{"type":"Boolean","desc":"Put button into loading state (displays a QSpinner -- can be overridden by using a \'loading\' slot)","category":"behavior|state"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"split":{"type":"Boolean","desc":"Split dropdown icon into its own button","category":"content|behavior"},"dropdown-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content","addedIn":"v1.1.6"},"disable-main-btn":{"type":"Boolean","desc":"Disable main button (useful along with \'split\' prop)","category":"behavior"},"disable-dropdown":{"type":"Boolean","desc":"Disables dropdown (dropdown button if using along \'split\' prop)","category":"behavior"},"no-icon-animation":{"type":"Boolean","desc":"Disables the rotation of the dropdown icon when state is toggled","category":"style","addedIn":"v1.12.0"},"content-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the menu","examples":["background-color: #ff0000",":content-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style"},"content-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the menu","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"cover":{"type":"Boolean","desc":"Allows the menu to cover the button. When used, the \'menu-self\' and \'menu-fit\' props are no longer effective","category":"position"},"persistent":{"type":"Boolean","desc":"Allows the menu to not be dismissed by a click/tap outside of the menu or by hitting the ESC key","category":"behavior"},"auto-close":{"type":"Boolean","desc":"Allows any click/tap in the menu to close it; Useful instead of attaching events to each menu item that should close the menu on click/tap","category":"behavior"},"menu-anchor":{"type":"String","desc":"Two values setting the starting position or anchor point of the menu relative to its target","values":["top left","top middle","top right","center left","center middle","center right","bottom left","bottom center","bottom right"],"default":"bottom right","examples":["top left","bottom right"],"category":"position"},"menu-self":{"type":"String","desc":"Two values setting the menu\'s own position relative to its target","values":["top left","top middle","top right","center left","center middle","center right","bottom left","bottom center","bottom right"],"default":"top right","examples":["top left","bottom right"],"category":"position"},"menu-offset":{"type":"Array","desc":"An array of two numbers to offset the menu horizontally and vertically in pixels","examples":["[8, 8]","[5, 10]"],"category":"position","addedIn":"v1.9.2"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"},"label":{"desc":"Customize main button\'s content through this slot, unless you\'re using the \'icon\' and \'label\' props"}},"events":{"input":{"desc":"Emitted when showing/hidden state changes; Is also used by v-model","params":{"value":{"type":"Boolean","desc":"New state (showing/hidden)"}}},"show":{"desc":"Emitted after component has triggered show()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-show":{"desc":"Emitted when component triggers show() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"hide":{"desc":"Emitted after component has triggered hide()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-hide":{"desc":"Emitted when component triggers hide() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"click":{"desc":"Emitted when user clicks/taps on the main button (not the icon one, if using \'split\')","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}}},"methods":{"show":{"desc":"Triggers component to show","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"hide":{"desc":"Triggers component to hide","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"toggle":{"params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}},"desc":"Triggers component to toggle between show/hide"}}}')},bf27:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/popup-proxy"},"props":{"target":{"type":["Boolean","String","Element"],"desc":"Configure a target element to trigger component toggle; \'true\' means it enables the parent DOM element, \'false\' means it disables attaching events to any DOM elements; By using a String (CSS selector) or a DOM element it attaches the events to the specified DOM element (if it exists)","default":true,"values":["(Boolean) true","(Boolean) false","(CSS selector)","(DOM Element)"],"examples":[":target=\\"false\\"",":target=\\"$refs.target\\"","target=\\".my-parent\\"","target=\\"#target-id\\""],"category":"behavior"},"no-parent-event":{"type":"Boolean","desc":"Skips attaching events to the target DOM element (that trigger the element to get shown)","category":"behavior"},"context-menu":{"type":"Boolean","desc":"Allows the component to behave like a context menu, which opens with a right mouse click (or long tap on mobile)","category":"behavior"},"value":{"type":"Boolean","desc":"Defines the state of the component (shown/hidden); Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model"},"breakpoint":{"type":["Number","String"],"desc":"Breakpoint (in pixels) of window width/height (whichever is smaller) from where a Menu will get to be used instead of a Dialog","default":450,"examples":[992,":breakpoint=\\"1024\\""],"category":"behavior"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true}}},"before-show":{"desc":"Emitted when component triggers show() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"show":{"desc":"Emitted after component has triggered show()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-hide":{"desc":"Emitted when component triggers hide() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"hide":{"desc":"Emitted after component has triggered hide()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}}},"methods":{"show":{"desc":"Triggers component to show","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"hide":{"desc":"Triggers component to hide","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"toggle":{"params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}},"desc":"Triggers component to toggle between show/hide"}}}')},bf8b:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/chip"},"props":{"ripple":{"type":["Boolean","Object"],"desc":"Configure material ripple (disable it by setting it to \'false\' or supply a config object)","default":true,"examples":[false,"{ early: true, center: true, color: \'teal\', keyCodes: [] }"],"category":"style"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"size":{"type":"String","desc":"QChip size name or a CSS unit including unit name","examples":["xs","sm","md","lg","xl","25px","2rem"],"category":"style","addedIn":"v1.2.2"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style","addedIn":"v1.3.0"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"icon-right":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"icon-remove":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"label":{"type":["String","Number"],"desc":"Chip\'s content as string; overrides default slot if specified","examples":["John Doe","Book"],"category":"content"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"value":{"type":"Boolean","desc":"Model of the component determining if QChip should be rendered or not","default":true,"category":"model"},"selected":{"type":"Boolean","sync":true,"desc":"Model for QChip if it\'s selected or not","category":"model"},"square":{"type":"Boolean","desc":"Sets a low value for border-radius instead of the default one, making it close to a square","category":"style"},"outline":{"type":"Boolean","desc":"Display using the \'outline\' design","category":"style"},"clickable":{"type":"Boolean","desc":"Is QChip clickable? If it\'s the case, then it will add hover effects and emit \'click\' events","category":"state"},"removable":{"type":"Boolean","desc":"If set, then it displays a \'remove\' icon that when clicked the QChip emits \'remove\' event","category":"state"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"}},"slots":{"default":{"desc":"This is where QChip content goes, if not using \'label\' property"}},"events":{"click":{"desc":"Emitted on QChip click if \'clickable\' property is set","params":{"evt":{"type":"Object","desc":"JS event object"}}},"update:selected":{"desc":"Used by Vue on \'selected.sync\' prop for updating its value","params":{"state":{"type":"Boolean","desc":"Selected state"}}},"remove":{"desc":"Works along with \'value\' and \'removable\' prop. Emitted when toggling rendering state of the QChip","params":{"state":{"type":"Boolean","desc":"Render state (render or not)"}}}}}')},bf90:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/uploader"},"props":{"multiple":{"type":"Boolean","desc":"Allow multiple file uploads","category":"behavior"},"accept":{"type":"String","desc":"Comma separated list of unique file type specifiers. Maps to \'accept\' attribute of native input type=file element","examples":[".jpg, .pdf, image/*","image/jpeg, .pdf"],"category":"behavior"},"capture":{"type":"String","desc":"Optionally, specify that a new file should be captured, and which device should be used to capture that new media of a type defined by the \'accept\' prop. Maps to \'capture\' attribute of native input type=file element","values":["user","environment"],"category":"behavior","addedIn":"v1.12.6"},"max-file-size":{"type":["Number","String"],"desc":"Maximum size of individual file in bytes","examples":[1024,1048576],"category":"behavior"},"max-total-size":{"type":["Number","String"],"desc":"Maximum size of all files combined in bytes","examples":[1024,1048576],"category":"behavior"},"max-files":{"type":["Number","String"],"desc":"Maximum number of files to contain","examples":[":max-files=\\"5\\"","10"],"category":"behavior","addedIn":"v1.11.2"},"filter":{"type":"Function","desc":"Custom filter for added files; Only files that pass this filter will be added to the queue and uploaded; For best performance, reference it from your scope and do not define it inline","params":{"files":{"type":["FileList","Array"],"desc":"Candidate files to be added to queue"}},"returns":{"type":"Array","desc":"Filtered files to be added to queue"},"examples":[":filter=\\"files => files.filter(file => file.size === 1024)\\""],"category":"behavior"},"label":{"type":"String","desc":"Label for the uploader","examples":["Upload photo here"],"category":"content"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"square":{"type":"Boolean","desc":"Removes border-radius so borders are squared","category":"style"},"flat":{"type":"Boolean","desc":"Applies a \'flat\' design (no default shadow)","category":"style"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style"},"no-thumbnails":{"type":"Boolean","desc":"Don\'t display thumbnails for image files","category":"content"},"auto-upload":{"type":"Boolean","desc":"Upload files immediately when added","category":"behavior"},"hide-upload-btn":{"type":"Boolean","desc":"Don\'t show the upload button","category":"behavior"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"}},"scopedSlots":{"header":{"desc":"Slot for custom header; Scope is the QUploader instance itself"},"list":{"desc":"Slot for custom list; Scope is the QUploader instance itself"}},"events":{"rejected":{"desc":"Emitted after files are picked and some do not pass the validation props (accept, max-file-size, max-total-size, filter, etc)","params":{"rejectedEntries":{"type":"Array","desc":"Array of { failedPropValidation: string, file: File } Objects for files that do not pass the validation"}},"addedIn":"v1.11.2"},"added":{"desc":"Emitted when files are added into the list","params":{"files":{"type":"Array","desc":"Array of files that were added"}}},"removed":{"desc":"Emitted when files are removed from the list","params":{"files":{"type":"Array","desc":"Array of files that were removed"}}},"start":{"desc":"Started working"},"finish":{"desc":"Finished working (regardless of success or fail)"}},"methods":{"pickFiles":{"desc":"Trigger file pick; Must be called as a direct consequence of user interaction (eg. in a click handler), due to browsers security policy","params":{"evt":{"type":"Object","desc":"JS event object"}}},"addFiles":{"desc":"Add files programmatically","params":{"files":{"type":["FileList","Array"],"desc":"Array of files (instances of File)","required":true}}},"reset":{"desc":"Resets uploader to default; Empties queue, aborts current uploads"},"removeUploadedFiles":{"desc":"Removes already uploaded files from the list"},"removeQueuedFiles":{"desc":"Remove files that are waiting for upload to start (same as clicking the left clear button)"},"removeFile":{"desc":"Remove specified file from the queue","params":{"file":{"type":"Object","desc":"File to remove (instance of File)","required":true}}}}}')},c03a:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/loading"},"injection":"$q.loading","quasarConfOptions":{"propName":"loading","definition":{"delay":{"type":"Number","desc":"Wait a number of millisecond before showing; Not worth showing for 100ms for example then hiding it, so wait until you\'re sure it\'s a process that will take some considerable amount of time","examples":[400]},"message":{"type":"String","desc":"Message to display","examples":["Processing your request"]},"sanitize":{"type":"Boolean","default":"false","desc":"Force use of textContent instead of innerHTML to render message; Use it when the message might be unsafe (from user input)","category":"behavior"},"spinnerSize":{"type":"Number","desc":"Spinner size (in pixels)","examples":[60]},"spinnerColor":{"type":"String","desc":"Color name for spinner from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"messageColor":{"type":"String","desc":"Color name for text from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"backgroundColor":{"type":"String","desc":"Color name for background from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"spinner":{"type":"Component","desc":"One of the QSpinners"},"customClass":{"type":"String","desc":"Add a CSS class to easily customize the component","examples":["my-class"]}}},"props":{"isActive":{"type":"Boolean","desc":"Is Loading active?","reactive":true}},"methods":{"show":{"desc":"Activate and show","params":{"opts":{"type":"Object","desc":"All props are optional","definition":{"delay":{"type":"Number","desc":"Wait a number of millisecond before showing; Not worth showing for 100ms for example then hiding it, so wait until you\'re sure it\'s a process that will take some considerable amount of time","examples":[400]},"message":{"type":"String","desc":"Message to display","examples":["Processing your request"]},"sanitize":{"type":"Boolean","default":"false","desc":"Force use of textContent instead of innerHTML to render message; Use it when the message might be unsafe (from user input)","category":"behavior"},"spinnerSize":{"type":"Number","desc":"Spinner size (in pixels)","examples":[60]},"spinnerColor":{"type":"String","desc":"Color name for spinner from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"messageColor":{"type":"String","desc":"Color name for text from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"backgroundColor":{"type":"String","desc":"Color name for background from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"spinner":{"type":"Component","desc":"One of the QSpinners"},"customClass":{"type":"String","desc":"Add a CSS class to easily customize the component","examples":["my-class"]},"ignoreDefaults":{"type":"Boolean","desc":"Ignore the default configuration (set by setDefaults()) for this instance only","addedIn":"v1.1.0"}}}}},"hide":{"desc":"Hide it"},"setDefaults":{"desc":"Merge options into the default ones","params":{"opts":{"type":"Object","desc":"Pick the subprop you want to define","required":true,"definition":{"delay":{"type":"Number","desc":"Wait a number of millisecond before showing; Not worth showing for 100ms for example then hiding it, so wait until you\'re sure it\'s a process that will take some considerable amount of time","examples":[400]},"message":{"type":"String","desc":"Message to display","examples":["Processing your request"]},"spinnerSize":{"type":"Number","desc":"Spinner size (in pixels)","examples":[60]},"spinnerColor":{"type":"String","desc":"Color name for spinner from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"messageColor":{"type":"String","desc":"Color name for text from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"backgroundColor":{"type":"String","desc":"Color name for background from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"spinner":{"type":"Component","desc":"One of the QSpinners"},"customClass":{"type":"String","desc":"Add a CSS class to easily customize the component","examples":["my-class"]}}}}}}}')},c09a:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/layout/page-scroller"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"position":{"type":"String","desc":"Page side/corner to stick to","default":"bottom-right","values":["top-right","top-left","bottom-right","bottom-left","top","right","bottom","left"],"examples":["top-right"],"category":"position"},"offset":{"type":"Array","desc":"An array of two numbers to offset the component horizontally and vertically in pixels","examples":["[8, 8]","[5, 10]"],"category":"content","default":[18,18]},"expand":{"type":"Boolean","desc":"By default the component shrinks to content\'s size; By using this prop you make the component fully expand horizontally or vertically, based on \'position\' prop","category":"content"},"scroll-offset":{"type":"Number","desc":"Scroll offset (in pixels) from which point the component is shown on page; Measured from the top of the page (or from the bottom if in \'reverse\' mode)","default":1000,"examples":[550],"category":"behavior"},"reverse":{"type":"Boolean","desc":"Work in reverse (shows when scrolling to the top of the page and scrolls to bottom when triggered)","category":"behavior","addedIn":"v1.9.0"},"duration":{"type":"Number","desc":"Duration (in milliseconds) of the scrolling until it reaches its target","default":300,"examples":[500],"category":"behavior"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},c222:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/scroll-area"},"props":{"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style","addedIn":"v1.9.0"},"bar-style":{"type":["Array","String","Object"],"desc":"Object with CSS properties and values for styling the custom scrollbar","examples":[":bar-style=\\"{ right: \'4px\', borderRadius: \'5px\', background: \'red\', width: \'10px\', opacity: 1 }\\""],"category":"style","addedIn":"v1.5.0"},"thumb-style":{"type":"Object","desc":"Object with CSS properties and values for styling the thumb of custom scrollbar","examples":[":thumb-style=\\"{ right: \'4px\', borderRadius: \'5px\', background: \'red\', width: \'10px\', opacity: 1 }\\""],"category":"style"},"content-style":{"type":["Array","String","Object"],"desc":"Object with CSS properties and values for styling the container of QScrollArea","examples":[":content-style=\\"{ backgroundColor: \'#C0C0C0\' }\\""],"category":"style"},"content-active-style":{"type":["Array","String","Object"],"desc":"Object with CSS properties and values for styling the container of QScrollArea when scroll area becomes active (is mouse hovered)","examples":[":content-active-style=\\"{ backgroundColor: \'white\' }\\""],"category":"style"},"visible":{"type":"Boolean","desc":"(Desktop only) Manually control the visibility of the scrollbar; Overrides default mouse over/leave behavior","category":"behavior","addedIn":"v1.3.0"},"delay":{"type":["Number","String"],"desc":"When content changes, the scrollbar appears; this delay defines the amount of time (in milliseconds) before scrollbars disappear again (if component is not hovered)","default":1000,"examples":[500,":delay=\\"550\\""],"category":"behavior"},"horizontal":{"type":"Boolean","desc":"Register for horizontal scroll instead of vertical (which is default)","category":"behavior"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"events":{"scroll":{"desc":"Emitted when scroll information changes (and listener is configured)","params":{"info":{"type":"Object","definition":{"ref":{"type":"Object","desc":"Vue reference to the QScrollArea which triggered the event"},"verticalPosition":{"type":"Number","desc":"Vertical scroll position (in px); available only if QScrollArea is NOT in horizontal mode"},"verticalPercentage":{"type":"Number","desc":"Vertical scroll percentage (0.0 < x < 1.0); available only if QScrollArea is NOT in horizontal mode"},"verticalSize":{"type":"Number","desc":"Vertical scroll size (in px); available only if QScrollArea is NOT in horizontal mode"},"verticalContainerSize":{"type":"Number","desc":"Height of the container (in px); available only if QScrollArea is NOT in horizontal mode"},"horizontalPosition":{"type":"Number","desc":"Horizontal scroll position (in px); available only if QScrollArea is in horizontal mode"},"horizontalPercentage":{"type":"Number","desc":"Horizontal scroll percentage (0.0 < x < 1.0); available only if QScrollArea is in horizontal mode"},"horizontalSize":{"type":"Number","desc":"Horizontal scroll size (in px); available only if QScrollArea is in horizontal mode"},"horizontalContainerSize":{"type":"Number","desc":"Width of the container (in px); available only if QScrollArea is in horizontal mode"}}}},"addedIn":"v1.9.3"}},"methods":{"getScrollTarget":{"desc":"Get the scrolling DOM element target","returns":{"type":"Object","desc":"DOM element upon which scrolling takes place"}},"getScrollPosition":{"desc":"Get current scroll position","returns":{"type":"Number","desc":"Scroll position offset from top (in pixels)","examples":[110]}},"setScrollPosition":{"desc":"Set scroll position to an offset; If a duration (in milliseconds) is specified then the scroll is animated","params":{"offset":{"type":"Number","desc":"Scroll position offset from top (in pixels)","required":true,"examples":[220]},"duration":{"type":"Number","desc":"Duration (in milliseconds) enabling animated scroll","examples":[300]}}}}}')},c458:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/notify"},"injection":"$q.notify","quasarConfOptions":{"propName":"notify","definition":{"type":{"type":"String","desc":"Optional type (that has been previously registered) or one of the out of the box ones (\'positive\', \'negative\', \'warning\', \'info\')","examples":["negative","custom-type"],"addedIn":"v1.9.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"textColor":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"message":{"type":"String","desc":"The content of your message","examples":["John Doe pinged you"]},"caption":{"type":"String","desc":"The content of your optional caption","examples":["5 minutes ago"],"addedIn":"v1.5.5"},"html":{"type":"Boolean","desc":"Render message as HTML; This can lead to XSS attacks, so make sure that you sanitize the message first"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"avatar":{"type":"String","desc":"URL to an avatar/image; Suggestion: use statics folder","examples":["(statics folder) statics/img/something.png","(relative path format) require(\'./my_img.jpg\')","(URL) https://some-site.net/some-img.gif"]},"position":{"type":"String","desc":"Window side/corner to stick to","default":"bottom","values":["top-left","top-right","bottom-left","bottom-right","top","bottom","left","right","center"],"examples":["top-right"]},"group":{"type":["Boolean","String","Number"],"desc":"Override the auto generated group with custom one; String or number value inform this is part of a specific group, regardless of its options; When a new notification is triggered with same group name, it replaces the old one and shows a badge with how many times the notification was triggered","default":"(message + caption + multiline + actions labels + position)","examples":["my-group"],"addedIn":"v1.9.0"},"badgeColor":{"type":"String","desc":"Color name for the badge from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.9.0"},"badgeTextColor":{"type":"String","desc":"Color name for the badge text from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.9.0"},"badgePosition":{"type":"String","desc":"Notification corner to stick badge to; If notification is on the left side then default is top-right otherwise it is top-left","default":"(top-left/top-right)","values":["top-left","top-right","bottom-left","bottom-right"],"examples":["bottom-right"],"addedIn":"v1.9.5"},"badgeStyle":{"type":"String","desc":"Style definitions to be attributed to the badge","examples":["background-color: #ff0000"],"addedIn":"v1.9.0"},"badgeClass":{"type":"String","desc":"Class definitions to be attributed to the badge","examples":["my-special-class"],"addedIn":"v1.9.0"},"progress":{"type":"Boolean","desc":"Show progress bar to detail when notification will disappear automatically (unless timeout is 0)","addedIn":"v1.9.0"},"progressClass":{"type":"String","desc":"Class definitions to be attributed to the progress bar","examples":["my-special-class"],"addedIn":"v1.9.0"},"classes":{"type":"String","desc":"Add CSS class(es) to the notification for easier customization","examples":["my-notif-class"]},"timeout":{"type":"Number","desc":"Amount of time to display (in milliseconds)","default":5000,"examples":[2500]},"closeBtn":{"type":["Boolean","String"],"desc":"Convenient way to add a dismiss button with a specific label, without using the \'actions\' convoluted prop","examples":["Close me"]},"multiLine":{"type":"Boolean","desc":"Put notification into multi-line mode; If this prop isn\'t used and more than one \'action\' is specified then notification goes into multi-line mode by default"}}},"methods":{"create":{"tsInjectionPoint":true,"desc":"Creates a notification; Same as calling $q.notify(...)","params":{"opts":{"type":["Object","String"],"desc":"Notification options","definition":{"type":{"type":"String","desc":"Optional type (that has been previously registered) or one of the out of the box ones (\'positive\', \'negative\', \'warning\', \'info\')","examples":["negative","custom-type"],"addedIn":"v1.9.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"textColor":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"message":{"type":"String","desc":"The content of your message","examples":["John Doe pinged you"]},"caption":{"type":"String","desc":"The content of your optional caption","examples":["5 minutes ago"],"addedIn":"v1.5.5"},"html":{"type":"Boolean","desc":"Render message as HTML; This can lead to XSS attacks, so make sure that you sanitize the message first"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"avatar":{"type":"String","desc":"URL to an avatar/image; Suggestion: use statics folder","examples":["(statics folder) statics/img/something.png","(relative path format) require(\'./my_img.jpg\')","(URL) https://some-site.net/some-img.gif"]},"position":{"type":"String","desc":"Window side/corner to stick to","default":"bottom","values":["top-left","top-right","bottom-left","bottom-right","top","bottom","left","right","center"],"examples":["top-right"]},"group":{"type":["Boolean","String","Number"],"desc":"Override the auto generated group with custom one; String or number value inform this is part of a specific group, regardless of its options; When a new notification is triggered with same group name, it replaces the old one and shows a badge with how many times the notification was triggered","default":"(message + caption + multiline + actions labels + position)","examples":["my-group"],"addedIn":"v1.9.0"},"badgeColor":{"type":"String","desc":"Color name for the badge from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.9.0"},"badgeTextColor":{"type":"String","desc":"Color name for the badge text from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.9.0"},"badgePosition":{"type":"String","desc":"Notification corner to stick badge to; If notification is on the left side then default is top-right otherwise it is top-left","default":"(top-left/top-right)","values":["top-left","top-right","bottom-left","bottom-right"],"examples":["bottom-right"],"addedIn":"v1.9.5"},"badgeStyle":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the badge","examples":["background-color: #ff0000",":content-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"addedIn":"v1.9.0"},"badgeClass":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the badge","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"addedIn":"v1.9.0"},"progress":{"type":"Boolean","desc":"Show progress bar to detail when notification will disappear automatically (unless timeout is 0)","addedIn":"v1.9.0"},"progressClass":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the progress bar","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"addedIn":"v1.9.0"},"classes":{"type":"String","desc":"Add CSS class(es) to the notification for easier customization","examples":["my-notif-class"]},"timeout":{"type":"Number","desc":"Amount of time to display (in milliseconds)","default":5000,"examples":[2500]},"actions":{"type":"Array","desc":"Notification actions (buttons); If a \'handler\' is specified or not, clicking/tapping on the button will also close the notification; Also check \'closeBtn\' convenience prop","examples":["[ { label: \'Show\', handler: (Function) }, { icon: \'map\', handler: (Function), color: \'yellow\' }, { label: \'Learn more\', noDismiss: true, handler: (Function) } ]"]},"onDismiss":{"type":"Function","desc":"Function to call when notification gets dismissed","params":null,"returns":null,"examples":["() => { console.log(\'Dismissed\') }"]},"closeBtn":{"type":["Boolean","String"],"desc":"Convenience way to add a dismiss button with a specific label, without using the \'actions\' prop; If set to true, it uses a label accordding to the current Quasar language","examples":["Close me"]},"multiLine":{"type":"Boolean","desc":"Put notification into multi-line mode; If this prop isn\'t used and more than one \'action\' is specified then notification goes into multi-line mode by default"},"ignoreDefaults":{"type":"Boolean","desc":"Ignore the default configuration (set by setDefaults()) for this instance only","addedIn":"v1.1.0"}},"required":true}},"returns":{"type":"Function","desc":"Calling this function hides the notification","params":null,"returns":null}},"setDefaults":{"desc":"Merge options into the default ones","params":{"opts":{"type":"Object","desc":"Notification options","definition":{"type":{"type":"String","desc":"Optional type (that has been previously registered) or one of the out of the box ones (\'positive\', \'negative\', \'warning\', \'info\')","examples":["negative","custom-type"],"addedIn":"v1.9.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"textColor":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"message":{"type":"String","desc":"The content of your message","examples":["John Doe pinged you"]},"caption":{"type":"String","desc":"The content of your optional caption","examples":["5 minutes ago"],"addedIn":"v1.5.5"},"html":{"type":"Boolean","desc":"Render message as HTML; This can lead to XSS attacks, so make sure that you sanitize the message first"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"avatar":{"type":"String","desc":"URL to an avatar/image; Suggestion: use statics folder","examples":["(statics folder) statics/img/something.png","(relative path format) require(\'./my_img.jpg\')","(URL) https://some-site.net/some-img.gif"]},"position":{"type":"String","desc":"Window side/corner to stick to","default":"bottom","values":["top-left","top-right","bottom-left","bottom-right","top","bottom","left","right","center"],"examples":["top-right"]},"badgeColor":{"type":"String","desc":"Color name for the badge from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.9.0"},"badgeTextColor":{"type":"String","desc":"Color name for the badge text from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.9.0"},"badgePosition":{"type":"String","desc":"Notification corner to stick badge to; If notification is on the left side then default is top-right otherwise it is top-left","default":"(top-left/top-right)","values":["top-left","top-right","bottom-left","bottom-right"],"examples":["bottom-right"],"addedIn":"v1.9.5"},"badgeStyle":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the badge","examples":["background-color: #ff0000",":content-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"addedIn":"v1.9.0"},"badgeClass":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the badge","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"addedIn":"v1.9.0"},"progress":{"type":"Boolean","desc":"Show progress bar to detail when notification will disappear automatically (unless timeout is 0)","addedIn":"v1.9.0"},"progressClass":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the progress bar","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"addedIn":"v1.9.0"},"classes":{"type":"String","desc":"Add CSS class(es) to the notification for easier customization","examples":["my-notif-class"]},"timeout":{"type":"Number","desc":"Amount of time to display (in milliseconds)","default":5000,"examples":[2500]},"actions":{"type":"Array","desc":"Notification actions (buttons); If a \'handler\' is specified or not, clicking/tapping on the button will also close the notification; Also check \'closeBtn\' convenience prop","examples":["[ { label: \'Show\', handler: (Function) }, { icon: \'map\', handler: (Function), color: \'yellow\' } ]"]},"onDismiss":{"type":"Function","desc":"Function to call when notification gets dismissed","params":null,"returns":null,"examples":["() => { console.log(\'Dismissed\') }"]},"closeBtn":{"type":["Boolean","String"],"desc":"Convenience way to add a dismiss button with a specific label, without using the \'actions\' prop; If set to true, it uses a label accordding to the current Quasar language","examples":["Close me"]},"multiLine":{"type":"Boolean","desc":"Put notification into multi-line mode; If this prop isn\'t used and more than one \'action\' is specified then notification goes into multi-line mode by default"}},"required":true}}},"registerType":{"addedIn":"v1.9.0","desc":"Register a new type of notification (or override an existing one)","params":{"typeName":{"type":"String","desc":"Name of the type (to be used as \'type\' prop later on)","required":true,"examples":["my-type"]},"typeOpts":{"type":"Object","desc":"Notification options","definition":{"type":{"type":"String","desc":"Optional type (that has been previously registered) or one of the out of the box ones (\'positive\', \'negative\', \'warning\', \'info\')","examples":["negative","custom-type"],"addedIn":"v1.9.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"textColor":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"message":{"type":"String","desc":"The content of your message","examples":["John Doe pinged you"]},"caption":{"type":"String","desc":"The content of your optional caption","examples":["5 minutes ago"],"addedIn":"v1.5.5"},"html":{"type":"Boolean","desc":"Render message as HTML; This can lead to XSS attacks, so make sure that you sanitize the message first"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"avatar":{"type":"String","desc":"URL to an avatar/image; Suggestion: use statics folder","examples":["(statics folder) statics/img/something.png","(relative path format) require(\'./my_img.jpg\')","(URL) https://some-site.net/some-img.gif"]},"position":{"type":"String","desc":"Window side/corner to stick to","default":"bottom","values":["top-left","top-right","bottom-left","bottom-right","top","bottom","left","right","center"],"examples":["top-right"]},"badgeColor":{"type":"String","desc":"Color name for the badge from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.9.0"},"badgeTextColor":{"type":"String","desc":"Color name for the badge text from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.9.0"},"badgePosition":{"type":"String","desc":"Notification corner to stick badge to; If notification is on the left side then default is top-right otherwise it is top-left","default":"(top-left/top-right)","values":["top-left","top-right","bottom-left","bottom-right"],"examples":["bottom-right"],"addedIn":"v1.9.5"},"badgeStyle":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the badge","examples":["background-color: #ff0000",":content-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"addedIn":"v1.9.0"},"badgeClass":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the badge","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"addedIn":"v1.9.0"},"progress":{"type":"Boolean","desc":"Show progress bar to detail when notification will disappear automatically (unless timeout is 0)","addedIn":"v1.9.0"},"progressClass":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the progress bar","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"addedIn":"v1.9.0"},"classes":{"type":"String","desc":"Add CSS class(es) to the notification for easier customization","examples":["my-notif-class"]},"timeout":{"type":"Number","desc":"Amount of time to display (in milliseconds)","default":5000,"examples":[2500]},"actions":{"type":"Array","desc":"Notification actions (buttons); If a \'handler\' is specified or not, clicking/tapping on the button will also close the notification; Also check \'closeBtn\' convenience prop","examples":["[ { label: \'Show\', handler: (Function) }, { icon: \'map\', handler: (Function), color: \'yellow\' } ]"]},"onDismiss":{"type":"Function","desc":"Function to call when notification gets dismissed","params":null,"returns":null,"examples":["() => { console.log(\'Dismissed\') }"]},"closeBtn":{"type":["Boolean","String"],"desc":"Convenience way to add a dismiss button with a specific label, without using the \'actions\' prop; If set to true, it uses a label accordding to the current Quasar language","examples":["Close me"]},"multiLine":{"type":"Boolean","desc":"Put notification into multi-line mode; If this prop isn\'t used and more than one \'action\' is specified then notification goes into multi-line mode by default"}},"required":true}}}}}')},c969:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},cb08:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/toolbar"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"shrink":{"type":"Boolean","desc":"By default, QToolbarTitle is set to grow to the available space. However, you can reverse that with this prop","category":"behavior"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},cb82:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/layout/page-sticky"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"position":{"type":"String","desc":"Page side/corner to stick to","default":"bottom-right","values":["top-right","top-left","bottom-right","bottom-left","top","right","bottom","left"],"examples":["top-right"],"category":"position"},"offset":{"type":"Array","desc":"An array of two numbers to offset the component horizontally and vertically in pixels","examples":["[8, 8]","[5, 10]"],"category":"position"},"expand":{"type":"Boolean","desc":"By default the component shrinks to content\'s size; By using this prop you make the component fully expand horizontally or vertically, based on \'position\' prop","category":"content"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},ced8:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/app-visibility"},"injection":"$q.appVisible","props":{"appVisible":{"tsInjectionPoint":true,"type":"Boolean","desc":"Does the app have user focus? Or the app runs in the background / another tab has the user\'s attention","reactive":true}}}')},d0d1:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/chat"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"sent":{"type":"Boolean","desc":"Render as a sent message (so from current user)","category":"content"},"label":{"type":"String","desc":"Renders a label header/section only","examples":["Friday, 18th"],"category":"content"},"bg-color":{"type":"String","desc":"Color name (from the Quasar Color Palette) for chat bubble background","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Color name (from the Quasar Color Palette) for chat bubble text","examples":["primary","teal-10"],"category":"style"},"name":{"type":"String","desc":"Author\'s name","examples":["John Doe"],"category":"content"},"avatar":{"type":"String","desc":"URL to the avatar image of the author","transformAssetUrls":true,"examples":["(statics folder) src=\\"statics/boy-avatar.png\\"","(assets folder) src=\\"~assets/boy-avatar.png\\"","(relative path format) :src=\\"require(\'./my_img.jpg\')\\"","(URL) src=\\"https://placeimg.com/500/300/nature\\""],"category":"content"},"text":{"type":"Array","desc":"Array of strings that are the message body. Strings are not sanitized (see details in docs)","examples":[":text=\\"[\'How are you?\']\\"",":text=\\"[\'I\\\\\'m good, thank you!\', \'And you?\']\\""],"category":"content"},"stamp":{"type":"String","desc":"Creation timestamp","examples":["13:55","Yesterday at 13:51"],"category":"content"},"size":{"type":"String","desc":"1-12 out of 12 (same as col-*)","examples":["4","6","12"],"category":"style"},"label-sanitize":{"type":"Boolean","default":"false","desc":"Force use of textContent instead of innerHTML to render label; Use it when the label might be unsafe (from user input)","category":"behavior"},"name-sanitize":{"type":"Boolean","default":"false","desc":"Force use of textContent instead of innerHTML to render name; Use it when the name might be unsafe (from user input)","category":"behavior"},"text-sanitize":{"type":"Boolean","default":"false","desc":"Force use of textContent instead of innerHTML to render text; Use it when the text might be unsafe (from user input)","category":"behavior"},"stamp-sanitize":{"type":"Boolean","default":"false","desc":"Force use of textContent instead of innerHTML to render stamp; Use it when the stamp might be unsafe (from user input)","category":"behavior"}},"slots":{"default":{"desc":"You can use this slot to define a custom message (overrides props)"},"avatar":{"desc":"Slot for avatar; Suggestion: QAvatar, img"}}}')},d19a:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/dialog"},"injection":"$q.dialog","methods":{"create":{"desc":"Creates an ad-hoc Dialog; Same as calling $q.dialog(...)","params":{"opts":{"type":"Object","required":true,"definition":{"class":{"type":["String","Array","Object"],"desc":"CSS Class name to apply to the Dialog\'s QCard","examples":["my-class"]},"style":{"type":["String","Array","Object"],"desc":"CSS style to apply to the Dialog\'s QCard","examples":["border: 2px solid black"]},"title":{"type":"String","desc":"A text for the heading title of the dialog","examples":["Continue?"]},"message":{"type":"String","desc":"A text with more information about what needs to be input, selected or confirmed.","examples":["Are you certain you want to continue?"]},"html":{"type":"Boolean","desc":"Render title and message as HTML; This can lead to XSS attacks, so make sure that you sanitize the message first"},"position":{"type":"String","desc":"Position of the Dialog on screen. Standard is centered.","values":["top","right","bottom","left","standard"],"default":"standard"},"prompt":{"type":"Object","desc":"An object definition of the input field for the prompting question.","examples":["prompt: { model: this.promptVal, type: \'number\' }"],"definition":{"model":{"type":"String","desc":"The initial value of the input","required":true},"type":{"type":"String","desc":"Optional property to determine the input field type","default":"text","examples":["text","number","textarea"]},"isValid":{"type":"Function","desc":"Is typed content valid?","params":{"val":{"type":"String","desc":"The value of the input"}},"returns":{"type":"Boolean","desc":"The text passed validation or not"}},"attrs":{"type":"Object","desc":"Attributes to pass to prompt control","examples":["{ autocomplete: \'off\' }"],"addedIn":"v1.9.12"},"label":{"type":"String","desc":"A text label that will “float” up above the input field, once the field gets focus","examples":["Username"],"addedIn":"v1.9.3"},"stackLabel":{"type":"Boolean","desc":"Label will be always shown above the field regardless of field content (if any)","addedIn":"v1.9.3"},"filled":{"type":"Boolean","desc":"Use \'filled\' design for the field","addedIn":"v1.9.3"},"outlined":{"type":"Boolean","desc":"Use \'outlined\' design for the field","addedIn":"v1.9.3"},"standout":{"type":["Boolean","String"],"desc":"Use \'standout\' design for the field; Specifies classes to be applied when focused (overriding default ones)","examples":["standout","standout=\\"bg-primary text-white\\""],"addedIn":"v1.9.3"},"rounded":{"type":"Boolean","desc":"Applies a small standard border-radius for a squared shape of the component","category":"style","addedIn":"v1.12.3"},"square":{"type":"Boolean","desc":"Remove border-radius so borders are squared; Overrides \'rounded\' prop","addedIn":"v1.12.3"},"counter":{"type":"Boolean","desc":"Show an automatic counter on bottom right","addedIn":"v1.12.3"},"maxlength":{"type":["String","Number"],"desc":"Specify a max length of model","examples":["12"],"addedIn":"v1.12.3"},"prefix":{"type":"String","desc":"Prefix","examples":["$"],"addedIn":"v1.12.3"},"suffix":{"type":"String","desc":"Suffix","examples":["@gmail.com"],"addedIn":"v1.12.3"}}},"options":{"type":"Object","desc":"An object definition for creating the selection form content","examples":["{ model: this.dialogSelection, type: \'radio\', items: [...listOfItems] }"],"definition":{"model":{"type":["String","Array"],"desc":"The value of the selection (String if it\'s of type radio or Array otherwise)","required":true,"examples":["[]"]},"type":{"type":"String","desc":"The type of selection","default":"radio","values":["radio","checkbox","toggle"]},"items":{"type":"Array","desc":"The list of options to interact with; Equivalent to options prop of the QOptionsGroup component","examples":["[ { label: \'Option 1\', value: \'op1\' }, { label: \'Option 2\', value: \'op2\' }, { label: \'Option 3\', value: \'op3\' } ]"]},"isValid":{"type":"Function","desc":"Is the model valid?","params":{"model":{"type":["String","Array"],"desc":"The current model (String if it\'s of type radio or Array otherwise)","examples":["opt2","[ \'opt1\' ]","[]","[ \'opt1\', \'opt3\' ]"]}},"returns":{"type":"Boolean","desc":"The selection passed validation or not"}}}},"ok":{"type":["String","Object","Boolean"],"desc":"Props for an \'OK\' button","definition":{"...props":{"type":"Any","desc":"See QBtn for available props"}}},"cancel":{"type":["String","Object","Boolean"],"desc":"Props for a \'CANCEL\' button","definition":{"...props":{"type":"Any","desc":"See QBtn for available props"}}},"focus":{"type":"String","desc":"What button to focus, unless you also have \'prompt\' or \'options\'","values":["ok","cancel","none"],"default":"ok","addedIn":"v1.5.0"},"stackButtons":{"type":"Boolean","desc":"Makes buttons be stacked instead of vertically aligned"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Apply dark mode","category":"style"},"persistent":{"type":"Boolean","desc":"User cannot dismiss Dialog if clicking outside of it or hitting ESC key; Also, an app route change won\'t dismiss it"},"noEscDismiss":{"type":"Boolean","desc":"User cannot dismiss Dialog by hitting ESC key; No need to set it if \'persistent\' prop is also set"},"noBackdropDismiss":{"type":"Boolean","desc":"User cannot dismiss Dialog by clicking outside of it; No need to set it if \'persistent\' prop is also set"},"noRouteDismiss":{"type":"Boolean","desc":"Changing route app won\'t dismiss Dialog; No need to set it if \'persistent\' prop is also set"},"seamless":{"type":"Boolean","desc":"Put Dialog into seamless mode; Does not use a backdrop so user is able to interact with the rest of the page too"},"maximized":{"type":"Boolean","desc":"Put Dialog into maximized mode"},"fullWidth":{"type":"Boolean","desc":"Dialog will try to render with same width as the window"},"fullHeight":{"type":"Boolean","desc":"Dialog will try to render with same height as the window"},"transitionShow":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"scale"},"transitionHide":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"scale"},"component":{"type":"Any","desc":"Use custom dialog component; use along with \'parent\' prop where possible; if using this prop, all others described here will be supplied to your custom component"},"parent":{"type":"Object","desc":"Required if using \'component\' prop and you need access to vuex store, router and so on; Specify Vue parent component","examples":["parent: this"]},"root":{"type":"Object","desc":"Deprecated alias for parent","examples":["root: this"]},"...props":{"type":"Any","desc":"User defined props which will be forwarded to underlying custom component if \'component\' prop is used"}},"desc":"Dialog options","tsType":"QDialogOptions"}},"returns":{"type":"Object","desc":"Chainable Object","tsType":"DialogChainObject","definition":{"onOk":{"type":"Function","desc":"Receives a Function param to tell what to do when OK is pressed / option is selected","params":{"callbackFn":{"type":"Function","desc":"Tell what to do","required":true,"params":null,"returns":null}},"returns":{"type":"Object","desc":"Chained Object","tsType":"DialogChainObject"}},"onCancel":{"type":"Function","desc":"Receives a Function as param to tell what to do when Cancel is pressed / dialog is dismissed","params":{"callbackFn":{"type":"Function","desc":"Tell what to do","required":true,"params":null,"returns":null}},"returns":{"type":"Object","desc":"Chained Object","tsType":"DialogChainObject"}},"onDismiss":{"type":"Function","desc":"Receives a Function param to tell what to do when the dialog is closed","params":{"callbackFn":{"type":"Function","desc":"Tell what to do","required":true,"params":null,"returns":null}},"returns":{"type":"Object","desc":"Chained Object","tsType":"DialogChainObject"}},"hide":{"type":"Function","desc":"Hides the dialog when called","params":null,"returns":{"type":"Object","desc":"Chained Object","tsType":"DialogChainObject"}}}},"tsInjectionPoint":true}}}')},d239:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/form"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"autofocus":{"type":"Boolean","desc":"Focus first focusable element on initial component render","category":"behavior"},"no-error-focus":{"type":"Boolean","desc":"Do not try to focus on first component that has a validation error when submitting form","category":"behavior"},"no-reset-focus":{"type":"Boolean","desc":"Do not try to focus on first component when resetting form","category":"behavior"},"greedy":{"type":"Boolean","desc":"Validate all fields in form (by default it stops after finding the first invalid field with synchronous validation)","category":"behavior","addedIn":"v1.1.1"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}},"events":{"submit":{"desc":"Emitted when all validations have passed when tethered to a submit button"},"reset":{"desc":"Emitted when all validations have been reset when tethered to a reset button; It is recommended to manually reset the wrapped components models in this handler"},"validation-success":{"desc":"Emitted after a validation was triggered and all inner Quasar components models are valid"},"validation-error":{"desc":"Emitted after a validation was triggered and at least one of the inner Quasar components models are NOT valid","params":{"ref":{"type":"Object","desc":"Vue reference to the first component that triggered the validation error"}},"addedIn":"v1.9.9"}},"methods":{"focus":{"desc":"Focus on first focusable element/component in the form"},"validate":{"desc":"Triggers a validation on all applicable inner Quasar components","params":{"shouldFocus":{"type":"Boolean","desc":"Tell if it should focus or not on component with error on submitting form; Overrides \'no-focus-error\' prop if specified"}},"returns":{"type":"Promise<boolean>","desc":"Promise is always fulfilled and receives the outcome (true -> validation was a success, false -> invalid models detected)","examples":["validate().then(outcome => { ... })"]}},"resetValidation":{"desc":"Resets the validation on all applicable inner Quasar components"},"submit":{"desc":"Manually trigger form validation and submit","params":{"evt":{"type":"Object","desc":"JS event object"}}},"reset":{"desc":"Manually trigger form reset","params":{"evt":{"type":"Object","desc":"JS event object"}}},"getValidationComponents":{"desc":"Get array of children vue components that support validation","returns":{"type":"Array","desc":"Vue components that support Quasar validation API"},"addedIn":"v1.10.0"}}}')},d3c6:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/layout/layout"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"view":{"type":"String","desc":"Defines how your layout components (header/footer/drawer) should be placed on screen; See docs examples","default":"hhh lpr fff","examples":["hHh lpR fFf"],"category":"content"},"container":{"type":"Boolean","desc":"Containerize the layout which means it changes the default behavior of expanding to the whole window; Useful (but not limited to) for when using on a QDialog","category":"content"}},"slots":{"default":{"desc":"Suggestion: QHeader, QFooter, QDrawer, QPageContainer"}},"events":{"resize":{"desc":"Emitted when layout size (height, width) changes","params":{"size":{"type":"Object","desc":"New size","definition":{"height":{"type":"Number","desc":"Layout height","examples":[575]},"width":{"type":"Number","desc":"Layout height","examples":[575]}}}}},"scroll":{"desc":"Emitted when user scrolls within layout","params":{"details":{"type":"Object","desc":"Scroll details","definition":{"position":{"type":"Number","desc":"Scroll offset (from top)","examples":[575]},"direction":{"type":"String","desc":"Direction of scroll","values":["up","down"]},"directionChanged":{"type":"Boolean","desc":"Has scroll direction changed since event was last emitted?"},"inflexionPosition":{"type":"Number","desc":"Last scroll offset where scroll direction has changed","examples":[575]}}}}},"scroll-height":{"desc":"Emitted when the scroll size of layout changes","params":{"height":{"type":"Number","desc":"New scroll height of layout","examples":[1442]}}}}}')},d588:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/banner"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"inline-actions":{"type":"Boolean","desc":"Display actions on same row as content","category":"content"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"rounded":{"type":"Boolean","desc":"Applies a small standard border-radius for a squared shape of the component","category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style","addedIn":"v1.3.0"}},"slots":{"default":{"desc":"This is where Banner content goes"},"avatar":{"desc":"Slot for displaying an avatar (suggestions: QIcon, QAvatar)"},"action":{"desc":"Slot for Banner action (suggestions: QBtn)"}}}')},d7f8:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/badge"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"floating":{"type":"Boolean","desc":"Tell QBadge if it should float to the top right side of the relative positioned parent element or not","category":"content"},"transparent":{"type":"Boolean","desc":"Applies a 0.8 opacity; Useful especially for floating QBadge","category":"content"},"multi-line":{"type":"Boolean","desc":"Content can wrap to multiple lines","category":"content"},"label":{"type":["String","Number"],"desc":"Badge\'s content as string; overrides default slot if specified","examples":["John Doe",22],"category":"content"},"align":{"type":"String","desc":"Sets vertical-align CSS prop","values":["top","middle","bottom"],"category":"content"},"outline":{"type":"Boolean","desc":"Use \'outline\' design (colored text and borders only)","category":"content","addedIn":"v1.4.5"}},"slots":{"default":{"desc":"This is where QBadge content goes, if not using \'label\' property"}}}')},da37:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/popup-edit"},"props":{"value":{"desc":"Model of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model","type":"Any","examples":["v-model=\\"myValue\\""]},"auto-save":{"type":"Boolean","desc":"Automatically save the model (if changed) when user clicks/taps outside of the popup; It does not apply to ESC key","category":"behavior","addedIn":"v1.9.0"},"title":{"type":"String","desc":"Optional title (unless \'title\' slot is used)","examples":["Calories"],"category":"content"},"buttons":{"type":"Boolean","desc":"Show Set and Cancel buttons","category":"content"},"label-set":{"type":"String","desc":"Override Set button label","examples":["OK"],"category":"content"},"label-cancel":{"type":"String","desc":"Override Cancel button label","examples":["Cancel"],"category":"content"},"content-class":{"type":"String","desc":"Class definitions to be attributed to the content","examples":["my-special-class"],"category":"style"},"content-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the content","examples":["background-color: #ff0000",":content-style=\\"{ color: \'#ff0000\' }\\""],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","default":"primary"},"validate":{"type":"Function","desc":"Validates model then triggers \'save\' and closes Popup; Returns a Boolean (\'true\' means valid, \'false\' means abort); Syntax: validate(value); For best performance, reference it from your scope and do not define it inline","params":{"value":{"type":"Any","desc":"Model to validate","examples":["My car"]}},"returns":{"type":"Boolean","desc":"Is the model valid or not?"},"examples":[":validate=\\"myValidation\\""],"category":"model"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"fit":{"type":"Boolean","desc":"Allows the menu to match at least the full width of its target","category":"position"},"cover":{"type":"Boolean","default":true,"desc":"Allows the menu to cover its target. When used, the \'self\' and \'fit\' props are no longer effective","category":"position"},"anchor":{"type":"String","desc":"Two values setting the starting position or anchor point of the menu relative to its target","values":["top left","top middle","top right","center left","center middle","center right","bottom left","bottom middle","bottom right"],"examples":["top left","bottom right"],"category":"position"},"self":{"type":"String","desc":"Two values setting the menu\'s own position relative to its target","values":["top left","top middle","top right","center left","center middle","center right","bottom left","bottom middle","bottom right"],"examples":["top left","bottom right"],"category":"position"},"offset":{"type":"Array","desc":"An array of two numbers to offset the menu horizontally and vertically in pixels","examples":["[8, 8]","[5, 10]"],"category":"style"},"touch-position":{"type":"Boolean","desc":"Allows for the target position to be set by the mouse position, when the target of the menu is either clicked or touched","category":"behavior"},"persistent":{"type":"Boolean","desc":"Avoid menu closing by hitting ESC key or by clicking/tapping outside of the Popup","category":"behavior"},"separate-close-popup":{"type":"Boolean","desc":"Separate from parent menu, marking it as a separate closing point for v-close-popup (without this, chained menus close all together)","category":"behavior"},"square":{"type":"Boolean","desc":"Forces menu to have squared borders","category":"style"},"max-height":{"type":"String","desc":"The maximum height of the menu; Size in CSS units, including unit name","examples":["16px","2rem"],"category":"style"},"max-width":{"type":"String","desc":"The maximum width of the menu; Size in CSS units, including unit name","examples":["16px","2rem"],"category":"style"}},"slots":{"title":{"desc":"Slot for custom title (overrides \'title\' prop when used)"}},"scopedSlots":{"default":{"desc":"Used for injecting the form component","scope":{"initialValue":{"type":"Any","desc":"Initial value","examples":[0.241,"Text"]},"value":{"type":"Any","desc":"Current value","examples":[0.241,"Text"]},"emitValue":{"type":"Function","desc":"Function that emits an @input event in the context of the popup edit","params":{"value":{"type":"Any","desc":"Value to be emitted","examples":[0,"Changed text"]}},"returns":null},"validate":{"type":"Function","desc":"Function that checks if the value is valid","params":{"value":{"type":"Any","desc":"Value to be checked","examples":[0,"Changed text"]}},"returns":{"type":"Boolean","desc":"Checked value is valid or not"}},"set":{"type":"Function","desc":"Function that sets the value and closes the popup","params":null,"returns":null},"cancel":{"type":"Function","desc":"Function that cancels the editing and reverts the value to the initialValue","params":null,"returns":null}}}},"events":{"input":{"desc":"Emitted when Popup gets cancelled in order to reset model to its initial value; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true}}},"before-show":{"desc":"Emitted right before Popup gets shown","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"show":{"desc":"Emitted right after Popup gets shown"},"before-hide":{"desc":"Emitted right before Popup gets dismissed","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"hide":{"desc":"Emitted right after Popup gets dismissed"},"save":{"desc":"Emitted when value has been successfully validated and it should be saved","params":{"value":{"type":"Any","desc":"Validated value to be saved"},"initialValue":{"type":"Any","desc":"Initial value, before changes"}}},"cancel":{"desc":"Emitted when user cancelled the change (hit ESC key or clicking outside of Popup or hit \'Cancel\' button)","params":{"value":{"type":"Any","desc":"Edited value"},"initialValue":{"type":"Any","desc":"Initial value, before changes"}}}},"methods":{"set":{"desc":"Trigger a model update; Validates model (and emits \'save\' event if it\'s the case) then closes Popup"},"cancel":{"desc":"Triggers a model reset to its initial value (\'cancel\' event is emitted) then closes Popup"},"show":{"desc":"Triggers component to show","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}},"addedIn":"v1.12.0"},"hide":{"desc":"Triggers component to hide","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}},"addedIn":"v1.12.0"}}}')},db3f:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},db53:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/tree"},"props":{"nodes":{"type":"Array","desc":"The array of nodes that designates the tree structure","required":true,"examples":["[ {...}, {...} ]"],"category":"content"},"node-key":{"type":"String","desc":"The property name of each node object that holds a unique node id","required":true,"examples":["key","id"],"category":"content"},"label-key":{"type":"String","desc":"The property name of each node object that holds the label of the node","default":"label","examples":["name","description"],"category":"content"},"children-key":{"type":"String","desc":"The property name of each node object that holds the list of children of the node","default":"children","examples":["roles","relatives"],"category":"content","addedIn":"v1.11.3"},"no-connectors":{"type":"Boolean","desc":"Do not display the connector lines between nodes","category":"style","addedIn":"v1.5.10"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"control-color":{"type":"String","desc":"Color name for controls (like checkboxes) from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"selected-color":{"type":"String","desc":"Color name for selected nodes (from the Quasar Color Palette)","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"tick-strategy":{"type":"String","desc":"The type of strategy to use for the selection of the nodes","default":"none","values":["none","strict","leaf","leaf-filtered"],"category":"behavior"},"ticked":{"type":"Array","desc":"Keys of nodes that are ticked","sync":true,"examples":[":ticked.sync=\\"tickedKeys\\""],"category":"state"},"expanded":{"type":"Array","desc":"Keys of nodes that are expanded","sync":true,"examples":[":expanded.sync=\\"expandedKeys\\""],"category":"state"},"selected":{"type":"Any","desc":"Key of node currently selected","sync":true,"examples":[":selected.sync=\\"selectedKey\\""],"category":"state"},"default-expand-all":{"type":"Boolean","desc":"Allow the tree to have all its branches expanded, when first rendered","category":"behavior"},"accordion":{"type":"Boolean","desc":"Allows the tree to be set in accordion mode","category":"behavior"},"filter":{"type":"String","desc":"The text value to be used for filtering nodes","examples":[":filter=\\"searchText\\""],"category":"filter"},"filter-method":{"type":"Function","desc":"The function to use to filter the tree nodes; For best performance, reference it from your scope and do not define it inline","default":"(see source code)","params":{"node":{"type":"Object","desc":"Node currently being filtered"},"filter":{"type":"String","desc":"Filter text to match against"}},"returns":{"type":"Boolean","desc":"Matches or not"},"category":"filter"},"duration":{"type":"Number","desc":"Toggle animation duration (in milliseconds)","default":300,"examples":[":duration=\\"500\\""],"category":"style"},"no-nodes-label":{"type":"String","desc":"Override default such label for when no nodes are available","examples":["No nodes to show!"],"category":"content"},"no-results-label":{"type":"String","desc":"Override default such label for when no nodes are available due to filtering","examples":["No results"],"category":"content"}},"scopedSlots":{"default-header":{"desc":"Slot to use for defining the header of a node","scope":{"expanded":{"type":"Boolean","desc":"Is node expanded? Can directly be assigned new Boolean value which changes expanded state","reactive":true},"ticked":{"type":"Boolean","desc":"Is node ticked? Can directly be assigned new Boolean value which changes ticked state","reactive":true},"tree":{"type":"Object","desc":"QTree instance"},"node":{"type":"Object","desc":"Node object"},"key":{"type":"Any","desc":"Node\'s key"},"color":{"type":"String","desc":"QTree instance \'color\' supplied prop value","examples":["primary"]},"dark":{"type":"Boolean","desc":"QTree instance \'dark\' supplied prop value"}}},"header-[name]":{"desc":"Header template slot for describing node header; Used by nodes which have their \'header\' prop set to \'[name]\', where \'[name]\' can be any string","scope":{"expanded":{"type":"Boolean","desc":"Is node expanded? Can directly be assigned new Boolean value which changes expanded state","reactive":true},"ticked":{"type":"Boolean","desc":"Is node ticked? Can directly be assigned new Boolean value which changes ticked state","reactive":true},"tree":{"type":"Object","desc":"QTree instance"},"node":{"type":"Object","desc":"Node object"},"key":{"type":"Any","desc":"Node\'s key"},"color":{"type":"String","desc":"QTree instance \'color\' supplied prop value","examples":["primary"]},"dark":{"type":"Boolean","desc":"QTree instance \'dark\' supplied prop value"}}},"default-body":{"desc":"Slot to use for defining the body of a node","scope":{"expanded":{"type":"Boolean","desc":"Is node expanded? Can directly be assigned new Boolean value which changes expanded state","reactive":true},"ticked":{"type":"Boolean","desc":"Is node ticked? Can directly be assigned new Boolean value which changes ticked state","reactive":true},"tree":{"type":"Object","desc":"QTree instance"},"node":{"type":"Object","desc":"Node object"},"key":{"type":"Any","desc":"Node\'s key"},"color":{"type":"String","desc":"QTree instance \'color\' supplied prop value","examples":["primary"]},"dark":{"type":"Boolean","desc":"QTree instance \'dark\' supplied prop value"}}},"body-[name]":{"desc":"Body template slot for describing node body; Used by nodes which have their \'body\' prop set to \'[name]\', where \'[name]\' can be any string","scope":{"expanded":{"type":"Boolean","desc":"Is node expanded? Can directly be assigned new Boolean value which changes expanded state","reactive":true},"ticked":{"type":"Boolean","desc":"Is node ticked? Can directly be assigned new Boolean value which changes ticked state","reactive":true},"tree":{"type":"Object","desc":"QTree instance"},"node":{"type":"Object","desc":"Node object"},"key":{"type":"Any","desc":"Node\'s key"},"color":{"type":"String","desc":"QTree instance \'color\' supplied prop value","examples":["primary"]},"dark":{"type":"Boolean","desc":"QTree instance \'dark\' supplied prop value"}}}},"events":{"update:expanded":{"desc":"Triggered when nodes are expanded or collapsed; Used by Vue on \'update\' synched prop","params":{"expanded":{"type":"Array","desc":"The expanded node keys","examples":["[ \'Node 1\', \'Node 2\' ]"]}}},"lazy-load":{"desc":"Emitted when the lazy loading of nodes is finished","params":{"details":{"type":"Object","desc":"Lazy loading details","definition":{"node":{"type":"Object","desc":"The node to which the new nodes (the children) will be appended"},"key":{"type":"String","desc":"The key of the node getting the newly loaded child nodes","examples":["New Node"]},"done":{"type":"Function","desc":"The callback to be carried out when the loading is successful","params":{"children":{"type":"Array","desc":"Array of nodes"}},"returns":null},"fail":{"type":"Function","desc":"The callback to be carried out should the loading fails","params":null,"returns":null}}}}},"update:ticked":{"desc":"Emitted when nodes are ticked/unticked via the checkbox; Used by Vue on \'ticked\' synched prop","params":{"target":{"type":"Array","desc":"The ticked node keys","examples":["[ \'Node 1\', \'Node 2\' ]"]}}},"update:selected":{"desc":"Emitted when selected node changes; Used by Vue on \'selected\' synched prop","params":{"target":{"type":"Any","desc":"The selected node key","examples":["Node 1"]}}},"after-show":{"desc":"Emitted when component show animation is finished","addedIn":"v1.9.0"},"after-hide":{"desc":"Emitted when component hide animation is finished","addedIn":"v1.9.0"}},"methods":{"getNodeByKey":{"desc":"Get the node with the given key","params":{"key":{"type":"Any","desc":"The key of a node","required":true,"examples":["Node 1"]}},"returns":{"type":"Object","desc":"Requested node"}},"getTickedNodes":{"desc":"Get array of nodes that are ticked","returns":{"type":"Array","desc":"Ticked node objects"}},"getExpandedNodes":{"desc":"Get array of nodes that are expanded","returns":{"type":"Array","desc":"Expanded node objects"}},"isExpanded":{"desc":"Determine if a node is expanded","params":{"key":{"type":"Any","desc":"The key of a node","required":true,"examples":["Node 1"]}},"returns":{"type":"Boolean","desc":"Is specified node expanded?"}},"expandAll":{"desc":"Use to expand all branches of the tree"},"collapseAll":{"desc":"Use to collapse all branches of the tree"},"setExpanded":{"desc":"Expands the tree at the point of the node with the key given","params":{"key":{"type":"Any","desc":"The key of a node","required":true,"examples":["Node 1"]},"state":{"type":"Boolean","desc":"Set to \'true\' to expand the branch of the tree, otherwise \'false\' collapses it","required":true}}},"isTicked":{"desc":"Method to check if a node\'s checkbox is selected or not","params":{"key":{"type":"Any","desc":"The key of a node","required":true,"examples":["Node 1"]}},"returns":{"type":"Boolean","desc":"Is specified node ticked?"}},"setTicked":{"desc":"Method to set a node\'s checkbox programmatically","params":{"keys":{"type":"Array","desc":"The keys of nodes to tick/untick","required":true,"examples":["[ \'Node 1\', \'Node 2\' ]"]},"state":{"type":"Boolean","desc":"Set to \'true\' to tick the checkbox of nodes, otherwise \'false\' unticks them","required":true}}}}}')},dec4:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/web-storage"},"injection":"$q.sessionStorage","methods":{"has":{"desc":"Check if storage item exists","params":{"key":{"type":"String","desc":"Entry key","required":true,"examples":["userId"]}},"returns":{"type":"Boolean","desc":"Does the item exists or not?"}},"getLength":{"desc":"Get storage number of entries","returns":{"type":"Number","desc":"Number of entries","examples":[21]}},"getItem":{"tsType":"WebStorageGetItemMethodType","desc":"Get a storage item value","params":{"key":{"type":"String","desc":"Entry key","required":true,"examples":["userId"]}},"returns":{"type":["Date","RegExp","Number","Boolean","Function","Object","Array","String","null"],"desc":"Storage item value","examples":["john12",702]}},"getIndex":{"tsType":"WebStorageGetIndexMethodType","desc":"Get the storage item value at specific index","params":{"index":{"type":"Number","desc":"Entry index","required":true,"examples":[5]}},"returns":{"type":["Number","null"],"desc":"Storage item index","examples":[7]}},"getKey":{"tsType":"WebStorageGetKeyMethodType","desc":"Get the storage key at specific index","params":{"index":{"type":"Number","desc":"Entry index","required":true,"examples":[5]}},"returns":{"type":["String","null"],"desc":"Storage key","examples":["userId"]},"addedIn":"v1.9.4"},"getAll":{"desc":"Retrieve all items in storage","returns":{"type":"Object","desc":"Object syntax: item name as Object key and its value","examples":["{ userId: \'jon12\', timesLoggedIn: 14 }"]}},"getAllKeys":{"tsType":"WebStorageGetAllKeysMethodType","desc":"Retrieve all keys in storage","returns":{"type":"Array","desc":"Storage keys (Array of Strings)","examples":["[\'userId\', \'password\']"]},"addedIn":"v1.9.4"},"set":{"desc":"Set item in storage","params":{"key":{"type":"String","desc":"Entry key","required":true,"examples":["userId"]},"value":{"type":["Date","RegExp","Number","Boolean","Function","Object","Array","String","null"],"desc":"Entry value","required":true,"examples":["john12"]}}},"remove":{"desc":"Remove a storage item","params":{"key":{"type":"String","desc":"Storage key","required":true,"examples":["userId"]}}},"clear":{"desc":"Remove everything from the storage"},"isEmpty":{"desc":"Determine if storage has any items","returns":{"type":"Boolean","desc":"Tells if storage is empty or not"}}}}')},decf:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},df20:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/meta"}}')},e038:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/stepper"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"name":{"type":"Any","desc":"Panel name","required":true,"examples":["accounts","firstPanel",":name=\\"1\\""],"category":"general"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"header"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"title":{"type":"String","desc":"Step title","required":true,"examples":["Ad Groups","Payment"],"category":"header"},"caption":{"type":"String","desc":"Step’s additional information that appears beneath the title","examples":["Create an account","Payment details"],"category":"header"},"prefix":{"type":["String","Number"],"desc":"Step\'s prefix (max 2 characters) which replaces the icon if step does not has error, is being edited or is marked as done","examples":["1","2","A","B"],"category":"header"},"done-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"header"},"done-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"header"},"active-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"header"},"active-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"header"},"error-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"header"},"error-color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"header"},"header-nav":{"type":"Boolean","default":true,"desc":"Allow navigation through the header","category":"behavior"},"done":{"type":"Boolean","desc":"Mark the step as \'done\'","category":"state"},"error":{"type":"Boolean","desc":"Mark the step as having an error","category":"state"}},"slots":{"default":{"desc":"The content of the step; Can also contain a QStepperNavigation if you want to handle step navigation and don\'t have a global navigation in place"}}}')},e0d2:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/color-picker"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"value":{"desc":"Model of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model","type":"String","examples":["v-model=\\"myColor\\""]},"default-value":{"type":"String","desc":"The default value to show when the model doesn\'t have one","examples":["default-value=\\"#c0c0c0\\""],"category":"model"},"default-view":{"type":"String","desc":"The default view of the picker","default":"spectrum","values":["spectrum","tune","palette"],"category":"behavior"},"format-model":{"type":"String","desc":"Forces a certain model format upon the model","default":"auto","values":["auto","hex","rgb","hexa","rgba"],"examples":["hex"],"category":"model"},"palette":{"type":"Array","desc":"Use a custom palette of colors for the palette tab","default":"(hard-coded palette)","examples":[":palette=\\"[ \'#019A9D\', \'#D9B801\', \'rgb(23,120,0)\', \'#B2028A\' ]\\""],"category":"content"},"square":{"type":"Boolean","desc":"Removes border-radius so borders are squared","category":"style","addedIn":"v1.5.2"},"flat":{"type":"Boolean","desc":"Applies a \'flat\' design (no default shadow)","category":"style","addedIn":"v1.5.2"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style","addedIn":"v1.5.2"},"no-header":{"type":"Boolean","desc":"Do not render header","category":"content"},"no-footer":{"type":"Boolean","desc":"Do not render footer; Useful when you want a specific view (\'default-view\' prop) and don\'t want the user to be able to switch it","category":"content"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"Any","desc":"New model value","required":true}}},"change":{"desc":"Emitted on lazy model value change (after user finishes selecting a color)","params":{"value":{"type":"Any","desc":"New model value","required":true}}}}}')},e2ed:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/timeline"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"side":{"type":"String","desc":"Side to place the timeline entries in dense and comfortable layout; For loose layout it gets overridden by QTimelineEntry side prop","default":"right","values":["left","right"],"category":"behavior"},"layout":{"type":"String","desc":"Layout of the timeline. Dense keeps content and labels on one side. Comfortable keeps content on one side and labels on the opposite side. Loose puts content on both sides.","default":"dense","values":["dense","comfortable","loose"],"category":"behavior"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"}},"slots":{"default":{"desc":"Used for content of component"}}}')},e3ff:function(e){e.exports=JSON.parse('{"type":"directive","meta":{"docsUrl":"https://v1.quasar.dev/vue-directives/scroll"},"value":{"type":"Function","desc":"Function to call when scrolling occurs (use a non-function to disable)","params":{"verticalScrollPosition":{"type":"Number","desc":"Scroll offset from top","examples":[350]},"horizontalScrollPosition":{"type":"Number","desc":"Scroll offset from left","examples":[350]}},"returns":null,"examples":["v-scroll=\\"fnToCall\\"","v-scroll=\\"void 0\\""]}}')},e714:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/img"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"ratio":{"type":["String","Number","String","Number"],"desc":"Force the component to maintain an aspect ratio","examples":[":ratio=\\"4/3\\"",":ratio=\\"16/9\\"","ratio=\\"1\\"","(Number format) :ratio=\\"16/9\\"","(String format) ratio=\\"1\\""],"category":"content"},"src":{"type":"String","desc":"Path to image","transformAssetUrls":true,"examples":["(statics folder) src=\\"statics/img/something.png\\"","(assets folder) src=\\"~assets/my-img.gif\\"","(relative path format) :src=\\"require(\'./my_img.jpg\')\\"","(URL) src=\\"https://placeimg.com/500/300/nature\\""],"category":"model"},"srcset":{"type":"String","desc":"Same syntax as <img> srcset attribute.","link":"https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images#Resolution_switching_Different_sizes","examples":["elva-fairy-320w.jpg 320w, elva-fairy-480w.jpg 480w"],"category":"model"},"sizes":{"type":"String","desc":"Same syntax as <img> sizes attribute.","link":"https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images#Resolution_switching_Different_sizes","examples":["(max-width: 320px) 280px, (max-width: 480px) 440px, 800px"],"category":"model"},"width":{"type":"String","desc":"Forces image width; Must also include the unit (px or %)","examples":["280px","70%"],"category":"model","addedIn":"v1.9.0"},"height":{"type":"String","desc":"Forces image height; Must also include the unit (px or %)","examples":["280px","70%"],"category":"model","addedIn":"v1.9.0"},"alt":{"type":"String","desc":"Specifies an alternate text for the image, if the image cannot be displayed","examples":["Two cats"],"category":"content"},"placeholder-src":{"type":"String","desc":"While waiting for your image to load, you can use a placeholder image","transformAssetUrls":true,"examples":["(statics folder) src=\\"statics/img/some-placeholder.png\\"","(assets folder) src=\\"~assets/my-placeholder.gif\\"","(relative path format) :src=\\"require(\'./placeholder.jpg\')\\"","(URL) src=\\"https://placeimg.com/500/300/nature\\""],"category":"model"},"basic":{"type":"Boolean","desc":"Do not use transitions; faster render","category":"content"},"contain":{"type":"Boolean","desc":"Make sure that the image getting displayed is fully contained, regardless if additional blank space besides the image is needed on horizontal or vertical","category":"content"},"position":{"type":"String","desc":"Equivalent to CSS background-position property","default":"50% 50%","examples":["0 0","20px 50px"],"category":"content"},"transition":{"type":"String","desc":"One of Quasar\'s embedded transitions","examples":["fade","slide-down"],"category":"behavior","default":"fade"},"img-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the container of image; Does not apply to the caption","examples":["my-special-class",":img-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style","addedIn":"v1.4.0"},"img-style":{"type":"Object","desc":"Apply CSS to the container of the image; Does not apply to the caption","examples":[":img-style=\\"{ transform: \'rotate(45deg)\' }\\" "],"category":"style","addedIn":"v1.5.11"},"spinner-color":{"type":"String","desc":"Color name for default Spinner (unless using a \'loading\' slot)","examples":["primary","teal-10"],"category":"style"},"spinner-size":{"type":"String","desc":"Size in CSS units, including unit name, for default Spinner (unless using a \'loading\' slot)","examples":["16px","2rem"],"category":"style"},"no-default-spinner":{"type":"Boolean","desc":"Do not display the default spinner when loading images (unless you are specifying one through the \'loading\' slot)","category":"content","addedIn":"v1.1.0"},"native-context-menu":{"type":"Boolean","desc":"Enable the native context menu of the image","category":"behavior","addedIn":"v1.8.4"}},"slots":{"default":{"desc":"Default slot can be used for captions. See examples"},"loading":{"desc":"While image is loading, this slot is being displayed on top of the component; Suggestions: a spinner or text"},"error":{"desc":"Optional slot to be used when image could not be loaded; make sure you assign a min-height and min-width to the component through CSS"}},"events":{"load":{"desc":"Emitted when image has been loaded by the browser","params":{"src":{"type":"String","desc":"URL of image that has been loaded; useful when using \'srcset\' and/or \'sizes\'","examples":["https://some-site.net/some-img.gif"]}}},"error":{"desc":"Emitted when browser could not load the image","params":{"src":{"type":"Error","desc":"JS Error object"}}}}}')},e94a:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/separator"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"spaced":{"type":["Boolean","String"],"desc":"If set to true, the corresponding direction margins will be set to 8px; It can also be set to a size in CSS units, including unit name, or one of the xs|sm|md|lg|xl predefined sizes","default":"md","examples":["12px","sm","md"],"category":"content"},"inset":{"type":["Boolean","String"],"desc":"if set to true, the left and right margins will be set to 16px. If set to item, the left and right margins will be set to 72px. If set to item-thumbnail, the left margin is set to 116px and right margin is set to 0px","examples":["item","item-thumbnail"],"category":"content"},"vertical":{"type":"Boolean","desc":"If set to true, the separator will be vertical.","category":"content"},"size":{"type":"String","desc":"Size in CSS units, including unit name","examples":["16px","2rem"],"category":"style","addedIn":"v1.12.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},ea25:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/loading-bar"},"injection":"$q.loadingBar","quasarConfOptions":{"propName":"loadingBar","definition":{"...props":{"type":"Object","desc":"QAjaxBar component props"}}},"methods":{"start":{"desc":"Notify bar you\'ve started a background activity","params":{"speed":{"type":"Number","desc":"Delay (in milliseconds) between bar progress increments","examples":[150]}}},"stop":{"desc":"Notify bar one background activity has finalized"},"increment":{"desc":"Manually trigger a bar progress increment","params":{"amount":{"type":"Number","desc":"Amount (0.0 < x < 1.0) to increment with","examples":[0.22]}}},"setDefaults":{"desc":"Set the inner QAjaxBar\'s props","params":{"...props":{"type":"Object","desc":"QAjaxBar component props","required":true}}}}}')},f1a4:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"}}}')},f1eb:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/button"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"ripple":{"type":["Boolean","Object"],"desc":"Configure material ripple (disable it by setting it to \'false\' or supply a config object)","default":true,"examples":[false,"{ early: true, center: true, color: \'teal\', keyCodes: [] }"],"category":"style"},"type":{"type":"String","desc":"Define the button HTML DOM type","default":"button","values":["a","submit","button","reset"],"examples":["type=\\"a\\" href=\\"http://some-site.net\\" target=\\"__blank\\""],"category":"general"},"to":{"type":["String","Object"],"desc":"Equivalent to Vue Router <router-link> \'to\' property","examples":["/home/dashboard",":to=\\"{ name: \'my-route-name\' }\\""],"category":"router"},"replace":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'replace\' property","category":"router"},"label":{"type":["String","Number"],"desc":"The text that will be shown on the button","examples":["Button Label"],"category":"content"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"icon-right":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"outline":{"type":"Boolean","desc":"Use \'outline\' design","category":"style"},"flat":{"type":"Boolean","desc":"Use \'flat\' design","category":"style"},"unelevated":{"type":"Boolean","desc":"Remove shadow","category":"style"},"rounded":{"type":"Boolean","desc":"Applies a more prominent border-radius for a squared shape button","category":"style"},"push":{"type":"Boolean","desc":"Use \'push\' design","category":"style"},"glossy":{"type":"Boolean","desc":"Applies a glossy effect","category":"style"},"fab":{"type":"Boolean","desc":"Makes button size and shape to fit a Floating Action Button","category":"style"},"fab-mini":{"type":"Boolean","desc":"Makes button size and shape to fit a small Floating Action Button","category":"style"},"padding":{"type":"String","desc":"Apply custom padding (vertical [horizontal]); Size in CSS units, including unit name or standard size name (none|xs|sm|md|lg|xl); Also removes the min width and height when set","examples":["16px","10px 5px","2rem","xs","md lg","2px 2px 5px 7px"],"category":"style","addedIn":"v1.11.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"no-caps":{"type":"Boolean","desc":"Avoid turning label text into caps (which happens by default)","category":"content"},"no-wrap":{"type":"Boolean","desc":"Avoid label text wrapping","category":"content"},"dense":{"type":"Boolean","desc":"Dense mode; occupies less space","category":"style"},"tabindex":{"type":["Number","String"],"desc":"Tabindex HTML attribute value","examples":["0","100"],"category":"general"},"align":{"type":"String","desc":"Label or content alignment","default":"center","values":["left","right","center","around","between","evenly"],"category":"content"},"stack":{"type":"Boolean","desc":"Stack icon and label vertically instead of on same line (like it is by default)","category":"content"},"stretch":{"type":"Boolean","desc":"When used on flexbox parent, button will stretch to parent\'s height","category":"content"},"loading":{"type":"Boolean","desc":"Put button into loading state (displays a QSpinner -- can be overridden by using a \'loading\' slot)","category":"behavior|state"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"round":{"type":"Boolean","desc":"Makes a circle shaped button","category":"style"},"percentage":{"type":"Number","desc":"Percentage (0.0 < x < 100.0); To be used along \'loading\' prop; Display a progress bar on the background","examples":[23],"category":"behavior"},"dark-percentage":{"type":"Boolean","desc":"Progress bar on the background should have dark color; To be used along with \'percentage\' and \'loading\' props","category":"behavior"}},"slots":{"default":{"desc":"Use for custom content, instead of relying on \'icon\' and \'label\' props"},"loading":{"desc":"Override the default QSpinner when in \'loading\' state"}},"methods":{"click":{"desc":"Emulate click on QBtn","params":{"evt":{"type":"Object","desc":"JS event object"}}}}}')},f284:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/carousel"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"position":{"type":"String","desc":"Side/corner to stick to","default":"bottom-right","values":["top-right","top-left","bottom-right","bottom-left","top","right","bottom","left"],"examples":["top-right"],"category":"position"},"offset":{"type":"Array","desc":"An array of two numbers to offset the component horizontally and vertically (in pixels)","default":"[18, 18]","examples":["[8, 8]","[5, 10]"],"category":"position"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component"}}}')},f28d:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/uploader"},"props":{"multiple":{"type":"Boolean","desc":"Allow multiple file uploads","category":"behavior"},"accept":{"type":"String","desc":"Comma separated list of unique file type specifiers. Maps to \'accept\' attribute of native input type=file element","examples":[".jpg, .pdf, image/*","image/jpeg, .pdf"],"category":"behavior"},"capture":{"type":"String","desc":"Optionally, specify that a new file should be captured, and which device should be used to capture that new media of a type defined by the \'accept\' prop. Maps to \'capture\' attribute of native input type=file element","values":["user","environment"],"category":"behavior","addedIn":"v1.12.6"},"max-file-size":{"type":["Number","String"],"desc":"Maximum size of individual file in bytes","examples":[1024,1048576],"category":"behavior"},"max-total-size":{"type":["Number","String"],"desc":"Maximum size of all files combined in bytes","examples":[1024,1048576],"category":"behavior"},"max-files":{"type":["Number","String"],"desc":"Maximum number of files to contain","examples":[":max-files=\\"5\\"","10"],"category":"behavior","addedIn":"v1.11.2"},"filter":{"type":"Function","desc":"Custom filter for added files; Only files that pass this filter will be added to the queue and uploaded; For best performance, reference it from your scope and do not define it inline","params":{"files":{"type":["FileList","Array"],"desc":"Candidate files to be added to queue"}},"returns":{"type":"Array","desc":"Filtered files to be added to queue"},"examples":[":filter=\\"files => files.filter(file => file.size === 1024)\\""],"category":"behavior"},"label":{"type":"String","desc":"Label for the uploader","examples":["Upload photo here"],"category":"content"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"square":{"type":"Boolean","desc":"Removes border-radius so borders are squared","category":"style"},"flat":{"type":"Boolean","desc":"Applies a \'flat\' design (no default shadow)","category":"style"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style"},"no-thumbnails":{"type":"Boolean","desc":"Don\'t display thumbnails for image files","category":"content"},"auto-upload":{"type":"Boolean","desc":"Upload files immediately when added","category":"behavior"},"hide-upload-btn":{"type":"Boolean","desc":"Don\'t show the upload button","category":"behavior"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"factory":{"type":"Function","desc":"Function which should return an Object or a Promise resolving with an Object; For best performance, reference it from your scope and do not define it inline","params":{"files":{"type":"Array","desc":"Uploaded files"}},"returns":{"type":["Object","Promise"],"desc":"Optional configuration for the upload process; You can override QUploader props in this Object (url, method, headers, formFields, fieldName, withCredentials, sendRaw); Props of these Object can also be Functions with the form of (file[s]) => value"},"category":"upload"},"url":{"type":["String","Function"],"desc":"URL or path to the server which handles the upload. Takes String or factory function, which returns String. Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline","examples":["https://example.com/path","files => `https://example.com?count=${files.length}`"],"category":"upload"},"method":{"type":["String","Function"],"default":"POST","desc":"HTTP method to use for upload; Takes String or factory function which returns a String; Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline","values":["POST","PUT"],"examples":["POST",":method=\\"files => files.length > 10 ? \'POST\' : \'PUT\'\\""],"category":"upload"},"field-name":{"type":["String","Function"],"desc":"Field name for each file upload; This goes into the following header: \'Content-Disposition: form-data; name=\\"__HERE__\\"; filename=\\"somefile.png\\"; If using a function then for best performance, reference it from your scope and do not define it inline","default":"(file) => file.name","examples":["backgroundFile",":field-name=\\"(file) => \'background\' + file.name\\""],"category":"upload"},"headers":{"type":["Array","Function"],"desc":"Array or a factory function which returns an array; Array consists of objects with header definitions; Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline","definition":{"name":{"type":"String","required":true,"desc":"Header name","examples":["Content-Type","Accept","Cache-Control"]},"value":{"type":"String","required":true,"desc":"Header value","examples":["application/json","no-cache"]}},"examples":["[{name: \'Content-Type\', value: \'application/json\'}, {name: \'Accept\', value: \'application/json\'}]","() => [{name: \'X-Custom-Timestamp\', value: Date.now()}]","files => [{name: \'X-Custom-Count\', value: files.length}]"],"category":"upload"},"form-fields":{"type":["Array","Function"],"desc":"Array or a factory function which returns an array; Array consists of objects with additional fields definitions (used by Form to be uploaded); Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline","definition":{"name":{"type":"String","required":true,"desc":"Field name","examples":["Some field"]},"value":{"type":"String","required":true,"desc":"Field value","examples":["some-value"]}},"examples":["[{name: \'my-field\', value: \'my-value\'}]","() => [{name: \'my-field\', value: \'my-value\'}]","files => [{name: \'my-field\', value: \'my-value\' + files.length}]"],"category":"upload"},"with-credentials":{"type":["Boolean","Function"],"desc":"Sets withCredentials to true on the XHR that manages the upload; Takes boolean or factory function for Boolean; Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline","examples":["with-credentials",":with-credentials=\\"files => ...\\""],"category":"upload"},"send-raw":{"type":["Boolean","Function"],"desc":"Send raw files without wrapping into a Form(); Takes boolean or factory function for Boolean; Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline","examples":["send-raw",":send-raw=\\"files => ...\\""],"category":"upload"},"batch":{"type":["Boolean","Function"],"desc":"Upload files in batch (in one XHR request); Takes boolean or factory function for Boolean; Function is called right before upload; If using a function then for best performance, reference it from your scope and do not define it inline","examples":["files => files.length > 10"],"category":"upload"}},"scopedSlots":{"header":{"desc":"Slot for custom header; Scope is the QUploader instance itself"},"list":{"desc":"Slot for custom list; Scope is the QUploader instance itself"}},"events":{"rejected":{"desc":"Emitted after files are picked and some do not pass the validation props (accept, max-file-size, max-total-size, filter, etc)","params":{"rejectedEntries":{"type":"Array","desc":"Array of { failedPropValidation: string, file: File } Objects for files that do not pass the validation"}},"addedIn":"v1.11.2"},"added":{"desc":"Emitted when files are added into the list","params":{"files":{"type":"Array","desc":"Array of files that were added"}}},"removed":{"desc":"Emitted when files are removed from the list","params":{"files":{"type":"Array","desc":"Array of files that were removed"}}},"start":{"desc":"Started working"},"finish":{"desc":"Finished working (regardless of success or fail)"},"uploaded":{"desc":"Emitted when file or batch of files is uploaded","params":{"info":{"type":"Object","desc":"Object containing information about the event","definition":{"files":{"type":"Array","desc":"Uploaded files"},"xhr":{"type":"Object","desc":"XMLHttpRequest that has been used to upload this batch of files"}}}}},"failed":{"desc":"Emitted when file or batch of files has encountered error while uploading","params":{"info":{"type":"Object","desc":"Object containing information about the event","definition":{"files":{"type":"Array","desc":"Files which encountered error"},"xhr":{"type":"Object","desc":"XMLHttpRequest that has been used to upload this batch of files"}}}}},"uploading":{"desc":"Emitted when file or batch of files started uploading","params":{"info":{"type":"Object","desc":"Object containing information about the event","definition":{"files":{"type":"Array","desc":"Files which are now uploading"},"xhr":{"type":"Object","desc":"XMLHttpRequest used for uploading"}}}}},"factory-failed":{"desc":"Emitted when factory function is supplied with a Promise which is rejected","params":{"err":{"type":"Object","desc":"Error Object which is the Promise rejection reason"},"files":{"type":"Array","desc":"Files which were to get uploaded"}}}},"methods":{"pickFiles":{"desc":"Trigger file pick; Must be called as a direct consequence of user interaction (eg. in a click handler), due to browsers security policy","params":{"evt":{"type":"Object","desc":"JS event object"}}},"addFiles":{"desc":"Add files programmatically","params":{"files":{"type":["FileList","Array"],"desc":"Array of files (instances of File)","required":true}}},"reset":{"desc":"Resets uploader to default; Empties queue, aborts current uploads"},"removeUploadedFiles":{"desc":"Removes already uploaded files from the list"},"removeQueuedFiles":{"desc":"Remove files that are waiting for upload to start (same as clicking the left clear button)"},"removeFile":{"desc":"Remove specified file from the queue","params":{"file":{"type":"Object","desc":"File to remove (instance of File)","required":true}}},"abort":{"desc":"Abort upload of all files (same as clicking the abort button)"},"upload":{"desc":"Start uploading (same as clicking the upload button)"}}}')},f5a0:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/time"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"name":{"type":"String","desc":"Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL","examples":["car_id"],"category":"behavior","addedIn":"v1.9.0"},"value":{"desc":"Time of the component; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model","type":"String","required":true,"examples":["v-model=\\"currentTime\\""]},"landscape":{"type":"Boolean","desc":"Display the component in landscape mode","category":"behavior"},"mask":{"type":"String","desc":"Mask (formatting string) used for parsing and formatting value","category":"model","default":"HH:mm","examples":["HH:mm:ss","YYYY-MM-DD HH:mm:ss","HH:mm MMMM Do, YYYY"]},"locale":{"type":"Object","desc":"Locale formatting options","examples":[":locale=\\"{ monthsShort: [\'Ian\', \'Feb\', \'Mar\', \'...\'] }\\""],"definition":{"days":{"type":"Array","desc":"List of full day names (DDDD), starting with Sunday","examples":["[\'Duminica\', \'Luni\', \'Marti\', \'...\']"]},"daysShort":{"type":"Array","desc":"List of short day names (DDD), starting with Sunday","examples":["[\'Dum\', \'Lun\', \'Mar\', \'...\']"]},"months":{"type":"Array","desc":"List of full month names (MMMM), starting with January","examples":["[\'Ianuarie\', \'Februarie\', \'Martie\', \'...\']"]},"monthsShort":{"type":"Array","desc":"List of short month names (MMM), starting with January","examples":["[\'Ian\', \'Feb\', \'Mar\', \'...\']"]}},"category":"model"},"calendar":{"type":"String","desc":"Specify calendar type","default":"gregorian","values":["gregorian","persian"],"category":"model"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style"},"square":{"type":"Boolean","desc":"Removes border-radius so borders are squared","category":"style","addedIn":"v1.1.5"},"flat":{"type":"Boolean","desc":"Applies a \'flat\' design (no default shadow)","category":"style","addedIn":"v1.1.5"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style","addedIn":"v1.1.5"},"readonly":{"type":"Boolean","desc":"Put component in readonly mode","category":"state"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"format24h":{"type":"Boolean","desc":"Forces 24 hour time display instead of AM/PM system","default":"(based on Quasar lang language being used)","category":"behavior"},"default-date":{"type":"String","desc":"The default date to use (in YYYY/MM/DD format) when model is unfilled (undefined or null)","default":"current day","examples":["1995/02/23"],"category":"model","addedIn":"v1.9.0"},"options":{"type":"Function","desc":"Optionally configure what time is the user allowed to set; Overridden by \'hour-options\', \'minute-options\' and \'second-options\' if those are set; For best performance, reference it from your scope and do not define it inline","params":{"hr":{"type":"Number","desc":"Hour","examples":[15]},"min":{"type":"Number","desc":"Minutes","examples":[38]},"sec":{"type":"Number","desc":"Seconds","examples":[12]}},"returns":null,"examples":[":options=\\"(hr, min, sec) => hr <= 6\\""],"category":"behavior"},"hour-options":{"type":"Array","desc":"Optionally configure what hours is the user allowed to set; Overrides \'options\' prop if that is also set","examples":[":hour-options=\\"[ 3, 6, 9 ]\\""],"category":"behavior"},"minute-options":{"type":"Array","desc":"Optionally configure what minutes is the user allowed to set; Overrides \'options\' prop if that is also set","examples":[":minute-options=\\"[0, 15, 30, 45]\\""],"category":"behavior"},"second-options":{"type":"Array","desc":"Optionally configure what seconds is the user allowed to set; Overrides \'options\' prop if that is also set","examples":[":second-options=\\"[0, 7, 10, 23]\\""],"category":"behavior"},"with-seconds":{"type":"Boolean","desc":"Allow the time to be set with seconds","category":"model|behavior"},"now-btn":{"type":"Boolean","desc":"Display a button that selects the current time","category":"content"}},"slots":{"default":{"desc":"This is where additional buttons can go","addedIn":"v1.2.8"}},"events":{"input":{"desc":"Emitted when the component needs to change the model; Is also used by v-model","params":{"value":{"type":"String","desc":"New model value","required":true},"details":{"type":"Object","desc":"Object of properties on the new model","definition":{"year":{"type":"Number","desc":"The year"},"month":{"type":"Number","desc":"The month"},"day":{"type":"Number","desc":"The day of the month"},"hour":{"type":"Number","desc":"The hour"},"minute":{"type":"Number","desc":"The minute"},"second":{"type":"Number","desc":"The second"},"millisecond":{"type":"Number","desc":"The millisecond"},"changed":{"type":"Boolean","desc":"Did the model change?","addedIn":"v1.1.1"}}}}}},"methods":{"setNow":{"desc":"Change model to current moment","addedIn":"v1.1.7"}}}')},fa88:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/floating-action-button"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"type":{"type":"String","desc":"Define the button HTML DOM type","default":"a","values":["a","submit","button","reset"],"category":"general"},"outline":{"type":"Boolean","desc":"Use \'outline\' design for Fab button","category":"style"},"push":{"type":"Boolean","desc":"Use \'push\' design for Fab button","category":"style"},"flat":{"type":"Boolean","desc":"Use \'flat\' design for Fab button","category":"style"},"unelevated":{"type":"Boolean","desc":"Remove shadow","category":"style","addedIn":"v1.9.0"},"padding":{"type":"String","desc":"Apply custom padding (vertical [horizontal]); Size in CSS units, including unit name or standard size name (none|xs|sm|md|lg|xl); Also removes the min width and height when set","examples":["16px","10px 5px","2rem","xs","md lg"],"category":"style","addedIn":"v1.11.0"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"text-color":{"type":"String","desc":"Overrides text color (if needed); Color name from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"glossy":{"type":"Boolean","desc":"Apply the glossy effect over the button","category":"style"},"external-label":{"type":"Boolean","desc":"Display label besides the FABs, as external content","category":"style|content","addedIn":"v1.9.0"},"label":{"type":["String","Number"],"desc":"The label that will be shown when Fab is extended","default":"","examples":["Button Label"],"category":"content","addedIn":"v1.9.0"},"label-position":{"type":"String","desc":"Position of the label around the icon","values":["top","right","bottom","left"],"category":"style|content","addedIn":"v1.9.0"},"hide-label":{"type":"Boolean","desc":"Hide the label; Useful for animation purposes where you toggle the visibility of the label","category":"style|content","addedIn":"v1.9.0"},"label-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the label container","examples":["my-special-class",":input-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style","addedIn":"v1.9.0"},"label-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the label container","examples":["background-color: #ff0000",":input-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style","addedIn":"v1.9.0"},"square":{"type":"Boolean","desc":"Apply a rectangle aspect to the FAB","category":"style","addedIn":"v1.9.0"},"disable":{"type":"Boolean","desc":"Put component in disabled mode","category":"state"},"icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"anchor":{"type":"String","desc":"How to align the Fab Action relative to Fab expand side; By default it uses the align specified in QFab","values":["start","center","end"],"category":"style|content","addedIn":"v1.9.0"},"to":{"type":["String","Object"],"desc":"Equivalent to Vue Router <router-link> \'to\' property","examples":["/home/dashboard",":to=\\"{ name: \'my-route-name\' }\\""],"category":"router"},"replace":{"type":"Boolean","desc":"Equivalent to Vue Router <router-link> \'replace\' property","category":"router"}},"slots":{"default":{"desc":"Suggestion for this slot: QTooltip"}},"events":{"click":{"desc":"Emitted when user clicks/taps on the component","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}}},"methods":{"click":{"desc":"Emulate click on QFabAction","params":{"evt":{"type":"Object","desc":"JS event object"}}}}}')},fd20:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/spinners"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"size":{"type":"String","desc":"Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)","examples":["16px","2rem","xs","md"],"category":"style"},"color":{"type":"String","desc":"Color name for component from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"thickness":{"type":"Number","desc":"Override value to use for stroke-width","default":5,"examples":["2","5"],"category":"style"}}}')},fd8e:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/layout/drawer"},"props":{"value":{"type":"Boolean","desc":"Model of the component defining shown/hidden state; Either use this property (along with a listener for \'input\' event) OR use v-model directive","category":"model"},"side":{"type":"String","desc":"Side to attach to","values":["left","right"],"default":"left","examples":["right"],"category":"behavior"},"overlay":{"type":"Boolean","desc":"Puts drawer into overlay mode (does not occupy space on screen, narrowing the page)","category":"behavior"},"width":{"type":"Number","desc":"Width of drawer (in pixels)","default":300,"examples":[":width=\\"350\\""],"category":"style"},"mini":{"type":"Boolean","desc":"Puts drawer into mini mode","category":"behavior"},"mini-width":{"type":"Number","desc":"Width of drawer (in pixels) when in mini mode","default":60,"examples":[":mini-width=\\"100\\""],"category":"style"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style","addedIn":"v1.3.0"},"mini-to-overlay":{"type":"Boolean","desc":"Mini mode will expand as an overlay","category":"behavior"},"breakpoint":{"type":"Number","desc":"Breakpoint (in pixels) of layout width up to which mobile mode is used","default":1023,"examples":[1200,":breakpoint=\\"1400\\""],"category":"behavior"},"behavior":{"type":"String","desc":"Overrides the default dynamic mode into which the drawer is put on","values":["default","desktop","mobile"],"default":"default","examples":["mobile"],"category":"behavior"},"bordered":{"type":"Boolean","desc":"Applies a default border to the component","category":"style"},"elevated":{"type":"Boolean","desc":"Adds a default shadow to the header","category":"style"},"persistent":{"type":"Boolean","desc":"Does not auto-closes when app\'s route changes","category":"behavior"},"show-if-above":{"type":"Boolean","desc":"Force drawer to be shown on screen on initial render if the layout width is above breakpoint, regardless of v-model; This is the default behavior when SSR is taken over by client on initial render","category":"behavior"},"content-class":{"type":["Array","String","Object"],"desc":"Class definitions to be attributed to the drawer","examples":["my-special-class",":content-class=\\"{ \'my-special-class\': <condition> }\\""],"category":"style"},"content-style":{"type":["Array","String","Object"],"desc":"Style definitions to be attributed to the drawer","examples":["background-color: #ff0000",":content-style=\\"{ backgroundColor: \'#ff0000\' }\\""],"category":"style"},"no-swipe-open":{"type":"Boolean","desc":"Disables the default behavior where drawer can be swiped into view; Useful for iOS platforms where it might interfere with Safari\'s \'swipe to go to previous/next page\' feature","category":"behavior"},"no-swipe-close":{"type":"Boolean","desc":"Disables the default behavior where drawer can be swiped out of view (applies to drawer content only); Useful for iOS platforms where it might interfere with Safari\'s \'swipe to go to previous/next page\' feature","category":"behavior"},"no-swipe-backdrop":{"type":"Boolean","desc":"Disable the default behavior where drawer backdrop can be swiped","category":"behavior","addedIn":"v1.1.7"}},"slots":{"default":{"desc":"Default slot in the devland unslotted content of the component (overridden by \'mini\' slot if used and drawer is in mini mode)"},"mini":{"desc":"Content to show when in mini mode (overrides \'default\' slot)"}},"events":{"input":{"desc":"Emitted when showing/hidden state changes; Is also used by v-model","params":{"value":{"type":"Boolean","desc":"New state (showing/hidden)"}}},"show":{"desc":"Emitted after component has triggered show()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-show":{"desc":"Emitted when component triggers show() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"hide":{"desc":"Emitted after component has triggered hide()","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"before-hide":{"desc":"Emitted when component triggers hide() but before it finishes doing it","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"on-layout":{"desc":"Emitted when drawer toggles between occupying space on page or not","params":{"state":{"type":"Boolean","desc":"New state"}}},"click":{"desc":"Emitted when user clicks/taps on the component and drawer is NOT in mobile mode; Useful for when taking a decision to toggle mini mode","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"mouseover":{"desc":"Emitted when user moves mouse cursor over the component and drawer is NOT in mobile mode; Useful for when taking a decision to toggle mini mode","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"mouseout":{"desc":"Emitted when user moves mouse cursor out of the component and drawer is NOT in mobile mode; Useful for when taking a decision to toggle mini mode","params":{"evt":{"type":"Object","desc":"JS event object","required":true}}},"mini-state":{"desc":"Emitted when drawer changes the mini-mode state (sometimes it is forced to do so)","params":{"state":{"type":"Boolean","desc":"New state"}},"addedIn":"v1.1.3"}},"methods":{"show":{"desc":"Triggers component to show","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"hide":{"desc":"Triggers component to hide","params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}}},"toggle":{"params":{"evt":{"type":"Object","required":false,"desc":"JS event object"}},"desc":"Triggers component to toggle between show/hide"}}}')},ff6a:function(e){e.exports=JSON.parse('{"type":"plugin","meta":{"docsUrl":"https://v1.quasar.dev/quasar-plugins/app-fullscreen"},"injection":"$q.fullscreen","props":{"isCapable":{"type":"Boolean","desc":"Does browser support it?"},"isActive":{"type":"Boolean","desc":"Is Fullscreen active?","reactive":true},"activeEl":{"type":"Object","desc":"The DOM element used as root for fullscreen, otherwise \'null\'","addedIn":"v1.12.5"}},"methods":{"request":{"desc":"Request going into Fullscreen (with optional target)","params":{"target":{"type":"String","desc":"Optional CSS selector of target to request Fullscreen on","examples":["div.dashboard div.description"]}},"returns":{"type":"Promise<any>","desc":"A Promise with the outcome (true -> validation was a success, false -> invalid models detected)","examples":["request().then(response => { ... }).catch(err => { ... })"]}},"exit":{"desc":"Request exiting out of Fullscreen mode","returns":{"type":"Promise<any>","desc":"A Promise with the outcome (true -> validation was a success, false -> invalid models detected)","examples":["exit().then(response => { ... }).catch(err => { ... })"]}},"toggle":{"desc":"Request toggling Fullscreen mode (with optional target if requesting going into Fullscreen only)","params":{"target":{"type":"String","desc":"Optional CSS selector of target to request Fullscreen on","examples":["div.dashboard div.description"]}},"returns":{"type":"Promise<any>","desc":"A Promise with the outcome (true -> validation was a success, false -> invalid models detected)","examples":["toggle().then(response => { ... }).catch(err => { ... })"]}}}}')},ffb6:function(e){e.exports=JSON.parse('{"type":"component","meta":{"docsUrl":"https://v1.quasar.dev/vue-components/carousel"},"behavior":{"$listeners":{"desc":"All native events are being propagated (you don\'t need the \'.native\' modifier)"}},"props":{"fullscreen":{"type":"Boolean","sync":true,"desc":"Fullscreen mode","examples":[":fullscreen.sync=\\"isFullscreen\\""],"category":"behavior"},"no-route-fullscreen-exit":{"type":"Boolean","desc":"Changing route app won\'t exit fullscreen","category":"behavior","addedIn":"v1.1.7"},"value":{"type":"Any","desc":"Model of the component defining the current panel\'s name; If a Number is used, it does not define the panel\'s index, but rather the panel\'s name which can also be an Integer; Either use this property (along with a listener for \'input\' event) OR use the v-model directive.","examples":["v-model=\\"panelName\\""],"category":"model"},"keep-alive":{"type":"Boolean","desc":"Equivalent to using Vue\'s native <keep-alive> component on the content","category":"behavior"},"animated":{"type":"Boolean","desc":"Enable transitions between panel (also see \'transition-prev\' and \'transition-next\' props)","category":"behavior"},"infinite":{"type":"Boolean","desc":"Makes component appear as infinite (when reaching last panel, next one will become the first one)","category":"behavior"},"swipeable":{"type":"Boolean","desc":"Enable swipe events (may interfere with content\'s touch/mouse events)","category":"behavior"},"vertical":{"type":"Boolean","desc":"Default transitions and swipe actions will be on the vertical axis","category":"behavior"},"transition-prev":{"type":"String","desc":"One of Quasar\'s embedded transitions (has effect only if \'animated\' prop is set)","examples":["fade","slide-down"],"category":"behavior","default":"slide-right/slide-down"},"transition-next":{"type":"String","desc":"One of Quasar\'s embedded transitions (has effect only if \'animated\' prop is set)","examples":["fade","slide-down"],"category":"behavior","default":"slide-left/slide-up"},"dark":{"type":"Boolean","desc":"Notify the component that the background is a dark color","category":"style","addedIn":"v1.3.0"},"height":{"type":"String","desc":"Height of Carousel in CSS units, including unit name","examples":["16px","2rem"],"category":"style"},"padding":{"type":"Boolean","desc":"Applies a default padding to each slide, according to the usage of \'arrows\' and \'navigation\' props","category":"content"},"control-color":{"type":"String","desc":"Color name for QCarousel button controls (arrows, navigation) from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style"},"control-text-color":{"type":"String","desc":"Color name for text color of QCarousel button controls (arrows, navigation) from the Quasar Color Palette","examples":["primary","teal-10"],"category":"style","addedIn":"v1.9.0"},"control-type":{"type":"String","desc":"Type of button to use for controls (arrows, navigation)","values":["regular","flat","outline","push","unelevated"],"category":"style","addedIn":"v1.9.0"},"autoplay":{"type":["Number","Boolean"],"desc":"Jump to next slide at fixed time intervals (in milliseconds); \'false\' disables autoplay, \'true\' enables it for 5000ms intervals","default":false,"examples":[":autoplay=\\"2500\\"",true,false],"category":"behavior"},"arrows":{"type":"Boolean","desc":"Show navigation arrow buttons","category":"content"},"prev-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"next-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"navigation":{"type":"Boolean","desc":"Show navigation dots","category":"content"},"navigation-position":{"type":"String","desc":"Side to stick navigation to","default":"bottom/right","values":["top","right","bottom","left"],"examples":["left"],"category":"content","addedIn":"v1.9.0"},"navigation-icon":{"type":"String","desc":"Icon name following Quasar convention; Make sure you have the icon library installed unless you are using \'img:\' prefix","examples":["map","ion-add","img:https://cdn.quasar.dev/logo/svg/quasar-logo.svg","img:statics/path/to/some_image.png"],"category":"content"},"thumbnails":{"type":"Boolean","desc":"Show thumbnails","category":"content"}},"slots":{"default":{"desc":"Suggestion: QCarouselSlide"},"control":{"desc":"Slot specific for QCarouselControl"}},"events":{"input":{"desc":"Emitted when the component changes the model; This event _isn\'t_ fired if the model is changed externally; Is also used by v-model","params":{"value":{"type":["String","Number"],"desc":"New current panel name","examples":["dashboard"]}}},"before-transition":{"desc":"Emitted before transitioning to a new panel","params":{"newVal":{"type":["String","Number"],"desc":"Panel name towards transition is going","examples":["dashboard"]},"oldVal":{"type":["String","Number"],"desc":"Panel name from which transition is happening","examples":["dashboard"]}}},"transition":{"desc":"Emitted after component transitioned to a new panel","params":{"newVal":{"type":["String","Number"],"desc":"Panel name towards transition has occurred","examples":["dashboard"]},"oldVal":{"type":["String","Number"],"desc":"Panel name from which transition has happened","examples":["dashboard"]}}}},"methods":{"toggleFullscreen":{"desc":"Toggle the view to be fullscreen or not fullscreen"},"setFullscreen":{"desc":"Enter the fullscreen view"},"exitFullscreen":{"desc":"Leave the fullscreen view"},"next":{"desc":"Go to next panel"},"previous":{"desc":"Go to previous panel"},"goTo":{"desc":"Go to specific panel","params":{"panelName":{"type":["String","Number"],"desc":"Panel\'s name, which may be a String or Number; Number does not refers to panel index, but to its name, which may be an Integer","required":true,"examples":["dashboard"]}}}}}')}}]);